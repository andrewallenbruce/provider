% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/opt_out.R
\name{opt_out}
\alias{opt_out}
\title{Search the Medicare Opt Out Affidavits API}
\source{
Centers for Medicare & Medicaid Services
}
\usage{
opt_out(
  first_name = NULL,
  last_name = NULL,
  npi = NULL,
  specialty = NULL,
  address = NULL,
  city = NULL,
  state = NULL,
  zip = NULL,
  eligible = NULL,
  clean_names = TRUE
)
}
\arguments{
\item{first_name}{First Name of the Opt Out Provider}

\item{last_name}{Last Name of the Opt Out Provider}

\item{npi}{National Provider Identifier (NPI) number of the Opt Out Provider}

\item{specialty}{Specialty of the Opt Out Provider}

\item{address}{Provider's Street Address}

\item{city}{Provider's City}

\item{state}{Provider's State Abbreviation}

\item{zip}{Provider's Zip Code}

\item{eligible}{Flag indicating whether the Provider is eligible to
Order and Refer}

\item{clean_names}{Convert column names to snakecase; default is \code{TRUE}.}
}
\value{
A \link[tibble:tibble-package]{tibble} containing the search results.
}
\description{
A list of practitioners who are currently opted out
of Medicare.
}
\details{
The Opt Out Affidavits dataset provides information on providers
who have decided not to participate in Medicare. It contains the
provider's NPI, specialty, address, and effective dates.
\subsection{Links}{
\itemize{
\item \href{https://data.cms.gov/provider-characteristics/medicare-provider-supplier-enrollment/opt-out-affidavits}{Medicare Opt Out Affidavits API}
}
}
}
\note{
Update Frequency: \strong{Monthly}
}
\examples{
opt_out(specialty = "Psychiatry", zip = "07626")
opt_out(first = "David", last = "Smith")
opt_out(npi = 1114974490)
opt_out(state = "NY", eligible = "N")
opt_out(city = "Los Angeles", address = "9201 W SUNSET BLVD")
\dontrun{
# Returns empty list i.e., provider is not in the database
opt_out(npi = 1326011057)

# Example of possible data cleaning
psych <- opt_out(specialty = "Psychiatry")

psych |>
dplyr::mutate(last_updated = as.Date(parsedate::parse_date(last_updated)),
optout_effective_date = as.Date(parsedate::parse_date(optout_effective_date)),
optout_end_date = as.Date(parsedate::parse_date(optout_end_date))) |>
age_days(date, optout_end_date, colname = "days_until_end") |>
age_days(last_updated, date, colname = "days_since_update") |>
age_days(optout_effective_date, date, colname = "days_since_optout") |>
dplyr::mutate(zip_code = purrr::map_chr(zip_code, format_zipcode)) |>
dplyr::mutate(address_full = full_address(.data, "first_line_street_address",
"second_line_street_address", "city_name", "state_code","zip_code"))
}
}
