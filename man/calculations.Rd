% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculations.R
\name{calculations}
\alias{calculations}
\alias{change}
\alias{years_df}
\title{Utility Functions}
\usage{
change(df, cols, digits = 3)

years_df(df, date_col)
}
\arguments{
\item{df}{data frame}

\item{cols}{numeric columns}

\item{digits}{Number of digits to round to, default is 3}

\item{date_col}{date column}
}
\value{
A \code{tibble}

number of years since today's date
}
\description{
Common utility functions
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

# Lagged absolute/relative change
# and cumulative sum of both:

dplyr::tibble(year = 2015:2020,
              pay  = sample(1000:2000, 6)) |>
change(c(pay))

# When performing a `group_by()`, watch for
# the correct order of the variables you're
# lagging by:

dplyr::tibble(year = rep(2020:2021, each = 2),
              grp = rep(c("a", "b"), 2),
              pay = sample(1000:2000, 4)) |>
dplyr::arrange(year) |>
dplyr::group_by(grp) |>
change(c(pay))
\dontshow{\}) # examplesIf}
# Count of the number of years between dates:

dplyr::tibble(date = lubridate::today() - 366) |>
years_df(date)

}
\keyword{internal}
