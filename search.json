[{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement andrewbruce.himni@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://andrewallenbruce.github.io/provider/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Andrew Bruce Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/Searching-the-NPPES.html","id":"the-nppes-npi-registry","dir":"Articles","previous_headings":"","what":"The NPPES NPI Registry","title":"Searching the NPPES","text":"NPPES NPI Registry Public Search free directory active National Provider Identifier (NPI) records. Healthcare providers acquire unique 10-digit NPIs identify standard way throughout industry. CMS supplies NPI, publish parts NPI record public relevance, including provider’s name, specialty (taxonomy) practice address. enables search providers NPPES (National Plan Provider Enumeration System.) information produced NPI Registry provided accordance NPPES Data Dissemination Notice. charge use NPI Registry.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/Searching-the-NPPES.html","id":"the-nppes-api","dir":"Articles","previous_headings":"The NPPES NPI Registry","what":"The NPPES API","title":"Searching the NPPES","text":"NPPES Application Programming Interface (API) faster alternative downloadable NPPES data files. allows systems access NPPES public data real-time, rather batched uploads. API retrieves data NPPES daily. API query return maximum 200 results per request. Skip field API let skip 1000 records. using two fields search criteria, can get maximum 1,200 records six requests.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/Searching-the-NPPES.html","id":"searching-the-nppes-by-npi","dir":"Articles","previous_headings":"","what":"Searching the NPPES by NPI","title":"Searching the NPPES","text":"following basic example searching NPI using using prov_npi_nppes(). argument provider’s 10-digit National Provider Identifier:   returns tibble containing NPI searched (search), datetime query, outcome status column data_lists, list-column containing collection variables nested data frames:   variables returned follows:  created_epoch: date NPI issued enumeration_type: NPI Entity Type, either NPI-1(individual) NPI-2(organizational) last_updated_epoch: date information last updated provider number: provider’s NPI, listed NPPES  Note: last_updated_epoch / created_epoch dates Unix time. repeated basic list last_updated enumeration_date, respectively.  list-columns returned follows:   basic: Basic information other_names: names used provider addresses: Primary location mailing addresses taxonomies: Specialty classification related information identifiers: Various identifiers payer-specific IDs, CLIA numbers, etc. practice_locations: Provider’s practice locations endpoints: Information regarding provider’s endpoints Health Information Exchange (HIE)  Note: list-columns may available every provider. depends factors NPI type, incorporated individual status, subpart delegation, , quite simply, information provided NPPES providers.","code":"# Load package library(provider)  # Query the NPPES API nppes_npi_resp <- provider_nppes(1114499340)  # View the results nppes_npi_resp #> # A tibble: 1 × 3 #>   datetime            outcome data_lists    #>   <dttm>              <chr>   <list>        #> 1 2022-12-11 22:01:52 results <df [1 × 11]> #> Error in loadNamespace(x): there is no package called 'lobstr' #> Error in loadNamespace(x): there is no package called 'lobstr' #> Error in loadNamespace(x): there is no package called 'lobstr'"},{"path":"https://andrewallenbruce.github.io/provider/articles/Searching-the-NPPES.html","id":"unpack-the-response","dir":"Articles","previous_headings":"Searching the NPPES by NPI","what":"Unpack the Response","title":"Searching the NPPES","text":"Flatten response tibble tidy data format prov_nppes_unpack():","code":"provider_unpack(nppes_npi_resp) #> # A tibble: 2 × 34 #>   npi     prov_…¹ first…² last_…³ crede…⁴ sole_…⁵ gender enume…⁶ last_…⁷ certi…⁸ #>   <chr>   <chr>   <chr>   <chr>   <chr>   <lgl>   <chr>  <chr>   <chr>   <chr>   #> 1 111449… Indivi… DOMINI… LOUDA   DPT     FALSE   M      2018-1… 2020-0… 2020-0… #> 2 111449… Indivi… DOMINI… LOUDA   DPT     FALSE   M      2018-1… 2020-0… 2020-0… #> # … with 24 more variables: status <chr>, name_prefix <chr>, #> #   country_code <chr>, address_purpose <chr>, address_1 <chr>, city <chr>, #> #   state <chr>, postal_code <chr>, telephone_number <chr>, taxon_code <chr>, #> #   taxonomy_group <chr>, taxon_desc <chr>, taxon_state <chr>, #> #   taxon_license <chr>, taxon_primary <lgl>, pract_country_abb <chr>, #> #   pract_country_name <chr>, pract_address_purpose <chr>, #> #   pract_address_type <chr>, pract_address_1 <chr>, pract_city <chr>, …"},{"path":"https://andrewallenbruce.github.io/provider/articles/Searching-the-NPPES.html","id":"search-for-multiple-npis","dir":"Articles","previous_headings":"","what":"Search for Multiple NPIs","title":"Searching the NPPES","text":"search one NPI time, two options, first create unnamed list (using c() opposed list()) said NPIs:   pipe list prov_npi_nppes() using purrr’s map_dfr() function loop list:   Unpacking response similar, adding dplyr’s group_split() function chain. parameter entered group_split() must search.   Searching column NPIs data frame slightly different. ’ll create data frame NPIs list example:   can even chain search unpack function chains together using |>, R’s lovely pipe. , group_split() input column containing NPIs. Split purrr, split purrr:  46 columns wide, output fairly unwieldy, really depends need data.","code":"npi_list <- c(1336413418, 1710975040, 1659781227, 1528060837) npi_list_resp <- npi_list |> purrr::map_dfr(provider_nppes) #> # A tibble: 4 × 3 #>   datetime            outcome data_lists       #>   <dttm>              <chr>   <list>           #> 1 2022-12-11 22:01:53 results <df [1 × 11]>    #> 2 2022-12-11 22:01:55 results <df [1 × 11]>    #> 3 2022-12-11 22:01:55 Errors  <tibble [1 × 2]> #> 4 2022-12-11 22:01:56 results <df [1 × 11]> npi_list_resp |> dplyr::group_split(outcome) |>                   purrr::map_dfr(provider_unpack) #> # A tibble: 33 × 42 #>    npi    prov_…¹ organ…² organ…³ enume…⁴ last_…⁵ certi…⁶ status autho…⁷ autho…⁸ #>    <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>  <chr>   <chr>   #>  1 16597… Deacti… NA      NA      NA      NA      NA      NA     NA      NA      #>  2 13364… Organi… LUMINU… NO      2012-0… 2020-0… 2020-0… A      Laurel  Gamage  #>  3 13364… Organi… LUMINU… NO      2012-0… 2020-0… 2020-0… A      Laurel  Gamage  #>  4 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #>  5 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #>  6 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #>  7 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #>  8 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #>  9 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #> 10 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #> # … with 23 more rows, 32 more variables: #> #   authorized_official_middle_name <chr>, #> #   authorized_official_telephone_number <chr>, #> #   authorized_official_title_or_position <chr>, #> #   authorized_official_name_prefix <chr>, first_name <chr>, last_name <chr>, #> #   middle_name <chr>, credential <chr>, sole_proprietor <lgl>, gender <chr>, #> #   name_prefix <chr>, name_suffix <chr>, country_code <chr>, … npi_df <- data.frame(npi = c(1336413418, 1710975040, 1659781227, 1528060837)) #>          npi #> 1 1336413418 #> 2 1710975040 #> 3 1659781227 #> 4 1528060837 npi_df_resp <- npi_df |> tibble::deframe() |>                           purrr::map_dfr(provider_nppes) |>                           dplyr::group_split(outcome) |>                           purrr::map_dfr(provider_unpack) #> # A tibble: 33 × 42 #>    npi    prov_…¹ organ…² organ…³ enume…⁴ last_…⁵ certi…⁶ status autho…⁷ autho…⁸ #>    <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>  <chr>   <chr>   #>  1 16597… Deacti… NA      NA      NA      NA      NA      NA     NA      NA      #>  2 13364… Organi… LUMINU… NO      2012-0… 2020-0… 2020-0… A      Laurel  Gamage  #>  3 13364… Organi… LUMINU… NO      2012-0… 2020-0… 2020-0… A      Laurel  Gamage  #>  4 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #>  5 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #>  6 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #>  7 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #>  8 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #>  9 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #> 10 17109… Indivi… NA      NA      2005-1… 2007-0… NA      A      NA      NA      #> # … with 23 more rows, 32 more variables: #> #   authorized_official_middle_name <chr>, #> #   authorized_official_telephone_number <chr>, #> #   authorized_official_title_or_position <chr>, #> #   authorized_official_name_prefix <chr>, first_name <chr>, last_name <chr>, #> #   middle_name <chr>, credential <chr>, sole_proprietor <lgl>, gender <chr>, #> #   name_prefix <chr>, name_suffix <chr>, country_code <chr>, … #> Error in loadNamespace(x): there is no package called 'kableExtra'"},{"path":"https://andrewallenbruce.github.io/provider/articles/Searching-the-NPPES.html","id":"constraints-for-invalid-parameters","dir":"Articles","previous_headings":"Search for Multiple NPIs","what":"Constraints for Invalid Parameters","title":"Searching the NPPES","text":"Several constraints implemented batter NPPES API invalid searches. input must 10 digits function throw error:   also must valid NPI. prov_npi_nppes() function checks validity using Luhn algorithm, per ’s implementation CMS (documented ):   Inputting letters throw error:   Luhn check catch letters wrapped quotes:   let quoted numbers :  long ’re 10 digits long.","code":"provider_nppes(123456789) #> # A tibble: 1 × 3 #>   datetime            outcome data_lists       #>   <dttm>              <chr>   <list>           #> 1 2022-12-11 22:02:01 Errors  <tibble [1 × 2]> provider_nppes(1234567891) #> # A tibble: 1 × 3 #>   datetime            outcome data_lists #>   <dttm>              <chr>   <list>     #> 1 2022-12-11 22:02:03 results <list [0]> provider_nppes(abcdefghij) #> Error in list2(...): object 'abcdefghij' not found provider_nppes(\"abcdefghij\") #> # A tibble: 1 × 3 #>   datetime            outcome data_lists       #>   <dttm>              <chr>   <list>           #> 1 2022-12-11 22:02:04 Errors  <tibble [1 × 2]> provider_nppes(\"123456789\") #> # A tibble: 1 × 3 #>   datetime            outcome data_lists       #>   <dttm>              <chr>   <list>           #> 1 2022-12-11 22:02:06 Errors  <tibble [1 × 2]>"},{"path":"https://andrewallenbruce.github.io/provider/articles/Searching-the-NPPES.html","id":"api-documentation-overview","dir":"Articles","previous_headings":"","what":"API Documentation Overview","title":"Searching the NPPES","text":"section outlines NPPES API’s documentation, going valid search inputs, constraints inputs, descriptions many possible outputs.","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/articles/Searching-the-NPPES.html","id":"enumeration-type","dir":"Articles","previous_headings":"API Documentation Overview > Terminology Notes","what":"Enumeration Type","title":"Searching the NPPES","text":"Two categories health care providers exist NPI enumeration purposes: Entity Type 1 (Individual) Entity Type 2 (Organizational).","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/Searching-the-NPPES.html","id":"npi-1-individual","dir":"Articles","previous_headings":"API Documentation Overview > Terminology Notes > Enumeration Type","what":"NPI-1: Individual","title":"Searching the NPPES","text":"Individual health care providers (including sole proprietors) may get NPI Entity Type 1. sole proprietor, must apply NPI using SSN, Employer Identification Number (EIN) even EIN. sole proprietor, may get one NPI, just like individual. following factors affect whether sole proprietor Entity Type 1: Number different office locations Whether employees Whether IRS issued EIN. incorporated individual single health care provider forms conducts business corporation. sole proprietor incorporated individual sole proprietor didn’t form corporation. ’re sole/solo practitioner, doesn’t necessarily mean ’re sole proprietor, vice versa. ’re individual health care provider ’s incorporated, may need get NPI (Entity Type 1) NPI corporation LLC (Entity Type 2).","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/Searching-the-NPPES.html","id":"npi-2-organizational","dir":"Articles","previous_headings":"API Documentation Overview > Terminology Notes > Enumeration Type","what":"NPI-2: Organizational","title":"Searching the NPPES","text":"Organizational health care providers group health care providers eligible NPIs Entity Type 2. Organization health care providers may single employee thousands employees. example incorporated individual organization’s employee. organization health care providers made parts work somewhat independently parent organization. parts may offer different types health care offer health care separate physical locations. parts physical locations aren’t legal entities part organization health care provider (legal entity). NPI Final Rule refers parts locations subparts. organization health care provider can get subparts NPIs. subpart conducts HIPAA standard transactions (separately parent), must get NPI. Subpart determination makes sure entities within covered organization uniquely identified HIPAA standard transactions conduct Medicare covered entities. example, hospital offers acute care, laboratory, pharmacy, rehabilitation services. subparts may need NPI sends standard transactions one health plans. Subpart delegation doesn’t affect Entity Type 1 health care providers. individuals, health care providers can’t choose subparts subparts.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/Searching-the-NPPES.html","id":"authorized-official","dir":"Articles","previous_headings":"API Documentation Overview > Terminology Notes > Enumeration Type","what":"Authorized Official","title":"Searching the NPPES","text":"appointed official (e.g., chief executive officer, chief financial officer, general partner, chairman board, direct owner) organization granted legal authority enroll Medicare program, make changes updates organization’s status Medicare program, commit organization fully abide statutes, regulations, program instructions Medicare program. See 42 CFR 424.502 additional information.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-miss-contact-info.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"CMS Public Reporting of Missing Digital Contact Information API","text":"Variable Term Definition npi NPI provider’s 10-digit National Provider Identifier. provider_name Provider Name Name provider. consists legal last name followed first name, separated comma.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/geocoding.html","id":"providers-current-practice-address","dir":"Articles","previous_headings":"","what":"Provider’s Current Practice Address","title":"Healthcare Providers: Why Geocode?","text":"","code":"geo_nppes <- provider_nppes(npi = 1760485387) |>               provider_unpack()  geo_nppes #> # A tibble: 16 × 32 #>    npi    prov_…¹ first…² last_…³ middl…⁴ crede…⁵ sole_…⁶ gender enume…⁷ last_…⁸ #>    <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <lgl>   <chr>  <chr>   <chr>   #>  1 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  2 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  3 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  4 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  5 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  6 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  7 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  8 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  9 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 10 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 11 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 12 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 13 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 14 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 15 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 16 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> # … with 22 more variables: status <chr>, name_prefix <chr>, name_suffix <chr>, #> #   country_code <chr>, address_purpose <chr>, address_1 <chr>, city <chr>, #> #   state <chr>, postal_code <chr>, telephone_number <chr>, fax_number <chr>, #> #   taxon_code <chr>, taxonomy_group <chr>, taxon_desc <chr>, #> #   taxon_state <chr>, taxon_license <chr>, taxon_primary <lgl>, #> #   ident_code <chr>, ident_desc <chr>, ident_issuer <lgl>, identifier <chr>, #> #   ident_state <chr>, and abbreviated variable names ¹​prov_type, … geo_add <- geo_nppes |>    dplyr::select(address_1, city, state, postal_code) |>   dplyr::filter(dplyr::row_number() %in% 1) |>    dplyr::mutate(address_1 = stringr::str_remove_all(address_1, \"\\\\.\"))  geo_add #> # A tibble: 1 × 4 #>   address_1       city       state postal_code #>   <chr>           <chr>      <chr> <chr>       #> 1 4570 CTY HWY 61 MOOSE LAKE MN    55767 geo_ltlg <- geo_add |> tidygeocoder::geocode(street = address_1,                                              city = city,                                              state = state,                                              postalcode = postal_code,                                              method = \"census\",                                              lat = latitude,                                               long = longitude,                                               full_results = TRUE) #> Passing 1 address to the US Census single address geocoder #> Query completed in: 0.8 seconds geo_ltlg #> # A tibble: 1 × 21 #>   address_1  city  state posta…¹ latit…² longi…³ match…⁴ tiger…⁵ tiger…⁶ addre…⁷ #>   <chr>      <chr> <chr> <chr>     <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   #> 1 4570 CTY … MOOS… MN    55767      46.4   -92.8 4570 C… R       162668… 55767   #> # … with 11 more variables: addressComponents.streetName <chr>, #> #   addressComponents.preType <chr>, addressComponents.city <chr>, #> #   addressComponents.preDirection <chr>, #> #   addressComponents.suffixDirection <chr>, #> #   addressComponents.fromAddress <chr>, addressComponents.state <chr>, #> #   addressComponents.suffixType <chr>, addressComponents.toAddress <chr>, #> #   addressComponents.suffixQualifier <chr>, … leaflet::leaflet() |>    leaflet::addTiles() |>    leaflet::addMarkers(lng = geo_ltlg$longitude,                        lat = geo_ltlg$latitude)"},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-ffs-prov-enroll.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"Medicare Fee-For-Service Public Provider Enrollment API","text":"Variable Term Definition npi National Provider Identifier NPI 10-digit unique numeric identifier providers must obtain enrolling Medicare. assigned health care providers upon application National Plan Provider Enumeration System (NPPES). pecos_asct_cntl_id PECOS Associate Control ID Provider associate level variable (PAC ID) PECOS database used link across tables. PAC ID 10-digit unique numeric identifier assigned individual organization PECOS. entity-level information (e.g., tax identification numbers organizational names) linked PAC ID. PAC ID may associated multiple Enrollment IDs individual organization enrolled multiple times different circumstances. enrlmt_id Enrollment ID Provider enrollment ID PECOS database used link across tables. Enrollment ID 15-digit unique alphanumeric identifier assigned new provider enrollment application. enrollment-level information (e.g., enrollment type, enrollment state, provider specialty reassignment benefits) linked Enrollment ID. provider_type_cd Provider Type Code Provider enrollment application enrollment specialty type, see PROVIDER_TYPE_CD - Reference description values. field shows provider’s primary specialty code. practitioners DME suppliers, please see Secondary Specialty file list secondary specialties (applicable). 20% practitioners DME suppliers least one secondary specialty. provider_type_desc Provider Type Description Provider enrollment application enrollment specialty type description, see PROVIDER_TYPE_CD - Reference description values. state_cd State Code Provider enrollment state, abbreviated location, see STATE_CD - Reference tab description values. Providers enroll state level, one PAC ID may associated multiple ENRLMT_IDs multiple STATE_CD values. first_name First Name Individual provider first name. mdl_name Middle Name Individual provider middle name. last_name Last Name Individual provider last name. org_name Organization Name Organizational provider name. gndr_sw Gender Individual provider gender, see GNDR_SW - Reference description values. reasgn_bnft_enrlmt_id Reassigning Benefits Enrollment ID Enrollment ID provider reassigning benefits bill Medicare. find enrollment information providers reassigning benefits bill Medicare, link REASGN_BNFT_ENRLMT_ID ENRLMT_ID Enrollment file. rcv_bnft_enrlmt_id Receiving Benefits Enrollment ID Enrollment ID provider receiving reassignment benefits bill Medicare. find enrollment information providers receiving reassignment benefits bill Medicare, link RCV_BNFT_ENRLMT_ID ENRLMT_ID Enrollment file. city_name City Name Provider practice location city. practice location linked Enrollment ID. provider reassigns benefits Enrollment ID listed Practice Location file, practice location also associated provider. zip_cd Zip Code Provider practice location zip code. practice location linked Enrollment ID. provider reassigns benefits Enrollment ID listed Practice Location file, practice location also associated provider.  Code Type Subtype 00-00 Part Provider Religious Non-Medical Health Care Institution (RNHCI) 00-01 Part Provider Community Mental Health Center 00-02 Part Provider Comprehensive Outpatient Rehabilitation Facility 00-03 Part Provider End-Stage Renal Disease Facility (Esrd) 00-04 Part Provider Federally Qualified Health Center (FQHC) 00-05 Part Provider Histocompatibility Laboratory 00-06 Part Provider Home Health Agency 00-07 Part Provider Home Health Agency (Subunit) 00-08 Part Provider Hospice 00-09 Part Provider Hospital 00-10 Part Provider Indian Health Services Facility 00-13 Part Provider Organ Procurement Organization (OPO) 00-14 Part Provider Outpatient Physical Therapy/Occupational Therapy/Speech Pathology Services 00-17 Part Provider Rural Health Clinic 00-18 Part Provider Skilled Nursing Facility 00-19 Part Provider 00-85 Part Provider Critical Access Hospital 12-23 Part B Supplier Sports Medicine 12-31 Part B Supplier Intensive Cardiac Rehabilitation 12-45 Part B Supplier Mammography Screening Center 12-47 Part B Supplier Independent Diagnostic Testing Facility (IDTF) 12-49 Part B Supplier Ambulatory Surgical Center 12-59 Part B Supplier Ambulance Service Supplier 12-60 Part B Supplier Public Health/Welfare Agency 12-61 Part B Supplier Voluntary Health/Charity Agency 12-63 Part B Supplier Portable X-Ray Supplier 12-65 Part B Supplier Physical/Occupational Therapy Group Private Practice 12-69 Part B Supplier Independent Clinical Laboratories (CLIA) 12-70 Part B Supplier Clinic/Group Practice 12-73 Part B Supplier Mass Immunization (Roster Biller ) 12-74 Part B Supplier Radiation Therapy Center 12-75 Part B Supplier Slide Preparation Facilities 12-87 Part B Supplier 12-C0 Part B Supplier Sleep Laboratory/Medicine 12-C1 Part B Supplier Centralized Flu Biller 12-Z1 Part B Supplier Hospital Department(s) 12-Z3 Part B Supplier Medicare + Choice Organization 12-Z4 Part B Supplier Medical Faculty Practice Plan 12-Z5 Part B Supplier Medical Care Group 14-01 Practitioner General Practice 14-02 Practitioner General Surgery 14-03 Practitioner Allergy/Immunology 14-04 Practitioner Otolaryngology 14-05 Practitioner Anesthesiology 14-06 Practitioner Cardiovascular Disease (Cardiology) 14-07 Practitioner Dermatology 14-08 Practitioner Family Practice 14-09 Practitioner Interventional Pain Management 14-10 Practitioner Gastroenterology 14-11 Practitioner Internal Medicine 14-12 Practitioner Osteopathic Manipulative Medicine 14-13 Practitioner Neurology 14-14 Practitioner Neurosurgery 14-15 Practitioner Speech Language Pathologist 14-16 Practitioner Obstetrics/Gynecology 14-17 Practitioner Hospice/Palliative Care 14-18 Practitioner Ophthalmology 14-19 Practitioner Oral Surgery (Dentist ) 14-20 Practitioner Orthopedic Surgery 14-21 Practitioner Cardiac Electrophysiology 14-22 Practitioner Pathology 14-23 Practitioner Sports Medicine 14-24 Practitioner Plastic Reconstructive Surgery 14-25 Practitioner Physical Medicine Rehabilitation 14-26 Practitioner Psychiatry 14-27 Practitioner Geriatric Psychiatry 14-28 Practitioner Colorectal Surgery (Proctology) 14-29 Practitioner Pulmonary Disease 14-30 Practitioner Diagnostic Radiology 14-32 Practitioner Anesthesiology Assistant 14-33 Practitioner Thoracic Surgery 14-34 Practitioner Urology 14-35 Practitioner Chiropractic 14-36 Practitioner Nuclear Medicine 14-37 Practitioner Pediatric Medicine 14-38 Practitioner Geriatric Medicine 14-39 Practitioner Nephrology 14-40 Practitioner Hand Surgery 14-41 Practitioner Optometry 14-42 Practitioner Certified Nurse Midwife 14-43 Practitioner Certified Registered Nurse Anesthetist 14-44 Practitioner Infectious Disease 14-46 Practitioner Endocrinology 14-48 Practitioner Podiatry 14-50 Practitioner Nurse Practitioner 14-62 Practitioner Psychologist Billing Independently 14-64 Practitioner Audiologist 14-65 Practitioner Physical Therapist 14-66 Practitioner Rheumatology 14-67 Practitioner Occupational Therapist 14-68 Practitioner Clinical Psychologist 14-70 Practitioner Single Multispecialty Clinic Group Practice 14-71 Practitioner Registered Dietitian Nutrition Professional 14-72 Practitioner Pain Management 14-73 Practitioner Mass Immunization Roster Biller 14-76 Practitioner Peripheral Vascular Disease 14-77 Practitioner Vascular Surgery 14-78 Practitioner Cardiac Surgery 14-79 Practitioner Addiction Medicine 14-80 Practitioner Clinical Social Worker 14-81 Practitioner Critical Care (Intensivists) 14-82 Practitioner Hematology 14-83 Practitioner Hematology/Oncology 14-84 Practitioner Preventative Medicine 14-85 Practitioner Maxillofacial Surgery 14-86 Practitioner Neuropsychiatry 14-88 Practitioner (Non-Physician) 14-89 Practitioner Clinical Nurse Specialist 14-90 Practitioner Medical Oncology 14-91 Practitioner Surgical Oncology 14-92 Practitioner Radiation Oncology 14-93 Practitioner Emergency Medicine 14-94 Practitioner Interventional Radiology 14-97 Practitioner Physician Assistant 14-98 Practitioner Gynecological Oncology 14-99 Practitioner (Physician) 14-99 Practitioner 14-C0 Practitioner Sleep Laboratory/Medicine 14-C3 Practitioner Interventional Cardiology 30-01 DME Supplier Physician - General Practice 30-02 DME Supplier Physician - General Surgery 30-03 DME Supplier Physician - Allergy/Immunology 30-04 DME Supplier Physician - Otolaryngology 30-05 DME Supplier Physician - Anesthesiology 30-06 DME Supplier Physician - Cardiology 30-07 DME Supplier Physician - Dermatology 30-08 DME Supplier Physician - Family Practice 30-11 DME Supplier Physician - Internal Medicine 30-12 DME Supplier Physician - Osteopathic Manipulative Medicine 30-13 DME Supplier Physician - Neurology 30-14 DME Supplier Physician - Neurosurgery 30-16 DME Supplier Physician - Obstetrics/Gynecology 30-18 DME Supplier Physician - Ophthalmology 30-19 DME Supplier Oral Surgery - Dentist 30-20 DME Supplier Physician - Orthopedic/Orthopedic Surgery 30-23 DME Supplier Sports Medicine 30-24 DME Supplier Physician - Plastic Reconstructive Surgery 30-25 DME Supplier Physician - Physical Rehabilitation 30-26 DME Supplier Physician - Psychiatry 30-29 DME Supplier Physician - Pulmonary Disease 30-30 DME Supplier Physician - Diagnostic Radiology 30-34 DME Supplier Physician - Urology 30-35 DME Supplier Physician - Chiropractic 30-37 DME Supplier Physician - Pediatric Medicine 30-38 DME Supplier Physician - Geriatric Medicine 30-40 DME Supplier Physician - Hand Surgery 30-41 DME Supplier Physician - Optometrist 30-44 DME Supplier Physician - Infectious Disease 30-46 DME Supplier Physician - Endocrinology 30-48 DME Supplier Physician - Podiatry 30-49 DME Supplier Ambulatory Surgical Center 30-50 DME Supplier Nurse Practitioner 30-51 DME Supplier Medical Supply Company Orthotic Personnel 30-52 DME Supplier Medical Supply Company Prosthetic Personnel 30-53 DME Supplier Medical Supply Company Orthotic-Prosthetic 30-54 DME Supplier Medical Supply Company 30-55 DME Supplier Orthotic Personnel 30-56 DME Supplier Prosthetic Personnel 30-57 DME Supplier Certified Orth/Pros/Pedorthist 30-58 DME Supplier Medical Supply Company Registered Pharmacist 30-59 DME Supplier Ambulance Service Supplier 30-61 DME Supplier Voluntary Health Charitable Agencies 30-63 DME Supplier Portable X-Ray Supplier 30-64 DME Supplier Independently-Billing Audiologist 30-65 DME Supplier Independently-Practicing Physical Therapist 30-66 DME Supplier Physician - Rheumatology 30-67 DME Supplier Independently-Practicing Occupational Therapist 30-70 DME Supplier Multi-Specialty - Physician 30-72 DME Supplier Physician - Interventional Pain Management 30-76 DME Supplier Physician - Peripheral Vascular Disease 30-77 DME Supplier Physician - Vascular Surgery 30-79 DME Supplier Physician - Addiction Medicine 30-82 DME Supplier Physician - Hematology 30-83 DME Supplier Physician - Hematology/Oncology 30-84 DME Supplier Physician - Preventive Medicine 30-85 DME Supplier Physician - Maxillofacial Surgery 30-87 DME Supplier 30-88 DME Supplier Unknown Supplier/Provider 30-89 DME Supplier Certified Clinical Nurse Specialist 30-90 DME Supplier Physician - Medical Oncology 30-91 DME Supplier Physician - Surgical Oncology 30-92 DME Supplier Physician - Radiation Oncology 30-93 DME Supplier Physician - Emergency Medicine 30-94 DME Supplier Physician - Interventional Radiology 30-95 DME Supplier Independent Physiological Lab 30-96 DME Supplier Optician 30-97 DME Supplier Physician Assistant 30-99 DME Supplier Physician - Unknown Physician Specialty 30-A0 DME Supplier Hospital 30-A1 DME Supplier Nursing Facility 30-A2 DME Supplier Nursing Facility Intermediate Care 30-A3 DME Supplier Skilled Nursing Facility 30-A4 DME Supplier Home Health Agency 30-A5 DME Supplier Pharmacy 30-A6 DME Supplier Medical Supply Company Respiratory Therapist 30-A7 DME Supplier Department Store 30-A8 DME Supplier Grocery Store 30-A9 DME Supplier Indian Health Service Tribal Facility 30-B1 DME Supplier Oxygen & Equipment 30-B2 DME Supplier Pedorthic Personnel 30-B3 DME Supplier Medical Supply Company Pedorthic Personnel 30-B4 DME Supplier Rehabilitation Agency 30-B5 DME Supplier Ocularist 30-C0 DME Supplier Sleep Laboratory/Medicine 33-01 Order Referring General Practice 33-02 Order Referring General Surgery 33-03 Order Referring Allergy/Immunology 33-04 Order Referring Otolaryngology 33-05 Order Referring Anesthesiology 33-06 Order Referring Cardiovascular Disease (Cardiology) 33-07 Order Referring Dermatology 33-08 Order Referring Family Practice 33-09 Order Referring Interventional Pain Management 33-10 Order Referring Gastroenterology 33-11 Order Referring Internal Medicine 33-12 Order Referring Osteopathic Manipulative Medicine 33-13 Order Referring Neurology 33-14 Order Referring Neurosurgery 33-16 Order Referring Obstetrics/Gynecology 33-17 Order Referring Hospice/Palliative Care 33-18 Order Referring Ophthalmology 33-19 Order Referring Oral Surgery (Dentist ) 33-20 Order Referring Orthopedic Surgery 33-21 Order Referring Cardiac Electrophysiology 33-22 Order Referring Pathology 33-23 Order Referring Sports Medicine 33-24 Order Referring Plastic Reconstructive Surgery 33-25 Order Referring Physical Medicine Rehabilitation 33-26 Order Referring Psychiatry 33-27 Order Referring Geriatric Psychiatry 33-28 Order Referring Colorectal Surgery (Proctology) 33-29 Order Referring Pulmonary Disease 33-30 Order Referring Diagnostic Radiology 33-33 Order Referring Thoracic Surgery 33-34 Order Referring Urology 33-35 Order Referring Chiropractic 33-36 Order Referring Nuclear Medicine 33-37 Order Referring Pediatric Medicine 33-38 Order Referring Geriatric Medicine 33-39 Order Referring Nephrology 33-40 Order Referring Hand Surgery 33-41 Order Referring Optometry 33-42 Order Referring Certified Nurse Midwife 33-43 Order Referring Certified Registered Nurse Anesthetist 33-44 Order Referring Infectious Disease 33-46 Order Referring Endocrinology 33-48 Order Referring Podiatry 33-50 Order Referring Nurse Practitioner 33-62 Order Referring Psychologist Billing Independently 33-66 Order Referring Rheumatology 33-68 Order Referring Clinical Psychologist 33-71 Order Referring Registered Dietitian Nutrition Professional 33-72 Order Referring Pain Management 33-76 Order Referring Peripheral Vascular Disease 33-77 Order Referring Vascular Surgery 33-78 Order Referring Cardiac Surgery 33-79 Order Referring Addiction Medicine 33-80 Order Referring Clinical Social Worker 33-81 Order Referring Critical Care (Intensivists) 33-82 Order Referring Hematology 33-83 Order Referring Hematology/Oncology 33-84 Order Referring Preventative Medicine 33-85 Order Referring Maxillofacial Surgery 33-86 Order Referring Neuropsychiatry 33-88 Order Referring (Non-Physician) 33-89 Order Referring Clinical Nurse Specialist 33-90 Order Referring Medical Oncology 33-91 Order Referring Surgical Oncology 33-92 Order Referring Radiation Oncology 33-93 Order Referring Emergency Medicine 33-94 Order Referring Interventional Radiology 33-97 Order Referring Physician Assistant 33-98 Order Referring Gynecological Oncology 33-99 Order Referring (Physician) 33-C0 Order Referring Sleep Laboratory/Medicine 33-C3 Order Referring Interventional Cardiology 53-D1 MDPP Supplier -Person MDPP Supplier","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-opt-out-affid.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"Medicare Opt Out Affidavits API","text":"Variable Term Definition first_name First Name First Name Opt Provider last_name Last Name Last Name Opt Provider npi NPI National Provider Identifier (NPI) number Opt Provider specialty Specialty Specialty Opt Provider optout_effective_date Optout Effective Date Date Provider’s Opt Status effective optout_end_date Optout End Date Date Provider’s Opt Status ends first_line_street_address First Line Street Address Provider’s Street Address second_line_street_address Second Line Street Address Provider’s Street Address city_name City Name Provider’s City state_code State Code Provider’s State Abbreviation zip_code Zip Code Provider’s Zip Code eligible_to_order_and_refer Eligible Order Refer Flag indicating whether Provider eligible Order Refer","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-ord-referring.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"Medicare Order and Referring API","text":"Variable Term Definition npi NPI National Provider Identifier (NPI) Order Referring Provider last_name Last Name Last Name Order Referring Provider first_name First Name First Name Order Referring Provider partb Part B Indicates Provider can refer Medicare Part B dme DME Indicates Provider can order Durable Medical Equipment (DME) hha HHA Indicates Provider can refer Home Health Agency (HHA) pmd PMD Indicates Provider can order Power Mobility Devices (PMDs)","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-phys-other-pract.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Medicare Physician & Other Practitioners APIs","text":"Centers Medicare & Medicaid Services (CMS) prepared public data set, Provider Utilization Payment Data Physician Practitioners Dataset, information services procedures provided Medicare beneficiaries physicians healthcare professionals. Physician Practitioners Dataset contains information utilization, payment (allowed amount Medicare payment), submitted charges organized National Provider Identifier (NPI), Healthcare Common Procedure Coding System (HCPCS) code, place service. data Physician Practitioners dataset contains 100% final-action (.e., claim adjustments resolved) physician/supplier Part B non-institutional line items Medicare fee--service (FFS) population. Claims processed Durable Medical Equipment, Prosthetic, Orthotics Supplies (DMEPOS) Medicare Administrative Contractor (MAC) included Physician Practitioners Dataset.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-phys-other-pract.html","id":"key-data-sources","dir":"Articles","previous_headings":"","what":"Key Data Sources","title":"Medicare Physician & Other Practitioners APIs","text":"data Physician Practitioners Dataset based upon CMS administrative claims data Medicare beneficiaries enrolled fee--service program. data available CMS Chronic Condition Data Warehouse (CCW), database 100% Medicare enrollment fee--service claims data. Service counts, beneficiary counts, provider charges, Medicare allowed amounts payments place service indicator summarized Part B non-institutional claims processed Medicare Administrative Contractor (MAC) Jurisdictions (NCH Claim Type Codes ‘71’, ‘72’). Please see CCW website additional information.  Physician Practitioners Dataset data years, provider demographics (name, credentials, gender, complete address entity type) included National Plan & Provider Enumeration System (NPPES). CMS developed NPPES assign unique identifiers, known National Provider Identifiers (NPIs), health care providers. health care provider’s demographic information collected time enrollment updated periodically. demographics information provided Physician Practitioners Dataset extracted NPPES end calendar year following reporting year (e.g. CY2017 reporting year, NPPES data extracted end calendar year 2018). Please visit NPPES website additional information.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-phys-other-pract.html","id":"population","dir":"Articles","previous_headings":"","what":"Population","title":"Medicare Physician & Other Practitioners APIs","text":"Physician Practitioners Dataset includes data providers valid NPI submitted Medicare Part B non-institutional claims (excluding DMEPOS) reporting period. protect privacy Medicare beneficiaries, aggregated records derived 10 fewer beneficiaries excluded Physician Practitioners Dataset.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-phys-other-pract.html","id":"data-limitations","dir":"Articles","previous_headings":"","what":"Data Limitations","title":"Medicare Physician & Other Practitioners APIs","text":"Although Physician Practitioners Dataset wealth payment utilization information many Medicare Part B services, dataset also number limitations worth noting.  First, data Physician Practitioners Dataset may representative physician’s entire practice. data file information Medicare beneficiaries Part B FFS coverage, physicians typically treat many patients form coverage. Physician Practitioners Dataset information patients covered Medicare, coverage federal programs (like Federal Employees Health Benefits Program Tricare), private health insurance (individual policy employer-sponsored coverage), uninsured. Even within Medicare, Physician Practitioners Dataset include information patients enrolled form Medicare Advantage plan.  information presented file also indicate quality care provided individual physicians. file contains cost utilization information, reasons described preceding paragraph, volume procedures presented may fully inclusive procedures performed provider. Medicare allowed amounts Medicare payments given HCPCS code/place service can vary based number factors, including modifiers, geography, services performed day/visit. example, modifiers (two-character designators signal change HCPCS code procedure service applied) may included claim line service intensity increased decreased, additional physician administered services, service provided differs procedure definition. cases, modifiers impact allowed amounts payments. addition, allowed amounts payments vary geographically Medicare makes adjustments services based area’s cost living. Allowed amounts payments can also adjusted physician renders multiple services beneficiary day, referred multiple procedure payment reduction. standard payment allowed amount rates CPT/HCPCS code, please visit Physician fee schedule.  general, provider administers drugs patient, provider purchases drug Medicare pays provider 106% average sales price (ASP) drug. Although ASP list used datasets define drug services, drugs listed ASP fee schedule complete listing drugs paid part B, ASP fee schedule represents majority drugs used office. information payments drugs covered Part B, please visit ASP Drug Pricing.  Additionally, data risk adjusted thus account difference underlying severity disease patient populations treated providers. However, provided average beneficiary risk scores “Medicare Physician Practitioners Provider Dataset” (.e., one record per NPI) provide information health status beneficiaries providers serve. Also, since data presented summarized actual claims received providers attempts made modify data (.e., statistical outliers removed truncated), rare instances average submitted charge amount may reflect errors included claims submitted providers.  noted earlier, file include data services performed 10 fewer beneficiaries, users aware summing data file may underestimate true Part B FFS totals. addition, providers bill individual NPI organizational NPI. case, users determine provider’s actual total way identify individual’s portion billed organization.  Medicare pays differently services provided facility setting versus freestanding physicians’ office (non-facility setting). services delivered facility setting, Medicare makes two payments, one physician’s professional fee one facility. services delivered facility (Place_Of_Srvc = ”F”), data Physician Practitioners Dataset generally represents physician’s professional fee include facility payment. exception services delivered Ambulatory Surgical Centers (ASCs). cases, physician’s professional fee ASC’s fee represented Physician Practitioners Dataset. ASCs can identified using provider type. services delivered non-facility setting, physician’s office (Place_Of_Srvc = ”O”), Physician Practitioners Dataset represents complete payment service.  users try link data file public datasets, please aware particular Medicare populations included timeframes used file merged. example, efforts link Physician Practitioners Dataset data Part D prescription drug data need account fact beneficiaries FFS Part B coverage (thus included Physician Practitioners Dataset) Part D drug coverage (thus represented Part D data files). time, beneficiaries Part D coverage (thus included Part D data) FFS Part B coverage (thus included Physician Practitioners Dataset). Another example linking data constructed different non-aligning time periods, publically available data physician referral patterns, based 18-month period.  Finally, users aware payments CMS demonstration programs included Physician Practitioners Dataset. Since CMS demonstration programs utilize Medicare claims submission process, payments services demonstrations included data file may grouped specific demonstration HCPCS codes aggregated non-demonstration specific HCPCS codes. Demonstration programs paid outside Medicare claims submission process included Physician Practitioners Dataset.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-phys-other-pract.html","id":"additional-information","dir":"Articles","previous_headings":"","what":"Additional Information","title":"Medicare Physician & Other Practitioners APIs","text":"Data Sources CMS also releases “Medicare Fee--Service Public Provider Enrollment Data” include provider name address information Provider Enrollment Chain Ownership System (PECOS). data updated quarterly basis available data.cms.gov.  Medicare Standardized Spending Users can find information Medicare payment standardization referring Geographic Variation Methodology available within “Risk adjustment standardization” section following web page: Geographic Variation Methodology.  HCCs (Hierarchical Condition Categories) CMS developed risk-adjustment model uses HCCs (hierarchical condition categories) assign risk scores. scores estimate beneficiaries’ FFS spending compare overall average entire Medicare population. summary average risk scores beneficiaries represented calendar year Medicare Physician & Practitioners - Provider dataset located “Resources’” section following web page: Medicare Physician & Practitioners - Provider. Beneficiaries scores greater average risk score expected -average spending, vice versa. Risk scores based beneficiary’s age sex; whether beneficiary eligible Medicaid, first qualified Medicare basis disability, lives institution (usually nursing home); beneficiary’s diagnoses previous year.  HCC model designed risk adjustment larger populations, enrollees MA plan, generates accurate results used compare groups beneficiaries rather individuals. Please visit HCC risk score information.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-phys-other-pract.html","id":"dataset-provider","dir":"Articles","previous_headings":"","what":"Dataset: Provider","title":"Medicare Physician & Other Practitioners APIs","text":"Provider data subset provides information use, payments, submitted charges beneficiary demographic health characteristics organized National Provider Identifier (NPI). dataset based information gathered CMS administrative claims data Original Medicare Part B beneficiaries available CMS Chronic Conditions Data Warehouse. Data update frequency: Annually Data source: Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-phys-other-pract.html","id":"data-dictionary","dir":"Articles","previous_headings":"Dataset: Provider","what":"Data Dictionary","title":"Medicare Physician & Other Practitioners APIs","text":"Variable Term Definition rndrng_npi National Provider Identifier National Provider Identifier (NPI) rendering provider claim. provider NPI numeric identifier registered NPPES. rndrng_prvdr_last_org_name Last Name/Organization Name Provider provider registered NPPES individual (entity type code=’’), provider’s last name. provider registered organization (entity type code = ‘O’), organization name. rndrng_prvdr_first_name First Name Provider provider registered NPPES individual (entity type code=’’), provider’s first name. provider registered organization (entity type code = ‘O’), blank. rndrng_prvdr_mi Middle Initial Provider provider registered NPPES individual (entity type code=’’), provider’s middle initial. provider registered organization (entity type code = ‘O’), blank. rndrng_prvdr_crdntls Credentials Provider provider registered NPPES individual (entity type code=’’), provider’s credentials. provider registered organization (entity type code = ‘O’), blank. rndrng_prvdr_gndr Gender Provider provider registered NPPES individual (entity type code=’’), provider’s gender. provider registered organization (entity type code = ‘O’), blank. rndrng_prvdr_ent_cd Entity Type Provider Type entity reported NPPES. entity code ‘’ identifies providers registered individuals entity type code ‘O’ identifies providers registered organizations. rndrng_prvdr_st1 Street Address 1 Provider first line provider’s street address, reported NPPES. rndrng_prvdr_st2 Street Address 2 Provider second line provider’s street address, reported NPPES. rndrng_prvdr_city City Provider city provider located, reported NPPES. rndrng_prvdr_state_abrvtn State Abbreviation Provider state provider located, reported NPPES. fifty U.S. states District Columbia reported state postal abbreviation. following values used areas: rndrng_prvdr_state_fips State FIPS Code Provider FIPS code rendering provider’s state. rndrng_prvdr_zip5 Zip Code Provider provider’s zip code, reported NPPES. rndrng_prvdr_ruca RUCA Code Provider Rural-Urban Commuting Area Codes (RUCAs), Census tract-based classification scheme utilizes standard Bureau Census Urbanized Area Urban Cluster definitions combination work commuting information characterize nation’s Census tracts regarding rural urban status relationships. Referring Provider ZIP code cross walked United States Department Agriculture (USDA) 2010 Rural-Urban Commuting Area Codes. rndrng_prvdr_ruca_desc RUCA Description Description Rural-Urban Commuting Area (RUCA) Code rndrng_prvdr_cntry Country Code Provider country provider located, reported NPPES. country code ‘US’ state U.S. possession. foreign countries (.e., state values ‘ZZ’), provider country values include following: rndrng_prvdr_type Provider Type Provider Derived provider specialty code reported claim. providers reported one specialty code claims, specialty code associated largest number services. rndrng_prvdr_mdcr_prtcptg_ind Medicare Participation Indicator Identifies whether provider participates Medicare /accepts assignment Medicare allowed amounts. value ‘Y’ provider least one claim identifying provider participating Medicare accepting assignment Medicare allowed amounts within HCPCS code place service. non-participating provider may elect accept Medicare allowed amounts services accept Medicare allowed amounts services. tot_hcpcs_cds Number HCPCS Total number unique HCPCS codes. tot_benes Number Medicare Beneficiaries Total Medicare beneficiaries receiving services provider. beneficiary counts reported demographic sub-groups (.e., age, sex, race entitlement) may aggregate ‘Number Unique Beneficiaries’ due suppression beneficiaries fewer 11 within demographic sub-groups. addition, small percentage beneficiaries reflected “Number Unique Beneficiaries” reflected beneficiary demographic information due lack demographic information available time reporting. tot_srvcs Number Services Total provider services. tot_sbmtd_chrg Total Submitted Charge Amount total charges provider submitted services. tot_mdcr_alowd_amt Total Medicare Allowed Amount Medicare allowed amount provider services. figure sum amount Medicare pays, deductible coinsurance amounts beneficiary responsible paying, amounts third party responsible paying. tot_mdcr_pymt_amt Total Medicare Payment Amount Total amount Medicare paid deductible coinsurance amounts deducted provider’s line item services. tot_mdcr_stdzd_amt Total Medicare Standardized Payment Amount Total amount Medicare paid deductible coinsurance amounts deducted line item service standardization Medicare payment applied. Standardization removes geographic differences payment rates individual services, account local wages input prices makes Medicare payments across geographic areas comparable, differences reflect variation factors physicians’ practice patterns beneficiaries’ ability willingness obtain care. drug_sprsn_ind Drug Suppress Indicator Identifies whether utilization, cost payment information associated HCPCS codes drug services listed Medicare Part B Drug Average Sales Price (ASP) list suppressed. ’*’ identifies suppressed information based fewer 11 beneficiaries ‘#’ identifies information counter suppressed prevent re-calculation information suppressed due fewer 11 beneficiaries. example, information associated Drug services suppressed fewer 11 beneficiaries received services provider, information associated Medical services must also suppressed information associated Drug services recalculated subtracting Medical values provider’s overall values. drug_tot_hcpcs_cds Number HCPCS Associated Drug Services Total number HCPCS codes drug services, defined Medicare Part B Drug ASP File. drug_tot_benes Number Medicare Beneficiaries Drug Services Total Medicare beneficiaries receiving drug services, defined Medicare Part B Drug ASP File. drug_tot_srvcs Number Drug Services Total drug services, defined Medicare Part B Drug ASP File. drug_sbmtd_chrg Total Drug Submitted Charge Amount total charges provider submitted drug services, defined Medicare Part B Drug ASP File. drug_mdcr_alowd_amt Total Drug Medicare Allowed Amount Medicare allowed amount drug services, defined Medicare Part B Drug ASP File. figure sum amount Medicare pays, deductible coinsurance amounts beneficiary responsible paying, amounts third party responsible paying. drug_mdcr_pymt_amt Total Drug Medicare Payment Amount Total amount Medicare paid deductible coinsurance amounts deducted provider’s line item drug services, defined Medicare Part B Drug ASP File. drug_mdcr_stdzd_amt Total Drug Medicare Standardized Payment Amount Total amount Medicare paid deductible coinsurance amounts deducted line item drug service, defined Medicare Part B Drug ASP File standardization Medicare payment applied. Standardization removes geographic differences payment rates individual services, account local wages input prices makes Medicare payments across geographic areas comparable, differences reflect variation factors physicians’ practice patterns beneficiaries’ ability willingness obtain care. med_sprsn_ind Medical Suppress Indicator Identifies whether utilization, cost payment information associated HCPCS codes Medical (non-ASP) services suppressed. ’*’ identifies suppressed information based fewer 11 beneficiaries ‘#’ identifies information counter suppressed prevent re-calculation information suppressed due fewer 11 beneficiaries. example, information associated Medical (non-ASP) services suppressed fewer 11 beneficiaries received services provider, information associated Drug services must also suppressed information associated Medical services recalculated subtracting Drug values provider’s overall values. med_tot_hcpcs_cds Number HCPCS Associated Medical Services Total number HCPCS codes associated medical (non-ASP) services. med_tot_benes Number Medicare Beneficiaries Medical Services Total Medicare beneficiaries receiving medical (non-ASP) services. med_tot_srvcs Number Medical Services Total medical (non-ASP) services. med_sbmtd_chrg Total Medical Submitted Charge Amount total charges provider submitted medical (non-ASP) services. med_mdcr_alowd_amt Total Medical Medicare Allowed Amount Medicare allowed amount medical (non-ASP) services. figure sum amount Medicare pays, deductible coinsurance amounts beneficiary responsible paying, amounts third party responsible paying. med_mdcr_pymt_amt Total Medical Medicare Payment Amount Total amount Medicare paid deductible coinsurance amounts deducted provider’s line item medical (non-ASP) services. med_mdcr_stdzd_amt Total Medical Medicare Standardized Payment Amount Total amount Medicare paid deductible coinsurance amounts deducted line item medical (non-ASP) service, defined Medicare Part B Drug ASP File standardization Medicare payment applied. Standardization removes geographic differences payment rates individual services, account local wages input prices makes Medicare payments across geographic areas comparable, differences reflect variation factors physicians’ practice patterns beneficiaries’ ability willingness obtain care. bene_avg_age Average Age Beneficiaries Average age beneficiaries. Beneficiary age calculated end calendar year time death. bene_age_lt_65_cnt Number Beneficiaries Age Less 65 Number beneficiaries age 65. Beneficiary age calculated end calendar year time death. bene_age_65_74_cnt Number Beneficiaries Age 65 74 Number beneficiaries ages 65 74. Beneficiary age calculated end calendar year time death. bene_age_75_84_cnt Number Beneficiaries Age 75 84 Number beneficiaries ages 75 84. Beneficiary age calculated end calendar year time death. bene_age_gt_84_cnt Number Beneficiaries Age Greater 84 Number beneficiaries age 84. Beneficiary age calculated end calendar year time death. bene_feml_cnt Number Female Beneficiaries Number female beneficiaries. bene_male_cnt Number Male Beneficiaries Number male beneficiaries. bene_race_wht_cnt Number Non-Hispanic White Beneficiaries Number non-Hispanic white beneficiaries. Race/ethnicity information based variable RTI_RACE_CD CMS CCW enrollment database. RTI_RACE_CD variable based upon validated algorithm uses Census surname lists geography improve accuracy race/ethnicity classification, particularly Hispanic Asian/Pacific Islanders. bene_race_black_cnt Number Black African American Beneficiaries Number non-Hispanic black African American beneficiaries. Race/ethnicity information based variable RTI_RACE_CD CMS CCW enrollment database. RTI_RACE_CD variable based upon validated algorithm uses Census surname lists geography improve accuracy race/ethnicity classification, particularly Hispanic Asian/Pacific Islanders. bene_race_api_cnt Number Asian Pacific Islander Beneficiaries Number Asian Pacific Islander beneficiaries. Race/ethnicity information based variable RTI_RACE_CD CMS CCW enrollment database. RTI_RACE_CD variable based upon validated algorithm uses Census surname lists geography improve accuracy race/ethnicity classification, particularly Hispanic Asian/Pacific Islanders. bene_race_hspnc_cnt Number Hispanic Beneficiaries Number Hispanic beneficiaries. Race/ethnicity information based variable RTI_RACE_CD CMS CCW enrollment database. RTI_RACE_CD variable based upon validated algorithm uses Census surname lists geography improve accuracy race/ethnicity classification, particularly Hispanic Asian/Pacific Islanders. bene_race_natind_cnt Number American Indian/Alaska Native Beneficiaries Number American Indian Alaska Native beneficiaries. Race/ethnicity information based variable RTI_RACE_CD CMS CCW enrollment database. RTI_RACE_CD variable based upon validated algorithm uses Census surname lists geography improve accuracy race/ethnicity classification, particularly Hispanic Asian/Pacific Islanders. bene_race_othr_cnt Number Beneficiaries Race Elsewhere Classified Number beneficiaries race elsewhere classified. bene_dual_cnt Number Beneficiaries Medicare & Medicaid Entitlement Number Medicare beneficiaries qualified receive Medicare Medicaid benefits. Beneficiaries classified Medicare Medicaid entitlement month given calendar year receiving full partial Medicaid benefits. bene_ndual_cnt Number Beneficiaries Medicare Entitlement Number Medicare beneficiaries qualified receive Medicare benefits. Beneficiaries classified Medicare entitlement received zero months Medicaid benefits (full partial) given calendar year. bene_cc_af_pct Percent (%) Beneficiaries Identified Atrial Fibrillation Percent beneficiaries meeting CCW chronic condition algorithm atrial fibrillation. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_alzhmr_pct Percent (%) Beneficiaries Identified Alzheimer’s Disease Dementia Percent beneficiaries meeting CCW chronic condition algorithm Alzheimer’s, related disorders, dementia. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_asthma_pct Percent (%) Beneficiaries Identified Asthma Percent beneficiaries meeting CCW chronic condition algorithm Asthma. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_cncr_pct Percent (%) Beneficiaries Identified Cancer Percent beneficiaries meeting CCW chronic condition algorithms cancer. Includes breast cancer, colorectal cancer, lung cancer prostate cancer. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_chf_pct Percent (%) Beneficiaries Identified Heart Failure Percent beneficiaries meeting CCW chronic condition algorithm heart failure. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_ckd_pct Percent (%) Beneficiaries Identified Chronic Kidney Disease Percent beneficiaries meeting CCW chronic condition algorithm chronic kidney disease.protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_copd_pct Percent (%) Beneficiaries Identified Chronic Obstructive Pulmonary Disease Percent beneficiaries meeting CCW chronic condition algorithm chronic obstructive pulmonary disease. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_dprssn_pct Percent (%) Beneficiaries Identified Depression Percent beneficiaries meeting CCW chronic condition algorithm depression. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_dbts_pct Percent (%) Beneficiaries Identified Diabetes Percent beneficiaries meeting CCW chronic condition algorithm diabetes. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_hyplpdma_pct Percent (%) Beneficiaries Identified Hyperlipidemia Percent beneficiaries meeting CCW chronic condition algorithm hyperlipidemia. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_hyprtnsn_pct Percent (%) Beneficiaries Identified Hypertension Percent beneficiaries meeting CCW chronic condition algorithm hypertension. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_ihd_pct Percent (%) Beneficiaries Identified Ischemic Heart Disease Percent beneficiaries meeting CCW chronic condition algorithm ischemic heart disease. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_opo_pct Percent (%) Beneficiaries Identified Osteoporosis Percent beneficiaries meeting CCW chronic condition algorithm osteoporosis. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_raoa_pct Percent (%) Beneficiaries Identified Rheumatoid Arthritis / Osteoarthritis Percent beneficiaries meeting CCW chronic condition algorithm rheumatoid arthritis/osteoarthritis. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_sz_pct Percent (%) Beneficiaries Identified Schizophrenia / Psychotic Disorders Percent beneficiaries meeting CCW chronic condition algorithm schizophrenia psychotic disorders. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_cc_strok_pct Percent (%) Beneficiaries Identified Stroke Percent beneficiaries meeting CCW chronic condition algorithm stroke. protect privacy Medicare beneficiaries, number beneficiaries fewer 11 suppressed percent beneficiaries 75% 100% top-coded 75%. Information source data available CMS Chronic Conditions Warehouse (CCW). bene_avg_risk_scre Average HCC Risk Score Beneficiaries Average Hierarchical Condition Category (HCC) risk score beneficiaries.","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-phys-other-pract.html","id":"data-dictionary-1","dir":"Articles","previous_headings":"Dataset: Provider > Dataset: Geography and Service","what":"Data Dictionary","title":"Medicare Physician & Other Practitioners APIs","text":"Variable Term Definition rndrng_prvdr_geo_lvl Geography Level Identifies level geography data row aggregated. value ‘State’ indicates data row aggregated single state identified Rendering Provider State column given HCPCS Code Level. value ‘National’ indicates data row aggregated across states given HCPCS Code Level. rndrng_prvdr_geo_cd Rendering Provider Geography Code FIPS code referring provider state. variable blank reported national level. rndrng_prvdr_geo_desc Rendering Provider Geography Description state name provider located, reported NPPES. values include 50 United States, District Columbia, U.S. territories, Armed Forces areas, Unknown Foreign Country. Data aggregated National level identified word ‘National’. hcpcs_cd HCPCS Code HCPCS code used identify specific medical service furnished provider. HCPCS codes include two levels. Level codes Current Procedural Terminology (CPT) codes maintained American Medical Association Level II codes created CMS identify products, supplies services covered CPT codes (ambulance services). CPT codes, descriptions data copyright 2016 American Medical Association. rights reserved. CPT registered trademark American Medical Association (AMA). Please review complete CMS AMA CPT License agreement presented users accessing data. additional information HCPCS codes, visit HCPCS general information page. hcpcs_desc HCPCS Description Description HCPCS code specific medical service furnished provider. HCPCS descriptions associated CPT codes consumer friendly descriptions provided AMA. CPT Consumer Friendly Descriptors lay synonyms CPT descriptors intended help healthcare consumers medical professionals understand clinical procedures bills patient portals. CPT Consumer Friendly Descriptors used clinical coding documentation. descriptions CMS Level II descriptions provided long form. Due variable length restrictions, CMS Level II descriptions truncated 256 bytes. result, HCPCS description can associated one HCPCS code. complete CMS Level II descriptions, please visit HCPCS Release Code Sets page. hcpcs_drug_ind HCPCS Drug Indicator Identifies whether HCPCS code specific service furnished provider HCPCS listed Medicare Part B Drug Average Sales Price (ASP) File. Please visit ASP drug pricing page additional information. place_of_srvc Place Service Identifies whether place service submitted claims facility (value ‘F’) non-facility (value ‘O’). Non-facility generally office setting; however entities included non-facility. following values entities included facility non-facility: tot_rndrng_prvdrs Number Providers Number providers within HCPCS code place service. tot_srvcs Number Services Number services provided; note metrics used count number provided can vary service service. tot_benes Number Medicare Beneficiaries Number distinct Medicare beneficiaries receiving service Rndrng_Prvdr_Geo_Desc HCPCS_Cd, Place_Of_Srvc. tot_bene_day_srvcs Number Distinct Medicare Beneficiary/Per Day Services Number distinct Medicare beneficiary/per day services. Since given beneficiary may receive multiple services type (e.g., single vs. multiple cardiac stents) single day, metric removes double-counting line service count identify whether unique service occurred. avg_sbmtd_chrg Average Submitted Charge Amount Average charges providers submit service. avg_mdcr_alowd_amt Average Medicare Allowed Amount Average Medicare allowed amount service. Medicare allowed amounts includes amount Medicare pays, deductible coinsurance amounts beneficiary responsible paying, amounts third party responsible paying. avg_mdcr_pymt_amt Average Medicare Payment Amount Average amount Medicare paid deductible coinsurance amounts deducted line item service. avg_mdcr_stdzd_amt Average Medicare Standardized Payment Amount Average amount Medicare paid beneficiary deductible coinsurance amounts deducted line item service standardization Medicare payment applied. Standardization removes geographic differences payment rates individual services, account local wages input prices makes Medicare payments across geographic areas comparable, differences reflect variation factors physicians’ practice patterns beneficiaries’ ability willingness obtain care. Additional information standardization Medicare payments can found “Geographic Variation Public Use File: Technical Supplement Standardization.”","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-phys-other-pract.html","id":"dataset-provider-and-service","dir":"Articles","previous_headings":"Dataset: Provider","what":"Dataset: Provider and Service","title":"Medicare Physician & Other Practitioners APIs","text":"spending utilization data Physician Practitioners Provider Service Dataset aggregated following:  NPI performing provider, Healthcare Common Procedure Coding System (HCPCS) code, place service (either facility non-facility).  can multiple records given NPI based number distinct HCPCS codes billed services provided. Data aggregated based place service separate fee schedules apply depending whether place service submitted claim facility non-facility.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-phys-other-pract.html","id":"data-dictionary-2","dir":"Articles","previous_headings":"Dataset: Provider > Dataset: Provider and Service","what":"Data Dictionary","title":"Medicare Physician & Other Practitioners APIs","text":"Variable Term Definition rndrng_npi National Provider Identifier National Provider Identifier (NPI) rendering provider claim. provider NPI numeric identifier registered NPPES. rndrng_prvdr_last_org_name Last Name/Organization Name Provider provider registered NPPES individual (entity type code=’’), provider’s last name. provider registered organization (entity type code = ‘O’), organization name. rndrng_prvdr_first_name First Name Provider provider registered NPPES individual (entity type code=’’), provider’s first name. provider registered organization (entity type code = ‘O’), blank. rndrng_prvdr_mi Middle Initial Provider provider registered NPPES individual (entity type code=’’), provider’s middle initial. provider registered organization (entity type code = ‘O’), blank. rndrng_prvdr_crdntls Credentials Provider provider registered NPPES individual (entity type code=’’), provider’s credentials. provider registered organization (entity type code = ‘O’), blank. rndrng_prvdr_gndr Gender Provider provider registered NPPES individual (entity type code=’’), provider’s gender. provider registered organization (entity type code = ‘O’), blank. rndrng_prvdr_ent_cd Entity Type Provider Type entity reported NPPES. entity code ‘’ identifies providers registered individuals entity type code ‘O’ identifies providers registered organizations. rndrng_prvdr_st1 Street Address 1 Provider first line provider’s street address, reported NPPES. rndrng_prvdr_st2 Street Address 2 Provider second line provider’s street address, reported NPPES. rndrng_prvdr_city City Provider city provider located, reported NPPES. rndrng_prvdr_state_abrvtn State Abbreviation Provider state provider located, reported NPPES. fifty U.S. states District Columbia reported state postal abbreviation. following values used areas: rndrng_prvdr_state_fips State FIPS Code Provider FIPS code rendering provider’s state. rndrng_prvdr_zip5 Zip Code Provider provider’s zip code, reported NPPES. rndrng_prvdr_ruca RUCA Code Provider Rural-Urban Commuting Area Codes (RUCAs), Census tract-based classification scheme utilizes standard Bureau Census Urbanized Area Urban Cluster definitions combination work commuting information characterize nation’s Census tracts regarding rural urban status relationships. Referring Provider ZIP code cross walked United States Department Agriculture (USDA) 2010 Rural-Urban Commuting Area Codes. rndrng_prvdr_ruca_desc RUCA Description Description Rural-Urban Commuting Area (RUCA) Code rndrng_prvdr_cntry Country Code Provider country provider located, reported NPPES. country code ‘US’ state U.S. possession. foreign countries (.e., state values ‘ZZ’), provider country values include following: rndrng_prvdr_type Provider Type Provider Derived provider specialty code reported claim. providers reported one specialty code claims, specialty code associated largest number services. rndrng_prvdr_mdcr_prtcptg_ind Medicare Participation Indicator Identifies whether provider participates Medicare /accepts assignment Medicare allowed amounts. value ‘Y’ provider least one claim identifying provider participating Medicare accepting assignment Medicare allowed amounts within HCPCS code place service. non-participating provider may elect accept Medicare allowed amounts services accept Medicare allowed amounts services. hcpcs_cd HCPCS Code HCPCS code used identify specific medical service furnished provider. HCPCS codes include two levels. Level codes Current Procedural Terminology (CPT) codes maintained American Medical Association Level II codes created CMS identify products, supplies services covered CPT codes (ambulance services). CPT codes, descriptions data copyright 2016 American Medical Association. rights reserved. CPT registered trademark American Medical Association (AMA). Please review complete CMS AMA CPT License agreement presented users accessing data. additional information HCPCS codes, visit HCPCS general information page. hcpcs_desc HCPCS Description Description HCPCS code specific medical service furnished provider. HCPCS descriptions associated CPT codes consumer friendly descriptions provided AMA. CPT Consumer Friendly Descriptors lay synonyms CPT descriptors intended help healthcare consumers medical professionals understand clinical procedures bills patient portals. CPT Consumer Friendly Descriptors used clinical coding documentation. descriptions CMS Level II descriptions provided long form. Due variable length restrictions, CMS Level II descriptions truncated 256 bytes. result, HCPCS description can associated one HCPCS code. complete CMS Level II descriptions, please visit HCPCS Release Code Sets page. hcpcs_drug_ind HCPCS Drug Indicator Identifies whether HCPCS code specific service furnished provider HCPCS listed Medicare Part B Drug Average Sales Price (ASP) File. Please visit ASP drug pricing page additional information. place_of_srvc Place Service Identifies whether place service submitted claims facility (value ‘F’) non-facility (value ‘O’). Non-facility generally office setting; however entities included non-facility. following values entities included facility non-facility: tot_benes Number Medicare Beneficiaries Number distinct Medicare beneficiaries receiving service Rndrng_NPI, HCPCS_Cd, Place_Of_Srvc. tot_srvcs Number Services Number services provided; note metrics used count number provided can vary service service. tot_bene_day_srvcs Number Distinct Medicare Beneficiary/Per Day Services Number distinct Medicare beneficiary/per day services. Since given beneficiary may receive multiple services type (e.g., single vs. multiple cardiac stents) single day, metric removes double-counting line service count identify whether unique service occurred. avg_sbmtd_chrg Average Submitted Charge Amount Average charges provider submitted service. avg_mdcr_alowd_amt Average Medicare Allowed Amount Average Medicare allowed amount service; figure sum amount Medicare pays, deductible coinsurance amounts beneficiary responsible paying, amounts third party responsible paying. avg_mdcr_pymt_amt Average Medicare Payment Amount Average amount Medicare paid deductible coinsurance amounts deducted line item service. Note: general, Medicare FFS claims dates--service dates--discharge April 1, 2013, incurred 2 percent reduction Medicare payment. response mandatory across--board reductions Federal spending, also known sequestration. avg_mdcr_stdzd_amt Average Medicare Standardized Payment Amount Average amount Medicare paid beneficiary deductible coinsurance amounts deducted line item service standardization Medicare payment applied. Standardization removes geographic differences payment rates individual services, account local wages input prices makes Medicare payments across geographic areas comparable, differences reflect variation factors physicians’ practice patterns beneficiaries’ ability willingness obtain care. Note: variable available starting calendar year 2014 data. Please refer “Additional Information” section document details standardization Medicare payments.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-reval-due-date.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"Medicare Revalidation Due Date API","text":"Variable Term Definition enrollment_id Enrollment ID Enrollment ID national_provider_identifier National Provider Identifier National Provider Identifier (NPI) first_name First Name First name individual provider last_name Last Name Last name individual provider organization_name Organization Name Legal business name organizational provider enrollment_state_code Enrollment State Code Enrollment state enrollment_type Enrollment Type Provider type code (1 Part ; 2 DME; 3 Non-DME Part B) provider_type_text Provider Type Text Provider type description enrollment_specialty Enrollment Specialty Enrollment specialty revalidation_due_date Revalidation Due Date Previously assigned revalidation due date (blank previously assigned due date) adjusted_due_date Adjusted Due Date Next revalidation due date (blank yet assigned) individual_total_reassign_to Individual Total Reassign Number individual enrollment associations reassigning benefits employed organizational provider receiving_benefits_reassignment Receiving Benefits Reassignment Number organizational enrollment associations individual provider reassigns benefits employed ","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-reval-practice-reassign.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"Medicare Revalidation Clinic Group Practice Reassignment API","text":"Variable Term Definition group_pac_id Group PAC ID PAC ID provider receiving reassignment employer group_enrollment_id Group Enrollment ID Enrollment ID provider receiving reassignment employer group_legal_business_name Group Legal Business Name Legal business name provider receiving reassignment employer group_state_code Group State Code Enrollment state provider receiving reassignment employer group_due_date Group Due Date Revalidation due date provider receiving reassignment employer (TBD yet assigned) group_reassignments_and_physician_assistants Group Reassignments Physician Assistants Number individual enrollment associations reassigning benefits employed organizational provider record_type Record Type Identifies whether record reassignment (‘Reassignment’) employment (‘Physician Assistant’) individual_enrollment_id Individual Enrollment ID Enrollment ID provider reassigning benefits employee individual_npi Individual NPI NPI provider reassigning benefits employee individual_first_name Individual First Name First name provider reassigning benefits employee individual_last_name Individual Last Name Last name provider reassigning benefits employee individual_state_code Individual State Code Enrollment state provider reassigning benefits employee individual_specialty_description Individual Specialty Description Enrollment specialty provider reassigning benefits employee individual_due_date Individual Due Date Revalidation due date provider reassigning benefits employee (TBD yet assigned) individual_total_employer_associations Individual Total Employer Associations Number organizational enrollment associations individual provider reassigns benefits employed ","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-taxon-crosswalk.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"Medicare Provider and Supplier Taxonomy Crosswalk API","text":"Variable Term Definition medicare_specialty_code Medicare Specialty Code Specialty code corresponds listed Medicare specialty medicare_provider_supplier_type_description Medicare Provider/Supplier Type Description description Medicare Provider/Supplier Type provider_taxonomy_code Provider Taxonomy Code taxonomy codes Providers use provider_taxonomy_description_type_classification_specialization Provider Taxonomy Description description taxonomy Providers use","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"nppes-npi-public-registry-api","dir":"Articles","previous_headings":"","what":"NPPES NPI Public Registry API","title":"NPPES NPI Public Registry API","text":"NPPES NPI Registry Public Search free directory active National Provider Identifier (NPI) records. Healthcare providers acquire unique 10-digit NPIs identify standard way throughout industry. CMS supplies NPI, publish parts NPI record public relevance, including provider’s name, specialty (taxonomy) practice address. enables search providers NPPES (National Plan Provider Enumeration System.) information produced NPI Registry provided accordance NPPES Data Dissemination Notice. charge use NPI Registry. NPPES Application Programming Interface (API) faster alternative downloadable NPPES data files. allows systems access NPPES public data real-time, rather batched uploads. API retrieves data NPPES daily. API query return maximum 200 results per request. Skip field API let skip 1000 records. using two fields search criteria, can get maximum 1,200 records six requests. U.S. NPPES National Provider Identifier (NPI) Registry API","code":"provider_nppes(1003026055) |>    provider_unpack() |>    knitr::kable() |>    kableExtra::scroll_box(fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' npi_list |> purrr::map_dfr(provider_nppes) |>              dplyr::group_split(outcome) |>             purrr::map_dfr(provider_unpack) |>              knitr::kable() |>              kableExtra::scroll_box(               height = \"500px\",                fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' npi_df |> tibble::deframe() |>            purrr::map_dfr(provider_nppes) #> # A tibble: 6 × 3 #>   datetime            outcome data_lists    #>   <dttm>              <chr>   <list>        #> 1 2022-12-11 22:02:51 results <df [1 × 11]> #> 2 2022-12-11 22:02:53 results <df [1 × 11]> #> 3 2022-12-11 22:02:54 results <df [1 × 11]> #> 4 2022-12-11 22:02:56 results <df [1 × 11]> #> 5 2022-12-11 22:02:57 results <df [1 × 11]> #> 6 2022-12-11 22:02:59 results <df [1 × 11]>"},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"medicare-fee-for-service-ffs-provider-enrollment-api","dir":"Articles","previous_headings":"","what":"Medicare Fee-For-Service (FFS) Provider Enrollment API","title":"NPPES NPI Public Registry API","text":"Medicare Fee--Service Public Provider Enrollment dataset includes information providers actively approved bill Medicare completed 855O time data pulled Provider Enrollment Chain Ownership System (PECOS). files populated PECOS contain basic enrollment provider information, reassignment benefits information practice location city, state zip. files intended used real time reporting data changes day day files updated quarterly basis. data include information opt-providers. Information redacted necessary protect Medicare provider privacy.  Medicare Fee--Service Public Provider Enrollment API Medicare Fee--Service Public Provider Enrollment - Data Dictionary Reassignment Sub-File","code":"provider_mppe(1003026055) |>    knitr::kable() |>    kableExtra::scroll_box(fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' npi_list |> purrr::map_dfr(provider_mppe) |>              knitr::kable() |>              kableExtra::scroll_box(fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' npi_df |> tibble::deframe() |>            purrr::map_dfr(provider_mppe) |>            knitr::kable() |>            kableExtra::scroll_box(fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra'"},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"medicare-order-and-referring-api","dir":"Articles","previous_headings":"","what":"Medicare Order and Referring API","title":"NPPES NPI Public Registry API","text":"Order Referring dataset provides information physicians non-physician practitioners, National Provider Identifier (NPI), type/specialty legally eligible order refer Medicare program current enrollment records Medicare. dataset based information gathered Provider Enrollment, Chain Ownership System (PECOS).  Medicare Order Referring API","code":"provider_moar(1003026055) |> knitr::kable() #> Error in provider_moar(1003026055): could not find function \"provider_moar\" npi_list |> purrr::map_dfr(provider_moar) |>              knitr::kable() #> Error in as_mapper(.f, ...): object 'provider_moar' not found npi_df |> tibble::deframe() |>            purrr::map_dfr(provider_moar) |>            knitr::kable() #> Error in as_mapper(.f, ...): object 'provider_moar' not found"},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"medicare-provider-and-supplier-taxonomy-crosswalk-api","dir":"Articles","previous_headings":"","what":"Medicare Provider and Supplier Taxonomy Crosswalk API","title":"NPPES NPI Public Registry API","text":"Medicare Provider Supplier Taxonomy Crosswalk dataset lists providers suppliers eligible enroll Medicare programs proper healthcare provider taxonomy code. data includes Medicare speciality codes, available, provider/supplier type description, taxonomy code, taxonomy description. dataset derived information gathered National Plan Provider Enumerator System (NPPES) Provider Enrollment, Chain Ownership System (PECOS). Medicare Provider Supplier Taxonomy Crosswalk","code":"provider_mpstc(\"2086S0102X\") |> knitr::kable() #> Error in provider_mpstc(\"2086S0102X\"): could not find function \"provider_mpstc\" npi_mpstc <- npi_list |> purrr::map_dfr(provider_nppes) |>                           dplyr::group_split(outcome) |>                          purrr::map_dfr(provider_unpack)  npi_mpstc |> dplyr::distinct(taxon_code) |>               tibble::deframe() |>               purrr::map_dfr(provider_mpstc) |>               knitr::kable() |>               kableExtra::scroll_box(height = \"500px\", fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' provider_mpstc(full = TRUE) #> Error in provider_mpstc(full = TRUE): could not find function \"provider_mpstc\""},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"medicare-revalidation-due-date-list-api","dir":"Articles","previous_headings":"","what":"Medicare Revalidation Due Date List API","title":"NPPES NPI Public Registry API","text":"Medicare Providers must validate enrollment record every three five years. CMS sets every Provider’s Revalidation due date end month posts upcoming six seven months due dates online. due date ‘TBD’ means CMS set due date yet. lists refreshed every two months two months’ worth due dates appended list.  Revalidation Due Date List dataset contains revalidation due dates Medicare providers due revalidate following six months. provider’s due date fall within ensuing six months, due date marked ‘TBD’. addition dataset also includes subfiles reassignment information given provider well due date listings clinics group practices providers. dataset based information gathered Provider Enrollment, Chain Ownership System (PECOS).  Medicare Revalidation Due Date API Medicare Revalidation Due Date - Data Dictionary","code":"provider_mrdd(1184699621) |> knitr::kable() #> Error in provider_mrdd(1184699621): could not find function \"provider_mrdd\" npi_list |> purrr::map_dfr(provider_mrdd) #> Error in as_mapper(.f, ...): object 'provider_mrdd' not found"},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"cms-public-reporting-of-missing-digital-contact-information-api","dir":"Articles","previous_headings":"","what":"CMS Public Reporting of Missing Digital Contact Information API","title":"NPPES NPI Public Registry API","text":"May 2020 CMS Interoperability Patient Access final rule, CMS finalized policy publicly report names NPIs providers digital contact information included NPPES system (85 FR 25584). data includes NPI provider name providers clinicians without digital contact information NPPES. data gathered NPPES providers missing digital contact information.  CMS Public Reporting Missing Digital Contact Information API","code":"provider_promdci(npi = 1760485387) |>    knitr::kable() |>    kableExtra::kable_styling(full_width = F,    position = \"float_right\") #> Error in loadNamespace(x): there is no package called 'kableExtra' npi_list |> purrr::map_dfr(provider_promdci) #> Error in as_mapper(.f, ...): object 'provider_promdci' not found #provider_promdci(full = TRUE)"},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"medicare-physician-other-practitioners---by-provider-and-service-api","dir":"Articles","previous_headings":"","what":"Medicare Physician & Other Practitioners - by Provider and Service API","title":"NPPES NPI Public Registry API","text":"Medicare Physician & Practitioners - Provider Service API","code":"npi_list |> purrr::map_dfr(provider_mpop) #> Error in as_mapper(.f, ...): object 'provider_mpop' not found provider_mpop(npi = 1003000126, year = \"2020\") |>                knitr::kable() |>                kableExtra::scroll_box(height = \"500px\", fixed_thead = T) |>    kableExtra::kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\")) #> Error in loadNamespace(x): there is no package called 'kableExtra' provider_mpop(npi = 1003000126, year = \"2019\") |>                knitr::kable() |>                kableExtra::scroll_box(height = \"500px\", fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' provider_mpop(npi = 1003000126, year = \"2018\") |>                knitr::kable() |>                kableExtra::scroll_box(height = \"500px\", fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' provider_mpop(npi = 1003000126, year = \"2017\") |>                knitr::kable() |>                kableExtra::scroll_box(height = \"500px\", fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' provider_mpop(npi = 1003000126, year = \"2016\") |>                knitr::kable() |>                kableExtra::scroll_box(height = \"500px\", fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' provider_mpop(npi = 1003000126, year = \"2015\") |>                knitr::kable() |>                kableExtra::scroll_box(height = \"500px\", fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' provider_mpop(npi = 1003000126, year = \"2014\") |>                knitr::kable() |>                kableExtra::scroll_box(height = \"500px\", fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' provider_mpop(npi = 1003000126, year = \"2013\") |>                knitr::kable() |>                kableExtra::scroll_box(height = \"500px\", fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra'"},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"cms-open-data-catalog","dir":"Articles","previous_headings":"","what":"CMS Open Data Catalog","title":"NPPES NPI Public Registry API","text":"","code":"cms_open_data_catalog <- \"https://data.cms.gov/data.json\"  # Create polite version polite_req <- polite::politely(   httr2::request,   verbose = FALSE,   delay = 2) #> Error in loadNamespace(x): there is no package called 'polite'  # Create request req <- polite_req(cms_open_data_catalog) #> Error in polite_req(cms_open_data_catalog): could not find function \"polite_req\"  # Send and save response resp <- req |>   httr2::req_url_query() |>   httr2::req_throttle(50 / 60) |>   httr2::req_perform() #> Error in is_request(req): object 'req' not found  # Parse JSON response and save results results <- resp |> httr2::resp_body_json(   check_type = FALSE,   simplifyVector = TRUE) #> Error in is_response(req): object 'resp' not found  results_dataset <- results$dataset |>    tidyr::unnest(bureauCode) |>    tidyr::unnest(language) |>    tidyr::unnest(programCode) |>    tidyr::unnest(references) |>    tidyr::unnest(theme) #> Error in tidyr::unnest(results$dataset, bureauCode): object 'results' not found  results_dataset |>    dplyr::select(title, description) |>    knitr::kable() |>    kableExtra::scroll_box(     height = \"500px\",      fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra' results_dataset |>    dplyr::select(dataset = title,                  time_period = temporal,                  distribution,                  identifier) |>    dplyr::filter(dataset == \"Medicare Physician & Other Practitioners - by Provider and Service\") |>    tidyr::unnest(distribution) |>    dplyr::filter(format == \"API\") |>    dplyr::select(title,                  accessURL,                  temporal,                  modified) |>    knitr::kable() |>    kableExtra::scroll_box(     height = \"500px\",      fixed_thead = TRUE) #> Error in loadNamespace(x): there is no package called 'kableExtra'"},{"path":"https://andrewallenbruce.github.io/provider/articles/provider.html","id":"nppes-npi-public-registry-api","dir":"Articles","previous_headings":"","what":"NPPES NPI Public Registry API","title":"Overview of Provider","text":"’re billing healthcare provider receive CO-8 denial claim need confirm whether correct taxonomy code entered claim. Armed provider’s NPI, can search NPPES NPI Registry API provider_nppes() function:    Unpack API response provider_unpack() function:   Giving results tibble form:     don’t provider’s NPI? can search first /last name, city, state:","code":"# Load library library(provider)  # Query the NPPES API nppes_ex <- provider_nppes(npi = 1760485387) #> # A tibble: 1 × 3 #>   datetime            outcome data_lists    #>   <dttm>              <chr>   <list>        #> 1 2022-12-11 22:03:14 results <df [1 × 11]> nppes_ex <- provider_unpack(nppes_ex) nppes_ex #> # A tibble: 16 × 32 #>    npi    prov_…¹ first…² last_…³ middl…⁴ crede…⁵ sole_…⁶ gender enume…⁷ last_…⁸ #>    <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <lgl>   <chr>  <chr>   <chr>   #>  1 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  2 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  3 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  4 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  5 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  6 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  7 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  8 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #>  9 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 10 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 11 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 12 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 13 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 14 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 15 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> 16 17604… Indivi… PAUL    DEWEY   R.      M.D.    FALSE   M      2005-0… 2012-1… #> # … with 22 more variables: status <chr>, name_prefix <chr>, name_suffix <chr>, #> #   country_code <chr>, address_purpose <chr>, address_1 <chr>, city <chr>, #> #   state <chr>, postal_code <chr>, telephone_number <chr>, fax_number <chr>, #> #   taxon_code <chr>, taxonomy_group <chr>, taxon_desc <chr>, #> #   taxon_state <chr>, taxon_license <chr>, taxon_primary <lgl>, #> #   ident_code <chr>, ident_desc <chr>, ident_issuer <lgl>, identifier <chr>, #> #   ident_state <chr>, and abbreviated variable names ¹​prov_type, … nppes_ex2 <- provider_nppes(first = \"Paul\",                              last = \"Dewey\",                             state = \"MN\") |>                              provider_unpack()"},{"path":"https://andrewallenbruce.github.io/provider/articles/provider.html","id":"medicare-fee-for-service-public-provider-enrollment-api","dir":"Articles","previous_headings":"","what":"Medicare Fee-For-Service Public Provider Enrollment API","title":"Overview of Provider","text":"need provider’s PECOS PAC ID Enrollment ID? Using provider_mppe() function, can search Medicare’s Fee--Service Public Provider Enrollment API:","code":"mppe_ex <- provider_mppe(1760485387) #> Error in provider_mppe(1760485387): could not find function \"provider_mppe\" #> Error in dplyr::select(mppe_ex, NPI = npi, `Last Name` = last_name, `PECOS PAC ID` = pecos_asct_cntl_id, : object 'mppe_ex' not found"},{"path":"https://andrewallenbruce.github.io/provider/articles/provider.html","id":"medicare-order-and-referring-api","dir":"Articles","previous_headings":"","what":"Medicare Order and Referring API","title":"Overview of Provider","text":"provider currently eligible make referrals Medicare Part B Home Health Agency (HHA)? Order Durable Medical Equipment (DME) Power Mobility Devices (PMDs)? Search Medicare’s Order Referring API provider_moar():","code":"moar_ex <- provider_moar(1760485387) #> Error in provider_moar(1760485387): could not find function \"provider_moar\" #> Error in dplyr::select(moar_ex, NPI = npi, `Last Name` = last_name, `First Name` = first_name, : object 'moar_ex' not found"},{"path":"https://andrewallenbruce.github.io/provider/articles/provider.html","id":"medicare-provider-and-supplier-taxonomy-crosswalk-api","dir":"Articles","previous_headings":"","what":"Medicare Provider and Supplier Taxonomy Crosswalk API","title":"Overview of Provider","text":"may need find Medicare’s specialty codes provider’s taxonomies. Using output NPPES search first example, can search Medicare’s Provider Supplier Taxonomy Crosswalk API provider_mpstc():    can check see provider due revalidate Medicare enrollment accessing Medicare’s Revalidation Due Date API provider_mrdd():    Providers may need update digital contact information NPPES system. check, can access CMS Public Reporting Missing Digital Contact Information API provider_promdci(). appear search results, ’s time update NPPES contact information:    can find provider opted Medicare searching Medicare Opt Affidavits API provider_mooa():    Using provider_mpop(), can access Medicare’s Physician & Practitioners - Provider Service API:    API contains data going back 2013, can perform long-term analysis provider’s Medicare data:    Using packages like {gt} & {ggplot2}, can create tables graphs reporting purposes:","code":"mpstc_ex <- nppes_ex |>              dplyr::distinct(taxon_code) |>              dplyr::group_split(taxon_code) |>              purrr::map_dfr(provider_mpstc) #> Error in as_mapper(.f, ...): object 'provider_mpstc' not found #> Error in dplyr::select(mpstc_ex, `Taxonomy Code` = provider_taxonomy_code, : object 'mpstc_ex' not found mrdd_ex <- provider_mrdd(1760485387) #> Error in provider_mrdd(1760485387): could not find function \"provider_mrdd\" #> Error in dplyr::select(mrdd_ex, NPI = national_provider_identifier, `Enrollment ID` = enrollment_id, : object 'mrdd_ex' not found promdci_ex <- provider_promdci(1760485387) #> Error in provider_promdci(1760485387): could not find function \"provider_promdci\" #> Error in dplyr::select(promdci_ex, NPI = npi, `Provider Name` = provider_name): object 'promdci_ex' not found mooa_ex <- provider_mooa(1114974490) #> Error in provider_mooa(1114974490): could not find function \"provider_mooa\" #> Error in dplyr::select(mooa_ex, NPI = npi, optout_effective_date, optout_end_date, : object 'mooa_ex' not found mpop_ex_2020 <- provider_mpop(npi = 1760485387,                                year = \"2020\") #> Error in provider_mpop(npi = 1760485387, year = \"2020\"): could not find function \"provider_mpop\" #> Error in dplyr::select(mpop_ex_2020, NPI = rndrng_npi, Last = rndrng_prvdr_last_org_name, : object 'mpop_ex_2020' not found # Retrieve the data from each year mpop20 <- provider_mpop(npi = 1760485387, year = \"2020\") #> Error in provider_mpop(npi = 1760485387, year = \"2020\"): could not find function \"provider_mpop\" mpop19 <- provider_mpop(npi = 1760485387, year = \"2019\") #> Error in provider_mpop(npi = 1760485387, year = \"2019\"): could not find function \"provider_mpop\" mpop18 <- provider_mpop(npi = 1760485387, year = \"2018\") #> Error in provider_mpop(npi = 1760485387, year = \"2018\"): could not find function \"provider_mpop\" mpop17 <- provider_mpop(npi = 1760485387, year = \"2017\") #> Error in provider_mpop(npi = 1760485387, year = \"2017\"): could not find function \"provider_mpop\" mpop16 <- provider_mpop(npi = 1760485387, year = \"2016\") #> Error in provider_mpop(npi = 1760485387, year = \"2016\"): could not find function \"provider_mpop\" mpop15 <- provider_mpop(npi = 1760485387, year = \"2015\") #> Error in provider_mpop(npi = 1760485387, year = \"2015\"): could not find function \"provider_mpop\" mpop14 <- provider_mpop(npi = 1760485387, year = \"2014\") #> Error in provider_mpop(npi = 1760485387, year = \"2014\"): could not find function \"provider_mpop\" mpop13 <- provider_mpop(npi = 1760485387, year = \"2013\") #> Error in provider_mpop(npi = 1760485387, year = \"2013\"): could not find function \"provider_mpop\"  # Bind the data frames together by row mpop_13_20 <- dplyr::bind_rows(mpop20,                                 mpop19,                                 mpop18,                                 mpop17,                                 mpop16,                                 mpop15,                                 mpop14,                                 mpop13) #> Error in list2(...): object 'mpop20' not found #> Error in dplyr::group_by(mpop_13_20, hcpcs_cd, hcpcs_desc): object 'mpop_13_20' not found # First row of data mpop_ex_2020_row1 <- mpop_ex_2020 |> dplyr::filter(dplyr::row_number() %in% 1) #> Error in dplyr::filter(mpop_ex_2020, dplyr::row_number() %in% 1): object 'mpop_ex_2020' not found  # First, last, credentials mpop_ex_name_cred <- stringr::str_c(   stringr::str_trim(mpop_ex_2020_row1$rndrng_prvdr_first_name, \"both\"), \" \",   stringr::str_trim(mpop_ex_2020_row1$rndrng_prvdr_last_org_name, \"both\"), \", \",   stringr::str_trim(mpop_ex_2020_row1$rndrng_prvdr_crdntls, \"both\")) #> Error in stri_trim_both(string): object 'mpop_ex_2020_row1' not found  # NPI mpop_ex_npi <- stringr::str_c(stringr::str_trim(mpop_ex_2020_row1$rndrng_npi, \"both\"), \"\") #> Error in stri_trim_both(string): object 'mpop_ex_2020_row1' not found  # Address mpop_ex_address <- stringr::str_c(   stringr::str_trim(mpop_ex_2020_row1$rndrng_prvdr_st1, \"both\"), \" \",   stringr::str_trim(mpop_ex_2020_row1$rndrng_prvdr_city, \"both\"), \", \",   stringr::str_trim(mpop_ex_2020_row1$rndrng_prvdr_state_abrvtn, \"both\"), \" \",   stringr::str_trim(mpop_ex_2020_row1$rndrng_prvdr_zip5, \"both\")   ) #> Error in stri_trim_both(string): object 'mpop_ex_2020_row1' not found gt_table <- mpop_13_20 |>   dplyr::select(year,                 hcpcs     = hcpcs_cd,                 benefits  = tot_benes,                 services  = tot_srvcs,                 avg_bill  = avg_sbmtd_chrg,                 avg_allow = avg_mdcr_alowd_amt,                 avg_pay   = avg_mdcr_pymt_amt) |>    dplyr::group_by(hcpcs) |>    dplyr::summarize(     ben_sum    = sum(benefits),     ben_mean   = mean(benefits),     ben_spark  = list(benefits),     serv_sum   = sum(services),     serv_mean  = mean(services),     serv_spark = list(services),     char_sum   = sum(avg_bill),     char_mean  = mean(avg_bill),     char_spark = list(avg_bill),     all_sum    = sum(avg_allow),     all_mean   = mean(avg_allow),     all_spark  = list(avg_allow),     pay_sum    = sum(avg_pay),     pay_mean   = mean(avg_pay),     pay_spark  = list(avg_pay),     .groups = \"drop\") |>    dplyr::filter(ben_sum > 22) |>    dplyr::arrange(desc(ben_sum)) #> Error in dplyr::select(mpop_13_20, year, hcpcs = hcpcs_cd, benefits = tot_benes, : object 'mpop_13_20' not found gt_output <- gt_table |>    gt::gt() |>    gt::tab_header(   title = gt::md(paste0(mpop_ex_name_cred, \"**Medicare Data Report**: 2013 - 2020.\")),    subtitle = gt::md(   \"NPI: 1760485387. HCPCS Codes with a beneficiary count *less than 30* have been excluded.\")) |>    gtExtras::gt_theme_538() |>    gt::tab_options(footnotes.multiline = TRUE,                    table.font.size = \"16px\",                   heading.title.font.size = \"22px\") |>    gtExtras::gt_plt_sparkline(ben_spark,                               type = \"ref_iqr\",                               fig_dim = c(5, 30),                               same_limit = FALSE,                               label = FALSE,                              palette = c(\"black\",                                           \"black\",                                           \"blue\",                                           \"green\",                                           \"blue\")) |>    gtExtras::gt_plt_sparkline(serv_spark,                               type = \"ref_iqr\",                               fig_dim = c(5, 30),                               same_limit = FALSE,                               label = FALSE,                              palette = c(\"black\",                                           \"black\",                                           \"blue\",                                           \"green\",                                           \"blue\")) |>    gtExtras::gt_plt_sparkline(char_spark,                               type = \"ref_iqr\",                               fig_dim = c(5, 30),                               same_limit = FALSE,                               label = FALSE,                              palette = c(\"black\",                                           \"black\",                                           \"blue\",                                           \"green\",                                           \"orange\")) |>    gtExtras::gt_plt_sparkline(all_spark,                               type = \"ref_iqr\",                               fig_dim = c(5, 30),                               same_limit = FALSE,                               label = FALSE,                              palette = c(\"black\",                                           \"black\",                                           \"blue\",                                           \"green\",                                           \"orange\")) |>    gtExtras::gt_plt_sparkline(pay_spark,                               type = \"ref_iqr\",                               fig_dim = c(5, 30),                               same_limit = FALSE,                               label = FALSE,                              palette = c(\"black\",                                           \"black\",                                           \"blue\",                                           \"green\",                                           \"orange\")) |>    gtExtras::gt_add_divider(columns = \"hcpcs\",                             style = \"solid\",                             include_labels = FALSE,                            weight = gt::px(3),                            color = \"gray\") |>   gt::fmt_number(columns = c(ben_sum:ben_mean,                               serv_sum:serv_mean),                               decimals = 0) |>    gt::fmt_currency(columns = c(char_sum:char_mean,                                 all_sum:all_mean,                                 pay_sum:pay_mean),                                 currency = \"USD\") |>    gt::tab_spanner(label = \"Beneficiaries\",                    id = \"ben\",                    columns = c(ben_sum,                                ben_mean,                                ben_spark)) |>    gt::tab_spanner(label = \"Services\",                    id = \"serv\",                    columns = c(serv_sum,                                serv_mean,                                serv_spark)) |>    gt::tab_spanner(label = \"Submitted Charge\",                    columns = c(char_sum,                               char_mean,                                char_spark)) |>    gt::tab_spanner(label = \"Allowed Amount\",                    columns = c(all_sum,                               all_mean,                                all_spark)) |>    gt::tab_spanner(label = \"Payment\",                    columns = c(pay_sum,                               pay_mean,                                pay_spark)) |>    gt::cols_label(ben_sum = \"Count\",                   ben_mean = \"Average\",                   ben_spark = \"Trend\") |>    gt::cols_label(serv_sum = \"Count\",                   serv_mean = \"Average\",                   serv_spark = \"Trend\") |>    gt::cols_label(char_sum = \"Sum\",                  char_mean = \"Average\",                   char_spark = \"Trend\") |>    gt::cols_label(all_sum = \"Sum\",                  all_mean = \"Average\",                   all_spark = \"Trend\") |>    gt::cols_label(pay_sum = \"Sum\",                   pay_mean = \"Average\",                   pay_spark = \"Trend\") |>    gt::tab_source_note(     source_note = gt::md(\"Data Source: **Medicare** Physician & Other Practitioners by Provider and Service, 2013 - 2020.\")) |>    gt::tab_footnote(     footnote = gt::md(\"Number of *distinct* Medicare beneficiaries receiving the service for each HCPCS code.\"),      locations = gt::cells_column_spanners(spanners = \"ben\")) |>    gt::tab_footnote(     footnote = gt::md(\"Number of services provided. *Note: The metrics used to count the number provided can vary from service to service.*\"),     locations = gt::cells_column_spanners(spanners = \"serv\")) |>    gtExtras::gt_color_rows(columns = ben_sum,                            palette = \"RColorBrewer::Blues\", pal_type = \"continuous\", domain = range(gt_table$ben_sum)) |>    gtExtras::gt_color_rows(columns = ben_mean,                            palette = \"RColorBrewer::Blues\", pal_type = \"continuous\", domain = range(gt_table$ben_mean)) |>    gtExtras::gt_color_rows(columns = serv_sum,                            palette = \"RColorBrewer::Blues\", pal_type = \"continuous\", domain = range(gt_table$serv_sum)) |>    gtExtras::gt_color_rows(columns = serv_mean,                            palette = \"RColorBrewer::Blues\", pal_type = \"continuous\", domain = range(gt_table$serv_mean)) |>    gtExtras::gt_color_rows(columns = char_sum,                            palette = \"RColorBrewer::Oranges\", pal_type = \"continuous\", domain = range(gt_table$char_sum)) |>    gtExtras::gt_color_rows(columns = char_mean,                            palette = \"RColorBrewer::Oranges\", pal_type = \"continuous\", domain = range(gt_table$char_mean)) |>    gtExtras::gt_color_rows(columns = all_sum,                            palette = \"RColorBrewer::Oranges\", pal_type = \"continuous\", domain = range(gt_table$all_sum)) |>    gtExtras::gt_color_rows(columns = all_mean,                            palette = \"RColorBrewer::Oranges\", pal_type = \"continuous\", domain = range(gt_table$all_mean)) |>    gtExtras::gt_color_rows(columns = pay_sum,                            palette = \"RColorBrewer::Oranges\", pal_type = \"continuous\", domain = range(gt_table$pay_sum)) |>    gtExtras::gt_color_rows(columns = pay_mean,                            palette = \"RColorBrewer::Oranges\", pal_type = \"continuous\", domain = range(gt_table$pay_mean)) |>    gt::opt_vertical_padding(scale = 1.5) #> Error in dplyr::group_vars(data): object 'gt_table' not found  #gt::gtsave(gt_output, filename = \"gt_provider3.png\", expand = 20, zoom = 2, vwidth = 1500)"},{"path":"https://andrewallenbruce.github.io/provider/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Bruce. Author, maintainer, copyright holder.","code":""},{"path":"https://andrewallenbruce.github.io/provider/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bruce (2022). provider: Access Public Healthcare Provider Data. https://andrewallenbruce.github.io/provider/, https://github.com/andrewallenbruce/provider.","code":"@Manual{,   title = {provider: Access Public Healthcare Provider Data},   author = {Andrew Bruce},   year = {2022},   note = {https://andrewallenbruce.github.io/provider/, https://github.com/andrewallenbruce/provider}, }"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"provider-","dir":"","previous_headings":"","what":"Access Public Healthcare Provider Data","title":"Access Public Healthcare Provider Data","text":"goal provider provide performant reliable open-source tools facilitate easy access healthcare provider data publicly available APIs & sources.","code":""},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access Public Healthcare Provider Data","text":"can install development version provider GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"andrewallenbruce/provider\")  # install.packages(\"remotes\") remotes::install_github(\"andrewallenbruce/provider\")"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"nppes-national-provider-identifier-npi-registry-api","dir":"","previous_headings":"Installation","what":"NPPES National Provider Identifier (NPI) Registry API","title":"Access Public Healthcare Provider Data","text":"","code":"# Load library library(provider)  provider::nppes_npi(npi = 1083879860) #> # A tibble: 1 × 3 #>   datetime            outcome data_lists    #>   <dttm>              <chr>   <list>        #> 1 2022-12-11 16:56:11 results <df [1 × 11]>"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"medicare-fee-for-service-public-provider-enrollment-api","dir":"","previous_headings":"Installation","what":"Medicare Fee-For-Service Public Provider Enrollment API","title":"Access Public Healthcare Provider Data","text":"","code":"provider::provider_enrollment(npi = 1083879860)"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"medicare-monthly-enrollment-api","dir":"","previous_headings":"Installation","what":"Medicare Monthly Enrollment API","title":"Access Public Healthcare Provider Data","text":"","code":"provider::beneficiary_enrollment(year = 2021, month = \"Year\",    geo_level = \"County\", state_abb = \"AL\", county = \"Autauga\") months <- tibble::enframe(month.name) |>    dplyr::select(-name) |>    dplyr::slice(1:7) |>    tibble::deframe()  ga_bene <- purrr::map_dfr(months,        ~beneficiary_enrollment(year = 2022,                                geo_level = \"State\",                                state = \"Georgia\",                                month = .x)) ga_bene |>    dplyr::select(year,                  month,                  state = bene_state_abrvtn,                  tot_benes,                 orgnl_mdcr_benes,                 ma_and_oth_benes,                 a_b_tot_benes:a_b_ma_and_oth_benes) |>    gluedown::md_table() ga_bene |>    dplyr::select(year,                  month,                  state = bene_state_abrvtn,                  aged_tot_benes:aged_no_esrd_benes,                 dsbld_tot_benes:dsbld_no_esrd_benes) |>    gluedown::md_table() ga_bene |>    dplyr::select(year,                  month,                  state = bene_state_abrvtn,                  dsbld_tot_benes:dsbld_no_esrd_benes) |>    gluedown::md_table()"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"medicare-order-and-referring-api","dir":"","previous_headings":"Installation","what":"Medicare Order and Referring API","title":"Access Public Healthcare Provider Data","text":"","code":"provider::order_refer(npi = 1083879860)"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"medicare-opt-out-affidavits-api","dir":"","previous_headings":"Installation","what":"Medicare Opt-Out Affidavits API","title":"Access Public Healthcare Provider Data","text":"","code":"provider::opt_out(last = \"Aaron\")"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"medicare-provider-and-supplier-taxonomy-crosswalk-api","dir":"","previous_headings":"Installation","what":"Medicare Provider and Supplier Taxonomy Crosswalk API","title":"Access Public Healthcare Provider Data","text":"","code":"provider::taxonomy_crosswalk(specialty_desc = \"Rehabilitation Agency\")"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"medicare-revalidation-due-date-api","dir":"","previous_headings":"Installation","what":"Medicare Revalidation Due Date API","title":"Access Public Healthcare Provider Data","text":"","code":"provider::revalidation_date(npi = 1710912209)"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"medicare-revalidation-clinic-group-practice-reassignment-api","dir":"","previous_headings":"Installation","what":"Medicare Revalidation Clinic Group Practice Reassignment API","title":"Access Public Healthcare Provider Data","text":"","code":"provider::revalidation_group(ind_npi = 1710912209)"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"cms-public-reporting-of-missing-digital-contact-information-api","dir":"","previous_headings":"Installation","what":"CMS Public Reporting of Missing Digital Contact Information API","title":"Access Public Healthcare Provider Data","text":"","code":"provider::missing_information(npi = 1144224569)"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"medicare-physician--other-practitioners-apis","dir":"","previous_headings":"Installation","what":"Medicare Physician & Other Practitioners APIs","title":"Access Public Healthcare Provider Data","text":"Provider Service API: Geography Service API: Provider API:","code":"purrr::map_dfr(2013:2020,        ~physician_by_service(npi = 1003000126, year = .x)) physician_by_service(npi = 1003000126, year = 2020) hcpcs <- physician_by_service(npi = 1003000126, year = 2020)  purrr::map_dfr(hcpcs$hcpcs_cd,                 ~physician_by_geography(geo_level = \"National\",                                         year = 2020,                                         hcpcs_code = .x)) hcpcs <- physician_by_service(npi = 1003000126, year = 2020)  purrr::map_dfr(hcpcs$hcpcs_cd,                 ~physician_by_geography(geo_desc = \"Maryland\",                                         year = 2020,                                         hcpcs_code = .x)) physician_by_provider(npi = 1003000126)"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Access Public Healthcare Provider Data","text":"Please note provider project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"Current information number Medicare beneficiaries hospital/medical coverage prescription drug coverage, available several geographical areas.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"","code":"beneficiary_enrollment(   year = 2021,   month = \"Year\",   geo_level = c(\"National\", \"State\", \"County\"),   state_abb = NULL,   state = NULL,   county = NULL,   fips = NULL,   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"year Calendar year Medicare enrollment; current options 2017 - 2022 month Timeframe Medicare enrollment; options Year month within 12-month timespan month dataset's version name (listed ) geo_level Geographic level data; options National, State, County state_abb Two-letter state abbreviation beneficiary residence state Full state name beneficiary residence county County beneficiary residence fips FIPS code beneficiary residence clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"Medicare Monthly Enrollment data provides current monthly information number Medicare beneficiaries hospital/medical coverage prescription drug coverage, available several geographic areas including national, state/territory, county. hospital/medical coverage data can broken health care delivery (Original Medicare versus Medicare Advantage Health Plans) prescription drug coverage data can examined enrolled stand-alone Prescription Drug Plans enrolled Medicare Advantage Prescription Drug plans. dataset includes enrollee counts rolling 12 month basis also provides information yearly trends. dataset based information gathered CMS administrative enrollment data beneficiaries enrolled Medicare program available CMS Chronic Conditions Data Warehouse.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"Medicare Monthly Enrollment","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"Update Frequency: Monthly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"","code":"beneficiary_enrollment(year = 2018,                        month = \"Year\",                        geo_level = \"County\",                        state_abb = \"AL\",                        county = \"Autauga\") #> # A tibble: 1 × 22 #>    year month bene_geo…¹ bene_…² bene_…³ bene_…⁴ bene_…⁵ tot_b…⁶ orgnl…⁷ ma_an…⁸ #>   <int> <chr> <chr>      <chr>   <chr>   <chr>   <chr>     <int>   <int>   <int> #> 1  2018 Year  County     AL      Alabama Autauga 01001     10645    5700    4945 #> # … with 12 more variables: aged_tot_benes <int>, aged_esrd_benes <int>, #> #   aged_no_esrd_benes <int>, dsbld_tot_benes <int>, #> #   dsbld_esrd_and_esrd_only_benes <int>, dsbld_no_esrd_benes <int>, #> #   a_b_tot_benes <int>, a_b_orgnl_mdcr_benes <int>, #> #   a_b_ma_and_oth_benes <int>, prscrptn_drug_tot_benes <int>, #> #   prscrptn_drug_pdp_benes <int>, prscrptn_drug_mapd_benes <int>, and #> #   abbreviated variable names ¹​bene_geo_lvl, ²​bene_state_abrvtn, …  beneficiary_enrollment(year = 2021,                        geo_level = \"County\",                        fips = \"01001\") #> # A tibble: 1 × 22 #>    year month bene_geo…¹ bene_…² bene_…³ bene_…⁴ bene_…⁵ tot_b…⁶ orgnl…⁷ ma_an…⁸ #>   <int> <chr> <chr>      <chr>   <chr>   <chr>   <chr>     <int>   <int>   <int> #> 1  2021 Year  County     AL      Alabama Autauga 01001     11398    5339    6059 #> # … with 12 more variables: aged_tot_benes <int>, aged_esrd_benes <int>, #> #   aged_no_esrd_benes <int>, dsbld_tot_benes <int>, #> #   dsbld_esrd_and_esrd_only_benes <int>, dsbld_no_esrd_benes <int>, #> #   a_b_tot_benes <int>, a_b_orgnl_mdcr_benes <int>, #> #   a_b_ma_and_oth_benes <int>, prscrptn_drug_tot_benes <int>, #> #   prscrptn_drug_pdp_benes <int>, prscrptn_drug_mapd_benes <int>, and #> #   abbreviated variable names ¹​bene_geo_lvl, ²​bene_state_abrvtn, …  beneficiary_enrollment(year = 2022,                        month = \"July\",                        geo_level = \"State\",                        state = \"Georgia\") #> # A tibble: 1 × 22 #>    year month bene_geo…¹ bene_…² bene_…³ bene_…⁴ bene_…⁵ tot_b…⁶ orgnl…⁷ ma_an…⁸ #>   <int> <chr> <chr>      <chr>   <chr>   <chr>   <chr>     <int>   <int>   <int> #> 1  2022 July  State      GA      Georgia Total   13      1840128  907070  933058 #> # … with 12 more variables: aged_tot_benes <int>, aged_esrd_benes <int>, #> #   aged_no_esrd_benes <int>, dsbld_tot_benes <int>, #> #   dsbld_esrd_and_esrd_only_benes <int>, dsbld_no_esrd_benes <int>, #> #   a_b_tot_benes <int>, a_b_orgnl_mdcr_benes <int>, #> #   a_b_ma_and_oth_benes <int>, prscrptn_drug_tot_benes <int>, #> #   prscrptn_drug_pdp_benes <int>, prscrptn_drug_mapd_benes <int>, and #> #   abbreviated variable names ¹​bene_geo_lvl, ²​bene_state_abrvtn, …  beneficiary_enrollment(year = 2017,                        geo_level = \"State\",                        fips = \"10\") #> # A tibble: 1 × 22 #>    year month bene_geo…¹ bene_…² bene_…³ bene_…⁴ bene_…⁵ tot_b…⁶ orgnl…⁷ ma_an…⁸ #>   <int> <chr> <chr>      <chr>   <chr>   <chr>   <chr>     <int>   <int>   <int> #> 1  2017 Year  State      DE      Delawa… Total   10       193585  171150   22435 #> # … with 12 more variables: aged_tot_benes <int>, aged_esrd_benes <int>, #> #   aged_no_esrd_benes <int>, dsbld_tot_benes <int>, #> #   dsbld_esrd_and_esrd_only_benes <int>, dsbld_no_esrd_benes <int>, #> #   a_b_tot_benes <int>, a_b_orgnl_mdcr_benes <int>, #> #   a_b_ma_and_oth_benes <int>, prscrptn_drug_tot_benes <int>, #> #   prscrptn_drug_pdp_benes <int>, prscrptn_drug_mapd_benes <int>, and #> #   abbreviated variable names ¹​bene_geo_lvl, ²​bene_state_abrvtn, …"},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"Information prevalence, use spending count select chronic conditions among Original Medicare (fee--service) beneficiaries.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"","code":"cc_multiple(   year = 2018,   geo_lvl = NULL,   geo_desc = NULL,   fips = NULL,   age_lvl = NULL,   demo_lvl = NULL,   demo_desc = NULL,   mcc = NULL,   prevalence = NULL,   stnd_pymt_pc = NULL,   pymt_pc = NULL,   readmit_rate = NULL,   er_visits = NULL,   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"year YYYY, calendar year Medicare enrollment. 2007-2018 data currently available. geo_lvl Geographic level data; options \"National\", \"State\", \"County\" geo_desc state /county Medicare beneficiary resides. values include 50 United States, District Columbia, Puerto Rico U.S. Virgin Islands. Data aggregated National level identified \"National'. fips FIPS state /county code Medicare beneficiary resides. Bene_Geo_Cd blank data aggregated National level Puerto Rico Virgin Islands. age_lvl Identifies age level population data aggregated. value '' indicates data row represents Fee--Service Medicare Beneficiaries. value '<65' '65+' indicates data aggregated age Medicare Beneficiaries end calendar year. demo_lvl Identifies demographic level population data aggregated. value '' indicates data row represents Fee--Service Medicare beneficiaries. value 'Sex' indicates data aggregated Medicare beneficiary's sex. value 'Race' indicates data aggregated Medicare beneficiary's race. value 'Dual Status' indicates data aggregated Medicare beneficiary's dual eligibility status. demo_desc Bene_Demo_Lvl='Sex', beneficiary’s sex classified Male Female identified using information CMS enrollment database. Bene_Demo_Lvl='Race', race/ethnicity classifications : Non-Hispanic White, Black African American, Asian/Pacific Islander, Hispanic, American Indian/Alaska Native. chronic condition reports use variable RTI_RACE_CD, available Master Beneficiary Files CCW. Bene_Demo_Lvl='Dual Status', beneficiaries can classified 'Medicare & Medicaid' 'Medicare '. Beneficiares enrolled Medicare Medicaid known “dual eligibles.” Medicare beneficiaries classified dual eligibles month given calendar year receiving full partial Medicaid benefits. mcc classify MCC Medicare beneficiary, 21 chronic conditions counted grouped four categories (0-1, 2-3, 4-5 6 ). prevalence Prevalence estimates calculated taking beneficiaries within MCC category divided total number beneficiaries fee--service population, expressed percentage. stnd_pymt_pc Medicare standardized spending includes total Medicare payments covered services Parts B presented per beneficiary (.e. per capita). Standardized payments presented allow comparisons across geographic areas health care use among beneficiaries. pymt_pc Medicare spending includes total Medicare payments covered services Parts B presented per beneficiary (.e. per capita). readmit_rate Hospital readmissions expressed percentage admissions. 30-day readmission defined admission acute care hospital cause within 30 days discharge acute care hospital. Except patient died stay, inpatient stay classified index admission, readmission, . er_visits Emergency department visits presented number visits per 1,000 beneficiaries. ED visits include visits beneficiary released outpatient setting beneficiary admitted inpatient setting. clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"Multiple Chronic Conditions dataset provides information number chronic conditions among Original Medicare beneficiaries. dataset contains prevalence, use spending organized geography count chronic conditions set select 21 chronic conditions. count conditions grouped four categories (0-1, 2-3, 4-5 6 ).","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"Medicare Multiple Chronic Conditions","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"Update Frequency: Annually","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"","code":"if (FALSE) { cc_multiple(year     = 2018,             geo_lvl  = \"State\",             geo_desc = \"California\")  cc_multiple(year     = 2007,             geo_lvl  = \"National\",             demo_lvl = \"Race\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Specific Chronic Conditions API — cc_specific","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"Information prevalence, use spending count select chronic conditions among Original Medicare (fee--service) beneficiaries.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"","code":"cc_specific(   year = 2018,   geo_lvl = NULL,   geo_desc = NULL,   fips = NULL,   age_lvl = NULL,   demo_lvl = NULL,   demo_desc = NULL,   condition = NULL,   prevalence = NULL,   stnd_pymt_pc = NULL,   pymt_pc = NULL,   readmit_rate = NULL,   er_visits = NULL,   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"year YYYY, calendar year Medicare enrollment. 2007-2018 data currently available. geo_lvl Geographic level data; options \"National\", \"State\", \"County\" geo_desc state /county Medicare beneficiary resides. values include 50 United States, District Columbia, Puerto Rico U.S. Virgin Islands. Data aggregated National level identified \"National'. fips FIPS state /county code Medicare beneficiary resides. Bene_Geo_Cd blank data aggregated National level Puerto Rico Virgin Islands. age_lvl Identifies age level population data aggregated. value '' indicates data row represents Fee--Service Medicare Beneficiaries. value '<65' '65+' indicates data aggregated age Medicare Beneficiaries end calendar year. demo_lvl Identifies demographic level population data aggregated. value '' indicates data row represents Fee--Service Medicare beneficiaries. value 'Sex' indicates data aggregated Medicare beneficiary's sex. value 'Race' indicates data aggregated Medicare beneficiary's race. value 'Dual Status' indicates data aggregated Medicare beneficiary's dual eligibility status. demo_desc Bene_Demo_Lvl='Sex', beneficiary’s sex classified Male Female identified using information CMS enrollment database. Bene_Demo_Lvl='Race', race/ethnicity classifications : Non-Hispanic White, Black African American, Asian/Pacific Islander, Hispanic, American Indian/Alaska Native. chronic condition reports use variable RTI_RACE_CD, available Master Beneficiary Files CCW. Bene_Demo_Lvl='Dual Status',beneficiaries can classified 'Medicare & Medicaid' 'Medicare '. Beneficiares enrolled Medicare Medicaid known “dual eligibles.” Medicare beneficiaries classified dual eligibles month given calendar year receiving full partial Medicaid benefits. condition Identifies chronic condition prevalence utilization compiled. 21 chronic conditions identified using Medicare administrative claims. Medicare beneficiary considered chronic condition CMS administrative data claim indicating beneficiary received service treatment specific condition. Beneficiaries may one chronic conditions listed. prevalence Prevalence estimates calculated taking beneficiaries within MCC category divided total number beneficiaries fee--service population, expressed percentage. stnd_pymt_pc Medicare standardized spending includes total Medicare payments covered services Parts B presented per beneficiary (.e. per capita). Standardized payments presented allow comparisons across geographic areas health care use among beneficiaries. pymt_pc Medicare spending includes total Medicare payments covered services Parts B presented per beneficiary (.e. per capita). readmit_rate Hospital readmissions expressed percentage admissions. 30-day readmission defined admission acute care hospital cause within 30 days discharge acute care hospital. Except patient died stay, inpatient stay classified index admission, readmission, . er_visits Emergency department visits presented number visits per 1,000 beneficiaries. ED visits include visits beneficiary released outpatient setting beneficiary admitted inpatient setting. clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"Select Chronic Conditions dataset provides information 21 selected chronic conditions among Original Medicare beneficiaries. dataset contains prevalence, use spending organized geography distinct chronic conditions listed . • Alcohol Abuse Drug Abuse/ Substance Abuse • Alzheimer’s Disease Related Dementia • Arthritis (Osteoarthritis Rheumatoid) • Asthma • Atrial Fibrillation • Autism Spectrum Disorders • Cancer (Breast, Colorectal, Lung, Prostate) • Chronic Kidney Disease • Chronic Obstructive Pulmonary Disease • Depression • Diabetes • Drug Abuse/ Substance Abuse • Heart Failure • Hepatitis (Chronic Viral B & C) • HIV/AIDS • Hyperlipidemia (High cholesterol) • Hypertension (High blood pressure) • Ischemic Heart Disease • Osteoporosis • Schizophrenia Psychotic Disorders • Stroke","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"Medicare Specific Chronic Conditions","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"Update Frequency: Annually","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"","code":"if (FALSE) { cc_specific(year     = 2018,             geo_lvl  = \"State\",             geo_desc = \"California\")  cc_specific(year     = 2007,             geo_lvl  = \"National\",             demo_lvl = \"Race\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the CMS Public Reporting of Missing Digital Contact Information API — missing_information","title":"Search the CMS Public Reporting of Missing Digital Contact Information API — missing_information","text":"Information providers missing digital contact information NPPES.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the CMS Public Reporting of Missing Digital Contact Information API — missing_information","text":"","code":"missing_information(npi = NULL, clean_names = TRUE, lowercase = TRUE)"},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the CMS Public Reporting of Missing Digital Contact Information API — missing_information","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the CMS Public Reporting of Missing Digital Contact Information API — missing_information","text":"npi provider’s National Provider Identifier clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the CMS Public Reporting of Missing Digital Contact Information API — missing_information","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the CMS Public Reporting of Missing Digital Contact Information API — missing_information","text":"May 2020 CMS Interoperability Patient Access final rule, CMS finalized policy publicly report names NPIs providers digital contact information included NPPES system (85 FR 25584). data includes NPI provider name providers clinicians without digital contact information NPPES.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the CMS Public Reporting of Missing Digital Contact Information API — missing_information","text":"CMS Public Reporting Missing Digital Contact Information API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the CMS Public Reporting of Missing Digital Contact Information API — missing_information","text":"Update Frequency: Quarterly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the CMS Public Reporting of Missing Digital Contact Information API — missing_information","text":"","code":"missing_information(npi = 1134122013) #> # A tibble: 1 × 3 #>   npi        last_name first_name #>   <chr>      <chr>     <chr>      #> 1 1134122013 Henry     Timothy"},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the NPPES National Provider Identifier Registry API — nppes_npi","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"provider_nppes() allows search NPPES NPI Registry's public API many parameters defined API's documentation.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"","code":"nppes_npi(   npi = NULL,   prov_type = NULL,   first = NULL,   last = NULL,   org_name = NULL,   taxonomy = NULL,   city = NULL,   state = NULL,   zip = NULL,   country = NULL,   limit = 200,   skip = NULL )"},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"npi 10-digit National Provider Identifier (NPI). prov_type Read API can refined retrieve Individual Providers (NPI-1 Type 1) Organizational Providers (NPI-2 Type 2.) specified, Type 1 Type 2 NPIs returned. using Enumeration Type, criteria entered. Additional criteria must also entered well. first Provider's first name. Applies Individual Providers (NPI-1) . Trailing wildcard entries permitted requiring least two characters entered (e.g. \"jo*\" ). field allows following special characters: ampersand(&), apostrophe(,), colon(:), comma(,), forward slash(/), hyphen(-), left right parentheses(()), period(.), pound sign(#), quotation mark(\"), semi-colon(;). last Provider's last name. Applies Individual Providers (NPI-1) . Trailing wildcard entries permitted requiring least two characters entered (e.g. \"jo*\" ). field allows following special characters: ampersand(&), apostrophe(,), colon(:), comma(,), forward slash(/), hyphen(-), left right parentheses(()), period(.), pound sign(#), quotation mark(\"), semi-colon(;). org_name Healthcare organization's name. Applies Organizational Providers (NPI-2) . Trailing wildcard entries permitted requiring least two characters entered. types Organization Names (LBN, DBA, Former LBN, Name) associated NPI examined matching contents, therefore, results might contain organization name different one entered Organization Name criterion. field allows following special characters: ampersand, apostrophe, \"\" sign, colon, comma, forward slash, hyphen, left right parentheses, period, pound sign, quotation mark, semi-colon. taxonomy Search providers taxonomy entering taxonomy description. city City associated provider's address. search Military Address, enter either APO FPO City field. field allows following special characters: ampersand, apostrophe, colon, comma, forward slash, hyphen, left right parentheses, period, pound sign, quotation mark, semi-colon. state State abbreviation associated provider's address. field used input criterion. field used, least one field, besides prov_type country, must populated. Valid values state abbreviations: https://npiregistry.cms.hhs.gov/help-api/state. zip Postal Code associated provider's address identified Address Purpose. enter 5 digit postal code, match appropriate 9 digit (zip+4) codes data. Trailing wildcard entries permitted requiring least two characters entered (e.g., \"21*\"). country Country abbreviation associated provider's address. field can used input criterion, long value selected US (United States). Valid values country abbreviations: https://npiregistry.cms.hhs.gov/help-api/country. limit Maximum number results return; default 200, maximum 1200. skip Number results skip searching previous number; set limit.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"NPPES NPI Registry Public Search free directory active National Provider Identifier (NPI) records. Healthcare providers acquire unique 10-digit NPIs identify standard way throughout industry. CMS supplies NPI, publish parts NPI record public relevance, including provider’s name, taxonomy practice address. enables search providers NPPES (National Plan Provider Enumeration System.) information produced NPI Registry provided accordance NPPES Data Dissemination Notice. charge use NPI Registry.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"NPPES NPI Registry API Documentation NPPES NPI Registry API Demo","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"Update Frequency: Weekly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"","code":"if (FALSE) { ### Single NPI nppes_npi(npi = 1528060837)  ### City, state, country nppes_npi(city = \"Atlanta\",           state = \"GA\",           country = \"US\")  ### First name, city, state nppes_npi(first = \"John\",           city = \"Baltimore\",           state = \"MD\")  nppes_npi(npi = 1336413418) # NPI-2 nppes_npi(npi = 1710975040) # NPI-1 nppes_npi(npi = 1659781227) # Deactivated  ### List of NPIs npi_list <- c(1003026055,               1710983663,               1316405939,               1720392988,               1518184605,               1922056829,               1083879860)  npi_list |> purrr::map_dfr(nppes_npi) |> dplyr::group_split(outcome)  ### Data frame of NPIs npi_df <- data.frame(npi = c(1710983663,                              1003026055,                              1316405939,                              1720392988,                              1518184605,                              1922056829,                              1083879860)) npi_df |> tibble::deframe() |> purrr::map_dfr(nppes_npi)  ###Tribble example tribble <- tibble::tribble( ~fn,         ~params, \"nppes_npi\", list(1336413418), \"nppes_npi\", list(1710975040), \"nppes_npi\", list(1659781227), \"nppes_npi\", list(first = \"John\", city = \"Baltimore\", state = \"MD\"), \"nppes_npi\", list(first = \"Andrew\", city = \"Atlanta\", state = \"GA\"))  purrr::invoke_map_dfr(tribble$fn, tribble$params) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Opt Out Affidavits API — opt_out","title":"Search the Medicare Opt Out Affidavits API — opt_out","text":"list practitioners currently opted Medicare.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Opt Out Affidavits API — opt_out","text":"","code":"opt_out(   first = NULL,   last = NULL,   npi = NULL,   specialty = NULL,   date_start = NULL,   date_end = NULL,   address = NULL,   city = NULL,   state_abb = NULL,   zip = NULL,   eligible = NULL,   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Opt Out Affidavits API — opt_out","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Opt Out Affidavits API — opt_out","text":"first First Name Opt Provider last Last Name Opt Provider npi National Provider Identifier (NPI) number Opt Provider specialty Specialty Opt Provider date_start Date Provider's Opt Status effective date_end Date Provider's Opt Status ends address Provider's Street Address city Provider's City state_abb Provider's State Abbreviation zip Provider's Zip Code eligible Flag indicating whether Provider eligible Order Refer clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Opt Out Affidavits API — opt_out","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Opt Out Affidavits API — opt_out","text":"Opt Affidavits dataset provides information providers decided participate Medicare. contains provider's NPI, specialty, address, effective dates.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Opt Out Affidavits API — opt_out","text":"Medicare Opt Affidavits API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Opt Out Affidavits API — opt_out","text":"Update Frequency: Monthly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Opt Out Affidavits API — opt_out","text":"","code":"opt_out(specialty = \"Psychiatry\", zip = \"07626\") #> # A tibble: 3 × 14 #>   date       last_updated first_…¹ last_…² npi   speci…³ optou…⁴ optou…⁵ first…⁶ #>   <date>     <chr>        <chr>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   #> 1 2022-12-11 09/15/2022   Laura    Brenner 1235… Psychi… 05/01/… 05/01/… 135 CO… #> 2 2022-12-11 09/15/2022   Ruchi    Nadella 1356… Psychi… 03/30/… 03/30/… 135 CO… #> 3 2022-12-11 09/15/2022   Sireesha Jathav… 1508… Psychi… 01/22/… 01/22/… 145 CO… #> # … with 5 more variables: second_line_street_address <chr>, city_name <chr>, #> #   state_code <chr>, zip_code <chr>, eligible_to_order_and_refer <chr>, and #> #   abbreviated variable names ¹​first_name, ²​last_name, ³​specialty, #> #   ⁴​optout_effective_date, ⁵​optout_end_date, ⁶​first_line_street_address opt_out(first = \"David\", last = \"Smith\") #> # A tibble: 6 × 14 #>   date       last_updated first_…¹ last_…² npi   speci…³ optou…⁴ optou…⁵ first…⁶ #>   <date>     <chr>        <chr>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   #> 1 2022-12-11 09/15/2022   David    Smith   1649… Maxill… 06/25/… 06/25/… 909 W … #> 2 2022-12-11 09/15/2022   David    Smith   1750… Oral S… 05/07/… 05/07/… 1116 N… #> 3 2022-12-11 09/15/2022   David    Smith   1114… Psychi… 08/15/… 08/15/… 3101 S… #> 4 2022-12-11 11/15/2022   David    Smith   1023… Obstet… 10/01/… 10/01/… 755 N … #> 5 2022-12-11 09/15/2022   David    Smith   1790… Oral S… 03/26/… 03/26/… 6800 M… #> 6 2022-12-11 09/15/2022   David    Smith   1659… Dentist 05/26/… 05/26/… 3038 B… #> # … with 5 more variables: second_line_street_address <chr>, city_name <chr>, #> #   state_code <chr>, zip_code <chr>, eligible_to_order_and_refer <chr>, and #> #   abbreviated variable names ¹​first_name, ²​last_name, ³​specialty, #> #   ⁴​optout_effective_date, ⁵​optout_end_date, ⁶​first_line_street_address opt_out(npi = 1114974490) #> # A tibble: 1 × 14 #>   date       last_updated first_…¹ last_…² npi   speci…³ optou…⁴ optou…⁵ first…⁶ #>   <date>     <chr>        <chr>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   #> 1 2022-12-11 09/15/2022   David    Altchek 1114… Orthop… 07/01/… 07/01/… 535 EA… #> # … with 5 more variables: second_line_street_address <chr>, city_name <chr>, #> #   state_code <chr>, zip_code <chr>, eligible_to_order_and_refer <chr>, and #> #   abbreviated variable names ¹​first_name, ²​last_name, ³​specialty, #> #   ⁴​optout_effective_date, ⁵​optout_end_date, ⁶​first_line_street_address opt_out(state_abb = \"NY\", eligible = \"N\") #> # A tibble: 614 × 14 #>    date       last_updated first…¹ last_…² npi   speci…³ optou…⁴ optou…⁵ first…⁶ #>    <date>     <chr>        <chr>   <chr>   <chr> <chr>   <chr>   <chr>   <chr>   #>  1 2022-12-11 09/15/2022   Patrick Mcgrath 1932… Psychi… 06/01/… 06/01/… 100 PA… #>  2 2022-12-11 09/15/2022   Stephen Donovan 1942… Psychi… 05/01/… 05/01/… 1070 P… #>  3 2022-12-11 09/15/2022   William Golden  1477… Clinic… 07/01/… 07/01/… 4 RYDE… #>  4 2022-12-11 09/15/2022   Ursula  Ofman   1427… Clinic… 10/01/… 10/01/… 347 FI… #>  5 2022-12-11 09/15/2022   Lori    Davis   1902… Clinic… 07/01/… 07/01/… 80 FIF… #>  6 2022-12-11 09/15/2022   Ronald  Hoffman 1679… Genera… 04/01/… 04/01/… 330 W … #>  7 2022-12-11 09/15/2022   Linda   Penn    1033… Clinic… 05/21/… 05/21/… 98 REM… #>  8 2022-12-11 09/15/2022   Paul    Geltner 1205… Clinic… 04/01/… 04/01/… 113 UN… #>  9 2022-12-11 09/15/2022   Kathar… Strati… 1023… Psychi… 12/14/… 12/14/… 15 W 7… #> 10 2022-12-11 09/15/2022   Marilyn Oswald  1790… Clinic… 07/19/… 07/19/… 257 CE… #> # … with 604 more rows, 5 more variables: second_line_street_address <chr>, #> #   city_name <chr>, state_code <chr>, zip_code <chr>, #> #   eligible_to_order_and_refer <chr>, and abbreviated variable names #> #   ¹​first_name, ²​last_name, ³​specialty, ⁴​optout_effective_date, #> #   ⁵​optout_end_date, ⁶​first_line_street_address opt_out(date_start = \"01/30/1998\", date_end = \"01/30/2024\") #> # A tibble: 1 × 14 #>   date       last_updated first_…¹ last_…² npi   speci…³ optou…⁴ optou…⁵ first…⁶ #>   <date>     <chr>        <chr>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   #> 1 2022-12-11 09/15/2022   Jonathan Raines  1720… Psychi… 01/30/… 01/30/… 1629 M… #> # … with 5 more variables: second_line_street_address <chr>, city_name <chr>, #> #   state_code <chr>, zip_code <chr>, eligible_to_order_and_refer <chr>, and #> #   abbreviated variable names ¹​first_name, ²​last_name, ³​specialty, #> #   ⁴​optout_effective_date, ⁵​optout_end_date, ⁶​first_line_street_address opt_out(city = \"Los Angeles\", address = \"9201 W SUNSET BLVD\") #> # A tibble: 5 × 14 #>   date       last_updated first_…¹ last_…² npi   speci…³ optou…⁴ optou…⁵ first…⁶ #>   <date>     <chr>        <chr>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   #> 1 2022-12-11 09/15/2022   Ned      Cowan   1649… Psychi… 12/30/… 12/30/… 9201 W… #> 2 2022-12-11 09/15/2022   Geemee   Chung   1497… Infect… 04/20/… 04/20/… 9201 W… #> 3 2022-12-11 11/15/2022   Genise   Fraiman 1598… Intern… 10/13/… 10/13/… 9201 W… #> 4 2022-12-11 09/15/2022   David    Saleha… 1760… Oral S… 04/06/… 04/06/… 9201 W… #> 5 2022-12-11 11/15/2022   Colleen  Ryan    1952… Family… 09/21/… 09/21/… 9201 W… #> # … with 5 more variables: second_line_street_address <chr>, city_name <chr>, #> #   state_code <chr>, zip_code <chr>, eligible_to_order_and_refer <chr>, and #> #   abbreviated variable names ¹​first_name, ²​last_name, ³​specialty, #> #   ⁴​optout_effective_date, ⁵​optout_end_date, ⁶​first_line_street_address if (FALSE) { # Returns empty list i.e., provider is not in the database opt_out(npi = 1326011057)  # Example of possible data cleaning psych <- opt_out(specialty = \"Psychiatry\")  psych |> dplyr::mutate(last_updated = as.Date(parsedate::parse_date(last_updated)), optout_effective_date = as.Date(parsedate::parse_date(optout_effective_date)), optout_end_date = as.Date(parsedate::parse_date(optout_end_date))) |> age_days(date, optout_end_date, colname = \"days_until_end\") |> age_days(last_updated, date, colname = \"days_since_update\") |> age_days(optout_effective_date, date, colname = \"days_since_optout\") |> dplyr::mutate(zip_code = purrr::map_chr(zip_code, format_zipcode)) |> dplyr::mutate(address_full = full_address(.data, \"first_line_street_address\", \"second_line_street_address\", \"city_name\", \"state_code\",\"zip_code\")) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Order and Referring API — order_refer","title":"Search the Medicare Order and Referring API — order_refer","text":"physicians non-physician practitioners legally eligible order refer Medicare program current enrollment records Medicare.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Order and Referring API — order_refer","text":"","code":"order_refer(   npi = NULL,   last = NULL,   first = NULL,   partb = NULL,   dme = NULL,   hha = NULL,   pmd = NULL,   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Order and Referring API — order_refer","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Order and Referring API — order_refer","text":"npi 10-digit National Provider Identifier (NPI) last Provider's last name first Provider's first name partb logical dme logical hha logical pmd logical clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Order and Referring API — order_refer","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Order and Referring API — order_refer","text":"Medicare Order Referring dataset provides information physicians non-physician practitioners, National Provider Identifier (NPI), type/specialty legally eligible order refer Medicare program current enrollment records Medicare.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Order and Referring API — order_refer","text":"Medicare Order Referring API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Order and Referring API — order_refer","text":"Update Frequency: Weekly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Order and Referring API — order_refer","text":"","code":"if (FALSE) { order_refer(npi = 1003026055)  order_refer(last = \"phadke\",             first = \"radhika\")  # Unnamed List of NPIs npi_list <- c(1003026055,               1316405939,               1720392988,               1518184605,               1922056829,               1083879860)  npi_list |> purrr::map_dfr(order_refer)  # Data frame of NPIs npi_df <- data.frame(npi = c(1003026055,                              1316405939,                              1720392988,                              1518184605,                              1922056829,                              1083879860)) npi_df |> tibble::deframe() |> purrr::map_dfr(order_refer) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_geography.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Information services procedures provided Original Medicare (fee--service) Part B (Medical Insurance) beneficiaries physicians healthcare professionals; aggregated geography service.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_geography.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"","code":"physician_by_geography(   geo_level = NULL,   fips = NULL,   geo_desc = NULL,   hcpcs_code = NULL,   hcpcs_desc = NULL,   hcpcs_drug = NULL,   pos = NULL,   year = 2020,   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_geography.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_geography.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"geo_level Identifies level geography data row aggregated. value 'State' indicates data row aggregated single state identified Rendering Provider State column given HCPCS Code Level. value 'National' indicates data row aggregated across states given HCPCS Code Level. fips FIPS code referring provider state. variable blank reported national level. geo_desc state name provider located, reported NPPES. values include 50 United States, District Columbia, U.S. territories, Armed Forces areas, Unknown Foreign Country. Data aggregated National level identified word 'National'. hcpcs_code HCPCS code used identify specific medical service furnished provider. hcpcs_desc Description HCPCS code specific medical service furnished provider. HCPCS descriptions associated CPT codes consumer friendly descriptions provided AMA. CPT Consumer Friendly Descriptors lay synonyms CPT descriptors intended help healthcare consumers medical professionals understand clinical procedures bills patient portals. CPT Consumer Friendly Descriptors used clinical coding documentation. descriptions CMS Level II descriptions provided long form. Due variable length restrictions, CMS Level II descriptions truncated 256 bytes. result, HCPCS description can associated one HCPCS code. hcpcs_drug Identifies whether HCPCS code specific service furnished provider HCPCS listed Medicare Part B Drug Average Sales Price (ASP) File. pos Identifies whether place service submitted claims facility (value ‘F’) non-facility (value ‘O’). Non-facility generally office setting; however entities included non-facility. year Year YYYY format, 2013-2020; default 2020 clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_geography.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_geography.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Geography Service dataset contains information utilization, payment (allowed amount Medicare payment), submitted charges organized HCPCS place service national table organized provider state, HCPCS place service state table. national state tables also include HCPCS drug indicator identify whether HCPCS product/service drug defined Medicare Part B Drug ASP list.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_geography.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Medicare Physician & Practitioners: Geography Service API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_geography.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Update Frequency: Annually","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_geography.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"","code":"physician_by_geography(hcpcs_code = \"0002A\",                        year = 2020) #> # A tibble: 9 × 16 #>    year rndrng…¹ rndrn…² rndrn…³ hcpcs…⁴ hcpcs…⁵ hcpcs…⁶ place…⁷ tot_r…⁸ tot_b…⁹ #>   <dbl> <chr>    <chr>   <chr>   <chr>   <chr>   <chr>   <chr>     <int>   <int> #> 1  2020 National \"\"      Nation… 0002A   Adm sa… N       O            53     279 #> 2  2020 State    \"06\"    Califo… 0002A   Adm sa… N       O             3      91 #> 3  2020 State    \"12\"    Florida 0002A   Adm sa… N       O             5      16 #> 4  2020 State    \"17\"    Illino… 0002A   Adm sa… N       O             3      18 #> 5  2020 State    \"23\"    Maine   0002A   Adm sa… N       O             1      22 #> 6  2020 State    \"24\"    Maryla… 0002A   Adm sa… N       O             3      18 #> 7  2020 State    \"25\"    Massac… 0002A   Adm sa… N       O             3      16 #> 8  2020 State    \"34\"    New Je… 0002A   Adm sa… N       O             3      14 #> 9  2020 State    \"42\"    Pennsy… 0002A   Adm sa… N       O             4      40 #> # … with 6 more variables: tot_srvcs <int>, tot_bene_day_srvcs <int>, #> #   avg_sbmtd_chrg <dbl>, avg_mdcr_alowd_amt <dbl>, avg_mdcr_pymt_amt <dbl>, #> #   avg_mdcr_stdzd_amt <dbl>, and abbreviated variable names #> #   ¹​rndrng_prvdr_geo_lvl, ²​rndrng_prvdr_geo_cd, ³​rndrng_prvdr_geo_desc, #> #   ⁴​hcpcs_cd, ⁵​hcpcs_desc, ⁶​hcpcs_drug_ind, ⁷​place_of_srvc, #> #   ⁸​tot_rndrng_prvdrs, ⁹​tot_benes if (FALSE) { service <- purrr::map_dfr(as.character(2013:2020),            ~physician_by_service(npi = 1003000126, year = .x))  procedures <- service |>               dplyr::distinct(hcpcs_cd) |>               tibble::deframe()  arg_cross <- purrr::cross_df(list(              x = as.character(2013:2020),              y = procedures))  # National Level purrr::map2_dfr(arg_cross$x, arg_cross$y, ~physician_by_geography(geo_level = \"National\", year = .x, hcpcs_code = .y))  # State Level purrr::map2_dfr(arg_cross$x, arg_cross$y, ~physician_by_geography(geo_level = \"Georgia\", year = .x, hcpcs_code = .y)) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Physician & Other Practitioners API\nby Provider — physician_by_provider","title":"Search the Medicare Physician & Other Practitioners API\nby Provider — physician_by_provider","text":"Information services procedures provided Original Medicare (fee--service) Part B (Medical Insurance) beneficiaries physicians healthcare professionals; aggregated provider.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Physician & Other Practitioners API\nby Provider — physician_by_provider","text":"","code":"physician_by_provider(   npi = NULL,   last_org = NULL,   first = NULL,   cred = NULL,   gender = NULL,   type = NULL,   city = NULL,   state = NULL,   fips = NULL,   zip = NULL,   ruca = NULL,   country = NULL,   specialty = NULL,   par_ind = NULL,   year = 2020,   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_provider.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Physician & Other Practitioners API\nby Provider — physician_by_provider","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Physician & Other Practitioners API\nby Provider — physician_by_provider","text":"npi National Provider Identifier (NPI) rendering provider claim. provider NPI numeric identifier registered NPPES. last_org Last name/Organization name provider. provider registered NPPES individual (entity type code ), provider’s last name. provider registered organization (entity type code O), organization name. first individual provider's (entity type code ) first name. organization's (entity type code O) blank. cred individual provider's (entity type code ) credentials. organization's blank. gender individual provider's gender. organization's blank. type Type entity reported NPPES. entity code identifies providers registered individuals entity type code O identifies providers registered organizations. city city provider located, reported NPPES. state state provider located, reported NPPES. fips FIPS code rendering provider's state. zip provider’s zip code, reported NPPES. ruca Rural-Urban Commuting Area Code (RUCA); Census tract-based classification scheme utilizes standard Bureau Census Urbanized Area Urban Cluster definitions combination work commuting information characterize nation's Census tracts regarding rural urban status relationships. Referring Provider ZIP code cross walked United States Department Agriculture (USDA) 2010 Rural-Urban Commuting Area Codes. country country provider located, reported NPPES. specialty Derived provider specialty code reported claim. providers reported one specialty code claims, specialty code associated largest number services. par_ind Identifies whether provider participates Medicare /accepts assignment Medicare allowed amounts. value Y provider least one claim identifying provider participating Medicare accepting assignment Medicare allowed amounts within HCPCS code place service. non-participating provider may elect accept Medicare allowed amounts services accept Medicare allowed amounts services. year Year YYYY format, 2013-2020; default 2020 clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Physician & Other Practitioners API\nby Provider — physician_by_provider","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_provider.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Physician & Other Practitioners API\nby Provider — physician_by_provider","text":"Provider dataset provides information use, payments, submitted charges beneficiary demographic health characteristics organized National Provider Identifier (NPI).","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_provider.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Physician & Other Practitioners API\nby Provider — physician_by_provider","text":"Medicare Physician & Practitioners: Provider API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_provider.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Physician & Other Practitioners API\nby Provider — physician_by_provider","text":"Update Frequency: Annually","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Physician & Other Practitioners API\nby Provider — physician_by_provider","text":"","code":"physician_by_provider(npi = 1003000423,                       year = 2020) #> # A tibble: 1 × 74 #>    year rndrng…¹ rndrn…² rndrn…³ rndrn…⁴ rndrn…⁵ rndrn…⁶ rndrn…⁷ rndrn…⁸ rndrn…⁹ #>   <dbl> <chr>    <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1  2020 1003000… Velotta Jennif… A       M.D.    F       I       11100 … \"\"      #> # … with 64 more variables: rndrng_prvdr_city <chr>, #> #   rndrng_prvdr_state_abrvtn <chr>, rndrng_prvdr_state_fips <chr>, #> #   rndrng_prvdr_zip5 <chr>, rndrng_prvdr_ruca <chr>, #> #   rndrng_prvdr_ruca_desc <chr>, rndrng_prvdr_cntry <chr>, #> #   rndrng_prvdr_type <chr>, rndrng_prvdr_mdcr_prtcptg_ind <chr>, #> #   tot_hcpcs_cds <chr>, tot_benes <int>, tot_srvcs <int>, #> #   tot_sbmtd_chrg <int>, tot_mdcr_alowd_amt <dbl>, tot_mdcr_pymt_amt <dbl>, …  physician_by_provider(type = \"I\",                       city = \"Hershey\",                       state = \"PA\",                       fips = 42,                       ruca =1,                       gender = \"F\",                       cred = \"M.D.\",                       specialty = \"Anesthesiology\") #> # A tibble: 19 × 74 #>     year rndrn…¹ rndrn…² rndrn…³ rndrn…⁴ rndrn…⁵ rndrn…⁶ rndrn…⁷ rndrn…⁸ rndrn…⁹ #>    <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1  2020 102323… Barbie… Carolyn \"\"      M.D.    F       I       500 Un… \"H088\"  #>  2  2020 110421… Coleman Renee   \"\"      M.D.    F       I       500 Un… \"\"      #>  3  2020 111493… Pilipo… Milena  \"\"      M.D.    F       I       500 Un… \"\"      #>  4  2020 112424… So      Celaine \"\"      M.D.    F       I       500 Un… \"H088\"  #>  5  2020 115452… Varner  Malina  \"\"      M.D.    F       I       500 Un… \"C2681\" #>  6  2020 132624… Read    Selina  \"\"      M.D.    F       I       500 Un… \"H088\"  #>  7  2020 137675… Grap    Shannon \"M\"     M.D.    F       I       500 Un… \"H187\"  #>  8  2020 146776… Cruz E… Hillenn \"\"      M.D.    F       I       500 Un… \"\"      #>  9  2020 151825… Perez   Rosa    \"\"      M.D.    F       I       500 Un… \"\"      #> 10  2020 153850… Owusu-… Ekua    \"\"      M.D.    F       I       500 Un… \"\"      #> 11  2020 155878… Dudak   Amanda  \"\"      M.D.    F       I       500 Un… \"\"      #> 12  2020 156848… Parekh  Uma     \"R\"     M.D.    F       I       500 Un… \"\"      #> 13  2020 157890… Hart    Sarah   \"B\"     M.D.    F       I       500 Un… \"\"      #> 14  2020 162928… Freest… Megan   \"\"      M.D.    F       I       500 Un… \"H088\"  #> 15  2020 171010… Mcalevy Mary    \"\"      M.D.    F       I       500 Un… \"H088\"  #> 16  2020 184146… Igleha… Robyn   \"C\"     M.D.    F       I       500 Un… \"Dept … #> 17  2020 194246… Kanekar Revati  \"\"      M.D.    F       I       500 Un… \"\"      #> 18  2020 195279… Pace    Agnes   \"\"      M.D.    F       I       500 Un… \"\"      #> 19  2020 197294… Ireton  Jordan  \"E\"     M.D.    F       I       500 Un… \"\"      #> # … with 64 more variables: rndrng_prvdr_city <chr>, #> #   rndrng_prvdr_state_abrvtn <chr>, rndrng_prvdr_state_fips <chr>, #> #   rndrng_prvdr_zip5 <chr>, rndrng_prvdr_ruca <chr>, #> #   rndrng_prvdr_ruca_desc <chr>, rndrng_prvdr_cntry <chr>, #> #   rndrng_prvdr_type <chr>, rndrng_prvdr_mdcr_prtcptg_ind <chr>, #> #   tot_hcpcs_cds <chr>, tot_benes <int>, tot_srvcs <int>, #> #   tot_sbmtd_chrg <dbl>, tot_mdcr_alowd_amt <dbl>, tot_mdcr_pymt_amt <dbl>, … if (FALSE) { provider <- purrr::map_dfr(as.character(2013:2020),            ~physician_by_provider(npi = 1003000126, year = .x)) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_service.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Physician & Other Practitioners API\nby Provider and Service — physician_by_service","title":"Search the Medicare Physician & Other Practitioners API\nby Provider and Service — physician_by_service","text":"Information services procedures provided Original Medicare (fee--service) Part B (Medical Insurance) beneficiaries physicians healthcare professionals; aggregated provider service.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_service.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Physician & Other Practitioners API\nby Provider and Service — physician_by_service","text":"","code":"physician_by_service(   npi = NULL,   last_org = NULL,   first = NULL,   cred = NULL,   gender = NULL,   type = NULL,   city = NULL,   state = NULL,   fips = NULL,   zip = NULL,   ruca = NULL,   country = NULL,   specialty = NULL,   par_ind = NULL,   hcpcs_code = NULL,   hcpcs_drug = NULL,   pos = NULL,   year = 2020,   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_service.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Physician & Other Practitioners API\nby Provider and Service — physician_by_service","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_service.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Physician & Other Practitioners API\nby Provider and Service — physician_by_service","text":"npi National Provider Identifier (NPI) rendering provider claim. provider NPI numeric identifier registered NPPES. last_org Last name/Organization name provider. provider registered NPPES individual (entity type code=’’), provider’s last name. provider registered organization (entity type code = ‘O’), organization name. first individual provider's (entity type code=’’) first name. organization's (entity type code = ‘O’) blank. cred individual provider's (entity type code=’’) credentials. organization's blank. gender individual provider's gender. organization's blank. type Type entity reported NPPES. entity code ‘’ identifies providers registered individuals entity type code ‘O’ identifies providers registered organizations. city city provider located, reported NPPES. state state provider located, reported NPPES. fips FIPS code rendering provider's state. zip provider’s zip code, reported NPPES. ruca Rural-Urban Commuting Area Code (RUCA); Census tract-based classification scheme utilizes standard Bureau Census Urbanized Area Urban Cluster definitions combination work commuting information characterize nation's Census tracts regarding rural urban status relationships. Referring Provider ZIP code cross walked United States Department Agriculture (USDA) 2010 Rural-Urban Commuting Area Codes. country country provider located, reported NPPES. specialty Derived provider specialty code reported claim. providers reported one specialty code claims, specialty code associated largest number services. par_ind Identifies whether provider participates Medicare /accepts assignment Medicare allowed amounts. value ‘Y’ provider least one claim identifying provider participating Medicare accepting assignment Medicare allowed amounts within HCPCS code place service. non-participating provider may elect accept Medicare allowed amounts services accept Medicare allowed amounts services. hcpcs_code HCPCS code used identify specific medical service furnished provider. HCPCS codes include two levels. Level codes Current Procedural Terminology (CPT) codes maintained American Medical Association Level II codes created CMS identify products, supplies services covered CPT codes (ambulance services). hcpcs_drug Identifies whether HCPCS code specific service furnished provider HCPCS listed Medicare Part B Drug Average Sales Price (ASP) File. Please visit ASP drug pricing page additional information. pos Identifies whether place service submitted claims facility (value ‘F’) non-facility (value ‘O’). Non-facility generally office setting; however entities included non-facility. year Year YYYY format, 2013-2020; default 2020 clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_service.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Physician & Other Practitioners API\nby Provider and Service — physician_by_service","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_service.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Physician & Other Practitioners API\nby Provider and Service — physician_by_service","text":"Provider Service dataset provides information services procedures provided Medicare (fee--service) Part B beneficiaries physicians healthcare professionals. data based information gathered CMS administrative claims data Part B beneficiaries available CMS Chronic Conditions Data Warehouse. spending utilization data Physician Practitioners Provider Service Dataset aggregated following: NPI performing provider, Healthcare Common Procedure Coding System (HCPCS) code, place service (either facility non-facility). can multiple records given NPI based number distinct HCPCS codes billed services provided. Data aggregated based place service separate fee schedules apply depending whether place service submitted claim facility non-facility.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_service.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Physician & Other Practitioners API\nby Provider and Service — physician_by_service","text":"Medicare Physician & Practitioners: Provider Service API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_service.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Physician & Other Practitioners API\nby Provider and Service — physician_by_service","text":"Update Frequency: Annually","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/physician_by_service.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Physician & Other Practitioners API\nby Provider and Service — physician_by_service","text":"","code":"if (FALSE) { # Search by NPI physician_by_service(npi = 1003000126)  # Search by Last Name for 2019 physician_by_service(last_org = \"Enkeshafi\", year = 2019)  # Multiple NPIs npis <- c(1003026055,           1316405939,           1720392988,           1518184605,           1922056829,           1083879860)  npis |> purrr::map_dfr(physician_by_service)  # Retrieve All Provider Data, 2013-2020 purrr::map_dfr(as.character(2013:2020), ~physician_by_service(npi = 1003000126, year = .x)) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_enrollment.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Fee-For-Service Public Provider Enrollment API — provider_enrollment","title":"Search the Medicare Fee-For-Service Public Provider Enrollment API — provider_enrollment","text":"Information point time snapshot enrollment level data providers actively enrolled Medicare.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_enrollment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Fee-For-Service Public Provider Enrollment API — provider_enrollment","text":"","code":"provider_enrollment(   npi = NULL,   pecos_id = NULL,   enroll_id = NULL,   prov_type_code = NULL,   prov_type_desc = NULL,   state = NULL,   first_name = NULL,   middle_name = NULL,   last_name = NULL,   org_name = NULL,   gender = NULL,   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_enrollment.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Fee-For-Service Public Provider Enrollment API — provider_enrollment","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_enrollment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Fee-For-Service Public Provider Enrollment API — provider_enrollment","text":"npi NPI 10-digit unique numeric identifier providers must obtain enrolling Medicare. assigned health care providers upon application National Plan Provider Enumeration System (NPPES). pecos_id Provider associate level variable (PAC ID) PECOS database used link across tables. PAC ID 10-digit unique numeric identifier assigned individual organization PECOS. entity-level information (e.g., tax identification numbers organizational names) linked PAC ID. PAC ID may associated multiple Enrollment IDs individual organization enrolled multiple times different circumstances. enroll_id Provider enrollment ID PECOS database used link across tables. Enrollment ID 15-digit unique alphanumeric identifier assigned new provider enrollment application. enrollment-level information (e.g., enrollment type, enrollment state, provider specialty reassignment benefits) linked Enrollment ID. prov_type_code Provider enrollment application enrollment specialty type. field shows provider’s primary specialty code. practitioners DME suppliers, please see Secondary Specialty file list secondary specialties (applicable). 20% practitioners DME suppliers least one secondary specialty. prov_type_desc Provider enrollment application enrollment specialty type description state Provider enrollment state, abbreviated location. Providers enroll state level, one PAC ID may associated multiple ENRLMT_IDs multiple STATE_CD values. first_name Individual provider first name middle_name Individual provider middle name last_name Individual provider last name org_name Organizational provider name gender Individual provider gender; F (female), M (male), 9 (unknown) clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_enrollment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Fee-For-Service Public Provider Enrollment API — provider_enrollment","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_enrollment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Fee-For-Service Public Provider Enrollment API — provider_enrollment","text":"Medicare Fee--Service Public Provider Enrollment dataset includes information providers actively approved bill Medicare completed 855O time data pulled Provider Enrollment Chain Ownership System (PECOS). release provider enrollment data related provider information releases Physician Compare Data Transparency.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_enrollment.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Fee-For-Service Public Provider Enrollment API — provider_enrollment","text":"Medicare Fee--Service Public Provider Enrollment API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_enrollment.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Fee-For-Service Public Provider Enrollment API — provider_enrollment","text":"Update Frequency: Quarterly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_enrollment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Fee-For-Service Public Provider Enrollment API — provider_enrollment","text":"","code":"provider_enrollment(npi = 1417918293,                     prov_type_code = \"14-41\") #> # A tibble: 1 × 11 #>   npi    pecos…¹ enrlm…² provi…³ provi…⁴ state…⁵ first…⁶ mdl_n…⁷ last_…⁸ org_n…⁹ #>   <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 14179… 387048… I20040… 14-41   PRACTI… FL      STEVEN  D       SHEINER \"\"      #> # … with 1 more variable: gndr_sw <chr>, and abbreviated variable names #> #   ¹​pecos_asct_cntl_id, ²​enrlmt_id, ³​provider_type_cd, ⁴​provider_type_desc, #> #   ⁵​state_cd, ⁶​first_name, ⁷​mdl_name, ⁸​last_name, ⁹​org_name  provider_enrollment(first_name = \"DEBRA\",                     middle_name = \"L\",                     last_name = \"FROMER\") #> # A tibble: 1 × 11 #>   npi    pecos…¹ enrlm…² provi…³ provi…⁴ state…⁵ first…⁶ mdl_n…⁷ last_…⁸ org_n…⁹ #>   <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 18018… 135525… I20031… 14-34   PRACTI… NJ      DEBRA   L       FROMER  \"\"      #> # … with 1 more variable: gndr_sw <chr>, and abbreviated variable names #> #   ¹​pecos_asct_cntl_id, ²​enrlmt_id, ³​provider_type_cd, ⁴​provider_type_desc, #> #   ⁵​state_cd, ⁶​first_name, ⁷​mdl_name, ⁸​last_name, ⁹​org_name  provider_enrollment(org_name = \"ELIZABETHTOWN COMMUNITY HOSPITAL\",                     state = \"NY\",                     prov_type_code = \"00-85\") #> # A tibble: 2 × 11 #>   npi    pecos…¹ enrlm…² provi…³ provi…⁴ state…⁵ first…⁶ mdl_n…⁷ last_…⁸ org_n…⁹ #>   <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 18917… 357755… O20101… 00-85   PART A… NY      \"\"      \"\"      \"\"      ELIZAB… #> 2 14070… 357755… O20220… 00-85   PART A… NY      \"\"      \"\"      \"\"      ELIZAB… #> # … with 1 more variable: gndr_sw <chr>, and abbreviated variable names #> #   ¹​pecos_asct_cntl_id, ²​enrlmt_id, ³​provider_type_cd, ⁴​provider_type_desc, #> #   ⁵​state_cd, ⁶​first_name, ⁷​mdl_name, ⁸​last_name, ⁹​org_name  provider_enrollment(prov_type_desc = \"PRACTITIONER - ENDOCRINOLOGY\",                     state = \"AK\",                     gender = \"F\") #> # A tibble: 4 × 11 #>   npi    pecos…¹ enrlm…² provi…³ provi…⁴ state…⁵ first…⁶ mdl_n…⁷ last_…⁸ org_n…⁹ #>   <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 11846… 892109… I20040… 14-46   PRACTI… AK      JANICE  \"A\"     KOVAL   \"\"      #> 2 17109… 094111… I20091… 14-46   PRACTI… AK      JEANNE  \"R\"     BONAR   \"\"      #> 3 14977… 438567… I20151… 14-46   PRACTI… AK      CYDNEY  \"\"      FENTON  \"\"      #> 4 10331… 953725… I20220… 14-46   PRACTI… AK      BRENDA  \"\"      GOODWIN \"\"      #> # … with 1 more variable: gndr_sw <chr>, and abbreviated variable names #> #   ¹​pecos_asct_cntl_id, ²​enrlmt_id, ³​provider_type_cd, ⁴​provider_type_desc, #> #   ⁵​state_cd, ⁶​first_name, ⁷​mdl_name, ⁸​last_name, ⁹​org_name   provider_enrollment(pecos_id = 2860305554,                     enroll_id = \"I20031110000120\",                     gender = \"9\") #> # A tibble: 1 × 11 #>   npi    pecos…¹ enrlm…² provi…³ provi…⁴ state…⁵ first…⁶ mdl_n…⁷ last_…⁸ org_n…⁹ #>   <chr>  <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 11341… 286030… I20031… 14-41   PRACTI… TX      ROBERT  \"\"      YEAMAN  \"\"      #> # … with 1 more variable: gndr_sw <chr>, and abbreviated variable names #> #   ¹​pecos_asct_cntl_id, ²​enrlmt_id, ³​provider_type_cd, ⁴​provider_type_desc, #> #   ⁵​state_cd, ⁶​first_name, ⁷​mdl_name, ⁸​last_name, ⁹​org_name"},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_nppes.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the NPPES National Provider Identifier (NPI) Registry API — provider_nppes","title":"Search the NPPES National Provider Identifier (NPI) Registry API — provider_nppes","text":"provider_nppes() allows search NPPES NPI Registry's public API many parameters defined API's documentation.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_nppes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the NPPES National Provider Identifier (NPI) Registry API — provider_nppes","text":"","code":"provider_nppes(   npi = NULL,   first = NULL,   last = NULL,   org = NULL,   city = NULL,   state = NULL,   country = NULL,   limit = 10,   skip = NULL )"},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_nppes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the NPPES National Provider Identifier (NPI) Registry API — provider_nppes","text":"npi 10-digit National Provider Identifier (NPI). first Provider's first name. Applies Individual Providers (NPI-1) . Trailing wildcard entries permitted requiring least two characters entered (e.g. \"jo*\" ). field allows following special characters: ampersand(&), apostrophe(,), colon(:), comma(,), forward slash(/), hyphen(-), left right parentheses(()), period(.), pound sign(#), quotation mark(\"), semi-colon(;). last Provider's last name. Applies Individual Providers (NPI-1) . Trailing wildcard entries permitted requiring least two characters entered (e.g. \"jo*\" ). field allows following special characters: ampersand(&), apostrophe(,), colon(:), comma(,), forward slash(/), hyphen(-), left right parentheses(()), period(.), pound sign(#), quotation mark(\"), semi-colon(;). org Healthcare organization's name. Applies Organizational Providers (NPI-2) . Trailing wildcard entries permitted requiring least two characters entered. types Organization Names (LBN, DBA, Former LBN, Name) associated NPI examined matching contents, therefore, results might contain organization name different one entered Organization Name criterion. field allows following special characters: ampersand, apostrophe, \"\" sign, colon, comma, forward slash, hyphen, left right parentheses, period, pound sign, quotation mark, semi-colon. city City associated provider's address. search Military Address, enter either APO FPO City field. field allows following special characters: ampersand, apostrophe, colon, comma, forward slash, hyphen, left right parentheses, period, pound sign, quotation mark, semi-colon. state State abbreviation associated provider's address. field used input criterion. field used, least one field, besides prov_type country, must populated. Valid values state abbreviations: https://npiregistry.cms.hhs.gov/help-api/state. country Country abbreviation associated provider's address. field can used input criterion, long value selected US (United States). Valid values country abbreviations: https://npiregistry.cms.hhs.gov/help-api/country. limit Maximum number results return; default 10, maximum 1200. skip Number results skip searching previous number; set limit.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_nppes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the NPPES National Provider Identifier (NPI) Registry API — provider_nppes","text":"tibble containing date-time search performed list-column results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_nppes.html","id":"the-nppes-npi-public-registry","dir":"Reference","previous_headings":"","what":"The NPPES NPI Public Registry","title":"Search the NPPES National Provider Identifier (NPI) Registry API — provider_nppes","text":"NPPES NPI Registry Public Search free directory active National Provider Identifier (NPI) records. Healthcare providers acquire unique 10-digit NPIs identify standard way throughout industry. CMS supplies NPI, publish parts NPI record public relevance, including provider’s name, taxonomy practice address. enables search providers NPPES (National Plan Provider Enumeration System.) information produced NPI Registry provided accordance NPPES Data Dissemination Notice. charge use NPI Registry.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_nppes.html","id":"data-update-frequency","dir":"Reference","previous_headings":"","what":"Data Update Frequency","title":"Search the NPPES National Provider Identifier (NPI) Registry API — provider_nppes","text":"Weekly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_nppes.html","id":"data-source","dir":"Reference","previous_headings":"","what":"Data Source","title":"Search the NPPES National Provider Identifier (NPI) Registry API — provider_nppes","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_nppes.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the NPPES National Provider Identifier (NPI) Registry API — provider_nppes","text":"NPPES National Provider Identifier (NPI) Registry API NPPES NPI Registry Search","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_nppes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the NPPES National Provider Identifier (NPI) Registry API — provider_nppes","text":"","code":"if (FALSE) { # Single NPI provider_nppes(npi = 1528060837)  # City, state, country provider_nppes(city = \"Atlanta\",                state = \"GA\",                country = \"US\")  # First name, city, state provider_nppes(first = \"John\",                city = \"Baltimore\",                state = \"MD\")  provider_nppes(npi = 1336413418) # NPI-2 provider_nppes(npi = 1710975040) # NPI-1 provider_nppes(npi = 1659781227) # Deactivated  # List of NPIs npi_list <- c(1003026055,               1710983663,               1316405939,               1720392988,               1518184605,               1922056829,               1083879860)  npi_list |> purrr::map_dfr(provider_nppes) |> dplyr::group_split(outcome) |> purrr::map_dfr(provider_unpack)  # Data frame of NPIs npi_df <- data.frame(npi = c(1710983663,                              1003026055,                              1316405939,                              1720392988,                              1518184605,                              1922056829,                              1083879860)) npi_df |> tibble::deframe() |> purrr::map_dfr(provider_nppes) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_unpack.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack NPPES NPI Registry Search Results — provider_unpack","title":"Unpack NPPES NPI Registry Search Results — provider_unpack","text":"provider_unpack() allows unpack list-columns within response provider_nppes().","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_unpack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack NPPES NPI Registry Search Results — provider_unpack","text":"","code":"provider_unpack(df, clean_names = TRUE)"},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_unpack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack NPPES NPI Registry Search Results — provider_unpack","text":"df tibble response provider_nppes() clean_names Clean column names janitor's clean_names() function; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_unpack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpack NPPES NPI Registry Search Results — provider_unpack","text":"tibble containing unpacked list-columns search performed provider_nppes() function.","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/provider_unpack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unpack NPPES NPI Registry Search Results — provider_unpack","text":"","code":"if (FALSE) { # Single NPI ============================================================== provider_nppes(npi = 1528060837) |> provider_unpack()  # City, state, country ==================================================== provider_nppes(city = \"Atlanta\",                state = \"GA\",                country = \"US\") |> provider_unpack()  # First name, city, state  ================================================ provider_nppes(first = \"John\",                city = \"Baltimore\",                state = \"MD\") |> provider_unpack() }"},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Revalidation Due Date List API — revalidation_date","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"Information revalidation due dates Medicare providers. Medicare Providers must validate enrollment record every three five years. CMS sets every Provider’s Revalidation due date end month posts upcoming six seven months due dates online. due date ‘TBD’ means CMS set due date yet. lists refreshed every two months two months’ worth due dates appended list","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"","code":"revalidation_date(   enroll_id = NULL,   npi = NULL,   first_name = NULL,   last_name = NULL,   org_name = NULL,   state = NULL,   type_code = NULL,   prov_type = NULL,   specialty = NULL,   month = \"Latest\",   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"enroll_id Enrollment ID npi National Provider Identifier (NPI) first_name First name individual provider last_name Last name individual provider org_name Legal business name organizational provider state Enrollment state type_code Provider enrollment type code (1 Part ; 2 DME; 3 Non-DME Part B) prov_type Provider type description specialty Enrollment specialty month dataset version, Latest default; possible months Feb, Apr, Jun, Jul, Aug, Sep, Oct, Nov,Dec clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"Revalidation Due Date List dataset contains revalidation due dates Medicare providers due revalidate following six months. provider's due date fall within ensuing six months, due date marked 'TBD'. addition dataset also includes subfiles reassignment information given provider well due date listings clinics group practices providers.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"Medicare Revalidation Due Date API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"Update Frequency: Monthly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"","code":"revalidation_date(enroll_id = \"I20031110000070\",                   npi = 1184699621) #> # A tibble: 1 × 14 #>   month      enrollmen…¹ natio…² first…³ last_…⁴ organ…⁵ enrol…⁶ enrol…⁷ provi…⁸ #>   <date>     <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 2022-12-11 I200311100… 118469… Eric    Byrd    \"\"      NC      3       Non-DM… #> # … with 5 more variables: enrollment_specialty <chr>, #> #   revalidation_due_date <chr>, adjusted_due_date <chr>, #> #   individual_total_reassign_to <chr>, receiving_benefits_reassignment <int>, #> #   and abbreviated variable names ¹​enrollment_id, #> #   ²​national_provider_identifier, ³​first_name, ⁴​last_name, ⁵​organization_name, #> #   ⁶​enrollment_state_code, ⁷​enrollment_type, ⁸​provider_type_text  revalidation_date(first_name = \"Eric\",                   last_name = \"Byrd\") #> # A tibble: 2 × 14 #>   month      enrollmen…¹ natio…² first…³ last_…⁴ organ…⁵ enrol…⁶ enrol…⁷ provi…⁸ #>   <date>     <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 2022-12-11 I200311100… 118469… Eric    Byrd    \"\"      NC      3       Non-DM… #> 2 2022-12-11 I200901280… 159879… Eric    Byrd    \"\"      SC      3       Non-DM… #> # … with 5 more variables: enrollment_specialty <chr>, #> #   revalidation_due_date <chr>, adjusted_due_date <chr>, #> #   individual_total_reassign_to <chr>, receiving_benefits_reassignment <int>, #> #   and abbreviated variable names ¹​enrollment_id, #> #   ²​national_provider_identifier, ³​first_name, ⁴​last_name, ⁵​organization_name, #> #   ⁶​enrollment_state_code, ⁷​enrollment_type, ⁸​provider_type_text  revalidation_date(state = \"FL\",                   type_code = \"3\",                   specialty = \"General Practice\") #> # A tibble: 1,480 × 14 #>    month      enrollme…¹ natio…² first…³ last_…⁴ organ…⁵ enrol…⁶ enrol…⁷ provi…⁸ #>    <date>     <chr>      <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 2022-12-11 I20031104… 118469… John    Abt     \"\"      FL      3       Non-DM… #>  2 2022-12-11 I20031105… 135643… Humber… Fernan… \"\"      FL      3       Non-DM… #>  3 2022-12-11 I20031105… 146749… Jorge   Santan… \"\"      FL      3       Non-DM… #>  4 2022-12-11 I20031111… 110487… Marian… De La … \"\"      FL      3       Non-DM… #>  5 2022-12-11 I20031204… 143720… Mohamm… Sheikh  \"\"      FL      3       Non-DM… #>  6 2022-12-11 I20031209… 141706… Richard Rizzo   \"\"      FL      3       Non-DM… #>  7 2022-12-11 I20031211… 168964… Rene    Casano… \"\"      FL      3       Non-DM… #>  8 2022-12-11 I20031211… 126558… Maria   Montea… \"\"      FL      3       Non-DM… #>  9 2022-12-11 I20031215… 161994… Ricardo Doming… \"\"      FL      3       Non-DM… #> 10 2022-12-11 I20031215… 103321… Arles   Perdomo \"\"      FL      3       Non-DM… #> # … with 1,470 more rows, 5 more variables: enrollment_specialty <chr>, #> #   revalidation_due_date <chr>, adjusted_due_date <chr>, #> #   individual_total_reassign_to <chr>, receiving_benefits_reassignment <chr>, #> #   and abbreviated variable names ¹​enrollment_id, #> #   ²​national_provider_identifier, ³​first_name, ⁴​last_name, ⁵​organization_name, #> #   ⁶​enrollment_state_code, ⁷​enrollment_type, ⁸​provider_type_text  revalidation_date(enroll_id = \"O20110620000324\",                   org_name = \"Lee Memorial Health System\",                   state = \"FL\",                   prov_type = \"DME\",                   type_code = \"2\") #> # A tibble: 1 × 14 #>   month      enrollmen…¹ natio…² first…³ last_…⁴ organ…⁵ enrol…⁶ enrol…⁷ provi…⁸ #>   <date>     <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1 2022-12-11 O201106200… 180119… \"\"      \"\"      Lee Me… FL      2       DME     #> # … with 5 more variables: enrollment_specialty <chr>, #> #   revalidation_due_date <chr>, adjusted_due_date <chr>, #> #   individual_total_reassign_to <chr>, receiving_benefits_reassignment <chr>, #> #   and abbreviated variable names ¹​enrollment_id, #> #   ²​national_provider_identifier, ³​first_name, ⁴​last_name, ⁵​organization_name, #> #   ⁶​enrollment_state_code, ⁷​enrollment_type, ⁸​provider_type_text if (FALSE) { npi_list <- rep(c(1003026055,                   1316405939,                   1720392988,                   1518184605),                   each = 8)  months <- rep(c(\"Nov\",                 \"Oct\",                 \"Sep\",                 \"Aug\",                 \"Jul\",                 \"Jun\",                 \"Apr\",                 \"Feb\"),                 times = 4)  purrr::map2_dfr(npi_list,                 months,                 ~revalidation_date(npi = .x,                 month = .y)) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"Information clinic group practice revalidation Medicare enrollment.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"","code":"revalidation_group(   group_pac_id = NULL,   group_enroll_id = NULL,   group_bus_name = NULL,   group_state = NULL,   record_type = NULL,   ind_enroll_id = NULL,   ind_npi = NULL,   ind_first = NULL,   ind_last = NULL,   ind_state = NULL,   ind_specialty = NULL,   month = \"Latest\",   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"group_pac_id PAC ID provider receiving reassignment employer group_enroll_id Enrollment ID provider receiving reassignment employer group_bus_name Legal business name provider receiving reassignment employer group_state Enrollment state provider receiving reassignment employer record_type Identifies whether record reassignment (Reassignment) employment (Physician Assistant) ind_enroll_id Enrollment ID provider reassigning benefits employee ind_npi NPI provider reassigning benefits employee ind_first First name provider reassigning benefits employee ind_last Last name provider reassigning benefits employee ind_state Enrollment state provider reassigning benefits employee ind_specialty Enrollment specialty provider reassigning benefits employee month dataset version, Latest default; possible months Jan, Feb, Apr, Jun, Jul, Aug, Sep, Oct, Nov, Dec clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"Revalidation Clinic Group Practice Reassignment dataset provides information physician group practice reassign billing . also includes individual employer association counts revalidation dates individual physician well clinic group practice.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"Medicare Revalidation Clinic Group Practice Reassignment API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"Update Frequency: Monthly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"","code":"revalidation_group(ind_enroll_id = \"I20200929003184\",                    ind_npi = 1962026229,                    ind_first = \"Rashadda\",                    ind_last = \"Wong\",                    ind_state = \"CT\",                    ind_specialty = \"Physician Assistant\") #> # A tibble: 3 × 16 #>   month      group_pac…¹ group…² group…³ group…⁴ group…⁵ group…⁶ recor…⁷ indiv…⁸ #>   <date>           <dbl> <chr>   <chr>   <chr>   <chr>     <int> <chr>   <chr>   #> 1 2022-12-11  4688988371 O20150… 127197… CT      TBD          34 Physic… I20200… #> 2 2022-12-11  3173866241 O20190… Hartfo… CT      TBD        1676 Physic… I20200… #> 3 2022-12-11  7618242777 O20170… Hartfo… CT      TBD         262 Physic… I20200… #> # … with 7 more variables: individual_npi <int>, individual_first_name <chr>, #> #   individual_last_name <chr>, individual_state_code <chr>, #> #   individual_specialty_description <chr>, individual_due_date <chr>, #> #   individual_total_employer_associations <int>, and abbreviated variable #> #   names ¹​group_pac_id, ²​group_enrollment_id, ³​group_legal_business_name, #> #   ⁴​group_state_code, ⁵​group_due_date, #> #   ⁶​group_reassignments_and_physician_assistants, ⁷​record_type, …  revalidation_group(group_pac_id = 9436483807,                    group_enroll_id = \"O20190619002165\",                    group_bus_name = \"1st Call Urgent Care\",                    group_state = \"FL\",                    record_type = \"Reassignment\") #> # A tibble: 1 × 16 #>   month      group_pac…¹ group…² group…³ group…⁴ group…⁵ group…⁶ recor…⁷ indiv…⁸ #>   <date>           <dbl> <chr>   <chr>   <chr>   <chr>     <int> <chr>   <chr>   #> 1 2022-12-11  9436483807 O20190… 1st Ca… FL      TBD           1 Reassi… I20190… #> # … with 7 more variables: individual_npi <int>, individual_first_name <chr>, #> #   individual_last_name <chr>, individual_state_code <chr>, #> #   individual_specialty_description <chr>, individual_due_date <chr>, #> #   individual_total_employer_associations <int>, and abbreviated variable #> #   names ¹​group_pac_id, ²​group_enrollment_id, ³​group_legal_business_name, #> #   ⁴​group_state_code, ⁵​group_due_date, #> #   ⁶​group_reassignments_and_physician_assistants, ⁷​record_type, … if (FALSE) { npi_list <- rep(c(1326063900,                   1588191308,                   1639176803,                   1326057050), each = 9)  months <- rep(c(\"Nov\",                 \"Oct\",                 \"Sep\",                 \"Aug\",                 \"Jul\",                 \"Jun\",                 \"Apr\",                 \"Feb\",                 \"Jan\"), times = 4)  purrr::map2_dfr(npi_list, months, ~revalidation_group(ind_npi = .x, month = .y)) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Provider and Supplier Taxonomy Crosswalk API — taxonomy_crosswalk","title":"Search the Medicare Provider and Supplier Taxonomy Crosswalk API — taxonomy_crosswalk","text":"list type providers suppliers proper taxonomy code eligible medicare programs.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Provider and Supplier Taxonomy Crosswalk API — taxonomy_crosswalk","text":"","code":"taxonomy_crosswalk(   specialty_code = NULL,   specialty_desc = NULL,   taxonomy_code = NULL,   taxonomy_desc = NULL,   clean_names = TRUE,   lowercase = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Provider and Supplier Taxonomy Crosswalk API — taxonomy_crosswalk","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Provider and Supplier Taxonomy Crosswalk API — taxonomy_crosswalk","text":"specialty_code Code corresponds listed Medicare specialty specialty_desc Description Medicare Provider/Supplier Type taxonomy_code taxonomy codes providers use taxonomy_desc description taxonomy providers use clean_names Clean column names janitor's clean_names() function; default TRUE. lowercase Convert column names lowercase; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Provider and Supplier Taxonomy Crosswalk API — taxonomy_crosswalk","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Provider and Supplier Taxonomy Crosswalk API — taxonomy_crosswalk","text":"Medicare Provider Supplier Taxonomy Crosswalk dataset lists providers suppliers eligible enroll Medicare programs proper healthcare provider taxonomy code. data includes Medicare speciality codes, available, provider/supplier type description, taxonomy code, taxonomy description. dataset derived information gathered National Plan Provider Enumerator System (NPPES) Provider Enrollment, Chain Ownership System (PECOS).","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Provider and Supplier Taxonomy Crosswalk API — taxonomy_crosswalk","text":"Medicare Provider Supplier Taxonomy Crosswalk API Medicare Find Taxonomy Code","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Provider and Supplier Taxonomy Crosswalk API — taxonomy_crosswalk","text":"Update Frequency: Weekly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Provider and Supplier Taxonomy Crosswalk API — taxonomy_crosswalk","text":"","code":"taxonomy_crosswalk(specialty_code = \"B4[14]\") #> # A tibble: 13 × 4 #>    medicare_specialty_code medicare_provider_supplier_type_des…¹ provi…² provi…³ #>    <chr>                   <chr>                                 <chr>   <chr>   #>  1 B4[14]                  \"Rehabilitation Agency\"               \"261QR… Ambula… #>  2 B4[14]                  \"Organ Procurement Organization\"      \"335U0… Suppli… #>  3 B4[14]                  \"Community Mental Health Center\"      \"261QM… Ambula… #>  4 B4[14]                  \"Comprehensive Outpatient Rehabilita… \"261QR… Ambula… #>  5 B4[14]                  \"End-Stage Renal Disease Facility\"    \"261QE… Ambula… #>  6 B4[14]                  \"Federally Qualified Health Center\"   \"261QF… Ambula… #>  7 B4[14]                  \"Hospice\"                             \"251G0… Agenci… #>  8 B4[14]                  \"Histocompatibility Laboratory\"       \"291U0… Labora… #>  9 B4[14]                  \"\"                                    \"29190… Labora… #> 10 B4[14]                  \"Outpatient Physical Therapy/Occupat… \"261QR… Ambula… #> 11 B4[14]                  \"Rehabilitation Agency\"               \"315D0… Nursin… #> 12 B4[14]                  \"Religious Non-Medical Health Care I… \"282J0… Hospit… #> 13 B4[14]                  \"Rural Health Clinic \"                \"261QR… Ambula… #> # … with abbreviated variable names #> #   ¹​medicare_provider_supplier_type_description, ²​provider_taxonomy_code, #> #   ³​provider_taxonomy_description_type_classification_specialization  taxonomy_crosswalk(specialty_desc = \"Rehabilitation Agency\") #> # A tibble: 2 × 4 #>   medicare_specialty_code medicare_provider_supplier_type_desc…¹ provi…² provi…³ #>   <chr>                   <chr>                                  <chr>   <chr>   #> 1 B4[14]                  Rehabilitation Agency                  261QR0… Ambula… #> 2 B4[14]                  Rehabilitation Agency                  315D00… Nursin… #> # … with abbreviated variable names #> #   ¹​medicare_provider_supplier_type_description, ²​provider_taxonomy_code, #> #   ³​provider_taxonomy_description_type_classification_specialization  taxonomy_crosswalk(taxonomy_code = \"2086S0102X\") #> # A tibble: 1 × 4 #>   medicare_specialty_code medicare_provider_supplier_type_desc…¹ provi…² provi…³ #>   <chr>                   <chr>                                  <chr>   <chr>   #> 1 2                       Physician/General Surgery              2086S0… Allopa… #> # … with abbreviated variable names #> #   ¹​medicare_provider_supplier_type_description, ²​provider_taxonomy_code, #> #   ³​provider_taxonomy_description_type_classification_specialization  taxonomy_crosswalk(taxonomy_desc = \"Agencies/Hospice Care Community Based\") #> # A tibble: 1 × 4 #>   medicare_specialty_code medicare_provider_supplier_type_desc…¹ provi…² provi…³ #>   <chr>                   <chr>                                  <chr>   <chr>   #> 1 B4[14]                  Hospice                                251G00… Agenci… #> # … with abbreviated variable names #> #   ¹​medicare_provider_supplier_type_description, ²​provider_taxonomy_code, #> #   ³​provider_taxonomy_description_type_classification_specialization"},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009001-2022-08-31","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9001 (2022-08-31)","title":"provider 0.0.0.9001 (2022-08-31)","text":"Updated README.","code":""}]
