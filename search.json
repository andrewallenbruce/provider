[{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement andrewbruce.himni@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://andrewallenbruce.github.io/provider/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://andrewallenbruce.github.io/provider/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Andrew Bruce Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/api-overviews.html","id":"api-articles","dir":"Articles","previous_headings":"","what":"API Articles","title":"API Overviews","text":"Beneficiary Enrollment Chronic Conditions (Multiple) Chronic Conditions (Specific) NPPES NPI Registry Open Payments Program Physician Geography Physician Provider Physician Service Quality Payment Program Revalidation Date Revalidation Group Revalidation Reassignment","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/beneficiary-enrollment.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Beneficiary Enrollment","text":"level argument three options: National, State, County. Setting National return yearly monthly national totals:  Setting level National period argument Year return yearly national totals :  Setting level State period Year return yearly totals state:","code":"beneficiary_enrollment(level = \"National\") |> head(10) #> # A tibble: 10 × 26 #>    year  period    level    state state_name county fips    bene_total bene_orig #>    <chr> <chr>     <chr>    <chr> <chr>      <chr>  <chr>        <int>     <int> #>  1 2013  Year      National US    National   Total  \"     \"   52425659  37613096 #>  2 2013  January   National US    National   Total  \"     \"   51727774  37204960 #>  3 2013  February  National US    National   Total  \"     \"   51810690  37247253 #>  4 2013  March     National US    National   Total  \"     \"   51946603  37336191 #>  5 2013  April     National US    National   Total  \"     \"   52052091  37436020 #>  6 2013  May       National US    National   Total  \"     \"   52166970  37475723 #>  7 2013  June      National US    National   Total  \"     \"   52301688  37547041 #>  8 2013  July      National US    National   Total  \"     \"   52466118  37618358 #>  9 2013  August    National US    National   Total  \"     \"   52626340  37713161 #> 10 2013  September National US    National   Total  \"     \"   52782073  37803887 #> # ℹ 17 more variables: bene_ma_oth <int>, bene_aged_total <int>, #> #   bene_aged_esrd <int>, bene_aged_no_esrd <int>, bene_dsb_total <int>, #> #   bene_dsb_esrd <int>, bene_dsb_no_esrd <int>, bene_ab_total <int>, #> #   bene_ab_orig <int>, bene_ab_ma_oth <int>, bene_rx_total <int>, #> #   bene_rx_pdp <int>, bene_rx_mapd <int>, bene_rx_elig <int>, #> #   bene_rx_full <int>, bene_rx_part <int>, bene_rx_none <int> beneficiary_enrollment(level = \"National\", period = \"Year\") |> head(10) #> # A tibble: 10 × 26 #>    year  period level    state state_name county fips    bene_total bene_orig #>    <chr> <chr>  <chr>    <chr> <chr>      <chr>  <chr>        <int>     <int> #>  1 2013  Year   National US    National   Total  \"     \"   52425659  37613096 #>  2 2014  Year   National US    National   Total  \"     \"   54013038  37790373 #>  3 2015  Year   National US    National   Total  \"     \"   55496222  38025274 #>  4 2016  Year   National US    National   Total  \"     \"   56981183  38610384 #>  5 2017  Year   National US    National   Total  \"     \"   58457244  38667830 #>  6 2018  Year   National US    National   Total  \"     \"   59989883  38665082 #>  7 2019  Year   National US    National   Total  \"     \"   61514510  38577012 #>  8 2020  Year   National US    National   Total  \"     \"   62840267  37776345 #>  9 2021  Year   National US    National   Total  \"     \"   63892626  36356380 #> 10 2022  Year   National US    National   Total  \"     \"   65089887  35260123 #> # ℹ 17 more variables: bene_ma_oth <int>, bene_aged_total <int>, #> #   bene_aged_esrd <int>, bene_aged_no_esrd <int>, bene_dsb_total <int>, #> #   bene_dsb_esrd <int>, bene_dsb_no_esrd <int>, bene_ab_total <int>, #> #   bene_ab_orig <int>, bene_ab_ma_oth <int>, bene_rx_total <int>, #> #   bene_rx_pdp <int>, bene_rx_mapd <int>, bene_rx_elig <int>, #> #   bene_rx_full <int>, bene_rx_part <int>, bene_rx_none <int> beneficiary_enrollment(level = \"State\", period = \"Year\") |> head(10) #> # A tibble: 10 × 26 #>    year  period level state state_name         county fips  bene_total bene_orig #>    <chr> <chr>  <chr> <chr> <chr>              <chr>  <chr>      <int>     <int> #>  1 2013  Year   State AL    Alabama            Total  01        921477    711448 #>  2 2013  Year   State AK    Alaska             Total  02         76224     75676 #>  3 2013  Year   State AZ    Arizona            Total  04       1050128    658948 #>  4 2013  Year   State AR    Arkansas           Total  05        572713    467399 #>  5 2013  Year   State CA    California         Total  06       5300177   3318396 #>  6 2013  Year   State CO    Colorado           Total  08        721035    468492 #>  7 2013  Year   State CT    Connecticut        Total  09        608512    467291 #>  8 2013  Year   State DE    Delaware           Total  10        167686    155803 #>  9 2013  Year   State DC    District of Colum… Total  11         83964     74946 #> 10 2013  Year   State FL    Florida            Total  12       3753454   2402926 #> # ℹ 17 more variables: bene_ma_oth <int>, bene_aged_total <int>, #> #   bene_aged_esrd <int>, bene_aged_no_esrd <int>, bene_dsb_total <int>, #> #   bene_dsb_esrd <int>, bene_dsb_no_esrd <int>, bene_ab_total <int>, #> #   bene_ab_orig <int>, bene_ab_ma_oth <int>, bene_rx_total <int>, #> #   bene_rx_pdp <int>, bene_rx_mapd <int>, bene_rx_elig <int>, #> #   bene_rx_full <int>, bene_rx_part <int>, bene_rx_none <int> beneficiary_enrollment(level = \"State\",                         period = \"Month\") |>    head(10) #> Error in if (as.integer(httr2::resp_header(response, \"content-length\")) <= : argument is of length zero"},{"path":"https://andrewallenbruce.github.io/provider/articles/beneficiary-enrollment.html","id":"state-county","dir":"Articles","previous_headings":"Examples","what":"state & county","title":"Beneficiary Enrollment","text":"Select particular state:  county state:  particular county:","code":"beneficiary_enrollment(period = \"Year\",                         level = \"State\",                         state = \"GA\") |>    head(10) #> # A tibble: 10 × 26 #>    year  period level state state_name county fips  bene_total bene_orig #>    <chr> <chr>  <chr> <chr> <chr>      <chr>  <chr>      <int>     <int> #>  1 2013  Year   State GA    Georgia    Total  13       1412936   1039767 #>  2 2014  Year   State GA    Georgia    Total  13       1470380   1046071 #>  3 2015  Year   State GA    Georgia    Total  13       1523200   1044530 #>  4 2016  Year   State GA    Georgia    Total  13       1573277   1049087 #>  5 2017  Year   State GA    Georgia    Total  13       1624056   1051459 #>  6 2018  Year   State GA    Georgia    Total  13       1676019   1046723 #>  7 2019  Year   State GA    Georgia    Total  13       1727412   1040090 #>  8 2020  Year   State GA    Georgia    Total  13       1773148   1012084 #>  9 2021  Year   State GA    Georgia    Total  13       1808944    953980 #> 10 2022  Year   State GA    Georgia    Total  13       1850419    918689 #> # ℹ 17 more variables: bene_ma_oth <int>, bene_aged_total <int>, #> #   bene_aged_esrd <int>, bene_aged_no_esrd <int>, bene_dsb_total <int>, #> #   bene_dsb_esrd <int>, bene_dsb_no_esrd <int>, bene_ab_total <int>, #> #   bene_ab_orig <int>, bene_ab_ma_oth <int>, bene_rx_total <int>, #> #   bene_rx_pdp <int>, bene_rx_mapd <int>, bene_rx_elig <int>, #> #   bene_rx_full <int>, bene_rx_part <int>, bene_rx_none <int> beneficiary_enrollment(period = \"Year\",                         level = \"County\",                         state_name = \"Georgia\") beneficiary_enrollment(period = \"Year\",                         level = \"County\",                         state = \"GA\",                         county = \"Lowndes\") |>    head(10) #> # A tibble: 10 × 26 #>    year  period level  state state_name county  fips  bene_total bene_orig #>    <chr> <chr>  <chr>  <chr> <chr>      <chr>   <chr>      <int>     <int> #>  1 2013  Year   County GA    Georgia    Lowndes 13185      14991     12192 #>  2 2014  Year   County GA    Georgia    Lowndes 13185      15604     12343 #>  3 2015  Year   County GA    Georgia    Lowndes 13185      16137     12549 #>  4 2016  Year   County GA    Georgia    Lowndes 13185      16644     12879 #>  5 2017  Year   County GA    Georgia    Lowndes 13185      17172     13007 #>  6 2018  Year   County GA    Georgia    Lowndes 13185      17806     13137 #>  7 2019  Year   County GA    Georgia    Lowndes 13185      18173     12964 #>  8 2020  Year   County GA    Georgia    Lowndes 13185      18736     12660 #>  9 2021  Year   County GA    Georgia    Lowndes 13185      19135     12134 #> 10 2022  Year   County GA    Georgia    Lowndes 13185      19780     11728 #> # ℹ 17 more variables: bene_ma_oth <int>, bene_aged_total <int>, #> #   bene_aged_esrd <int>, bene_aged_no_esrd <int>, bene_dsb_total <int>, #> #   bene_dsb_esrd <int>, bene_dsb_no_esrd <int>, bene_ab_total <int>, #> #   bene_ab_orig <int>, bene_ab_ma_oth <int>, bene_rx_total <int>, #> #   bene_rx_pdp <int>, bene_rx_mapd <int>, bene_rx_elig <int>, #> #   bene_rx_full <int>, bene_rx_part <int>, bene_rx_none <int>"},{"path":"https://andrewallenbruce.github.io/provider/articles/beneficiary-enrollment.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"Beneficiary Enrollment","text":"year month state county bene_total bene_orig bene_ma_oth bene_aged_total bene_aged_esrd bene_aged_no_esrd bene_dsb_total bene_dsb_esrd bene_no_esrd bene_ab_total bene_ab_orig bene_ab_ma_oth bene_rx_total bene_rx_pdp bene_rx_mapd","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/beneficiary-enrollment.html","id":"related-links","dir":"Articles","previous_headings":"","what":"Related Links","title":"Beneficiary Enrollment","text":"Medicare Monthly Enrollment API","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"CMS Open Payments API","text":"","code":"gt_ex <- open_payments(npi = 1043218118,                         year = 2021) |>    dplyr::filter(!is.na(covered)) |>    janitor::remove_empty(which = c(\"rows\", \"cols\")) |>    dplyr::group_by(year,                    payer_name,                   pay_nature,                   pay_form,                   category) |>    dplyr::summarise(payments = dplyr::n(),                    amount = sum(pay_total),                     .groups = \"drop\") |>    dplyr::arrange(dplyr::desc(amount))  gt_ex <- gt_ex |>    gt::gt() |>    gtExtras::gt_theme_538() |>    gt::tab_style(     style = gt::cell_text(font = c(       gt::google_font(name = \"Fira Code\"),        gt::default_fonts())),     locations = gt::cells_body(columns = c(year, amount))) |>    gt::cols_hide(year) |>    gt::cols_label(payer_name = \"Payer\",                   pay_form = \"Form\",                  pay_nature = \"Nature\",                   category = \"Category\",                   payments = \"Payments\",                   amount = \"Amount\") |>    gtExtras::gt_add_divider(columns = c(\"payer_name\", \"category\"),                             style = \"solid\",                            color = \"black\",                            weight = gt::px(3),                            include_labels = FALSE) |>    gt::tab_header(title = gt::md(\"CMS Open Payments Disclosure Summary: 2021\"),     subtitle = gt::md(\"Provider Eligibility to Refer Patients to **Medicare Part B**,                        **Home Health Agencies**, **Durable Medical Equipment Suppliers**,                        and **Powered Mobility Devices**\")) |>    gt::tab_source_note(source_note = \"Source: www.cms.gov/OpenPayments\")"},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"applicable-group-purchasing-organization-gpo","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Applicable Group Purchasing Organization (GPO)","title":"CMS Open Payments API","text":"Applicable group purchasing organizations (GPOs) entities operate United States purchase, arrange negotiate purchase covered drugs, devices, biologicals, medical supplies group individuals entities, solely use entity .","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"applicable-manufacturers","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Applicable Manufacturers","title":"CMS Open Payments API","text":"Applicable manufacturers entities operate United States (1) engaged production, preparation, propagation, compounding, conversion covered drug, device, biological, medical supply, covered drug, device, biological medical supply solely use within entity entity’s patients (definition include distributors wholesalers (including, limited , repackagers, relabelers, kit assemblers) hold title covered drug, device, biological medical supply); (2) entities common ownership entity described part (1) definition, provides assistance support entities respect production, preparation, propagation, compounding, conversion, marketing, promotion, sale, distribution covered drug, device, biological medical supply. (See 42 CFR 403.902)","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"covered-recipients","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Covered Recipients","title":"CMS Open Payments API","text":"physician, physician assistant, nurse practitioner, clinical nurse specialist, certified registered nurse anesthetist, certified nurse-midwife bona fide employee applicable manufacturer reporting payment; teaching hospital, institution received payment 1886(d)(5)(B), 1886(h), 1886(s) Act last calendar year information available.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"natures-of-payment","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Natures of Payment","title":"CMS Open Payments API","text":"Natures payment categories categories must used describe payment transfer value made (See 42 CFR 403.904(e)(2)). applicable “general” payment type, research ownership. categories : Acquisitions (applicable Program Year 2021 subsequent program years) Charitable contributions Compensation services consulting, including serving faculty speaker event continuing education program Compensation serving faculty speaker accredited certified continuing education program (Applicable Program Years 2013 - 2020) Compensation serving faculty speaker unaccredited non-certified continuing education program (Applicable Program Years 2013 - 2020) Compensation serving faculty speaker medical education program (Applicable beginning Program Year 2021 subsequent program years) Consulting fees Current prospective ownership investment interest (removed starting Program Year 2023) Debt Forgiveness (Applicable beginning Program Year 2021 subsequent program years) Education Entertainment Food beverage Gift Grant Honoraria Long-term medical supply device loan (Applicable beginning Program Year 2021 subsequent program years) Royalty license Space rental facility fees (teaching hospitals ) Travel lodging","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"national-provider-identifier-npi","dir":"Articles","previous_headings":"Open Payments Glossary","what":"National Provider Identifier (NPI)","title":"CMS Open Payments API","text":"NPI unique identification number covered health care providers. NPI 10-position numeric identifier, check digit 10th position intelligence health care provider number. (See 45 CFR 162.406)","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"newly-added-covered-recipients","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Newly Added Covered Recipients","title":"CMS Open Payments API","text":"Open Payments expanded January 2021 include five new provider types: Physician Assistants: physician assistant performs services individual legally authorized perform (State individual performs services) accordance State law (State regulatory mechanism provided State law), meets training, education, experience requirements (combination thereof) Secretary may prescribe regulations. Nurse Practitioners: nurse practitioner performs services individual legally authorized perform (State individual performs services) accordance State law (State regulatory mechanism provided State law), meets training, education, experience requirements (combination thereof) Secretary may prescribe regulations. Clinical Nurse Specialists: individual registered nurse licensed practice nursing State clinical nurse specialist services performed; holds master’s degree defined clinical area nursing accredited educational institution. Certified Registered Nurse Anesthetists: certified registered nurse anesthetist licensed State meets education, training, requirements relating anesthesia services related care Secretary may prescribe. prescribing requirements Secretary may use requirements established national organization certification nurse anesthetists. term also includes, prescribed Secretary, Anesthesiologist Assistant. Certified Nurse-Midwives: registered nurse successfully completed program study clinical experience meeting guidelines prescribed Secretary, certified organization recognized Secretary.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"non-physician-practitioner-covered-recipient","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Non-Physician Practitioner Covered Recipient","title":"CMS Open Payments API","text":"Health care providers practice either collaboration supervision physician, including physician assistants, nurse practitioners, clinical nurse specialists, referred non-physician practitioners (NPPs).","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"ownership-or-investment-interest","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Ownership or Investment Interest","title":"CMS Open Payments API","text":"Ownership investment interest includes, limited : Stock Stock option(s) (received compensation, exercised) Partnership share(s) Limited liability company membership(s) Loans Bonds financial instruments secured entity’s property revenue portion property revenue may direct indirect debt, equity means (See 42 CFR 403.902). Please note exceptions definition.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"physician","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Physician","title":"CMS Open Payments API","text":"purposes Open Payments, “physician” following types professionals legally authorized state practice, regardless whether Medicare, Medicaid, Children’s health Insurance Program (CHIP) providers: Doctors Medicine Osteopathic Medicine Doctors Dental Medicine Dental Surgery Doctors Podiatric Medicine Doctors Optometry Chiropractors Note: Medical residents excluded definition physicians purpose program.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"reporting-entities","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Reporting Entities","title":"CMS Open Payments API","text":"Reporting entities applicable manufacturers applicable GPOs.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"research","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Research","title":"CMS Open Payments API","text":"Research systematic investigation develop contribute generalized knowledge public health, including behavioral social-sciences research. definition includes basic applied research, product development. (See 42 CFR 403.902)","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"teaching-hospital","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Teaching Hospital","title":"CMS Open Payments API","text":"Teaching hospitals hospitals receive payment Medicare direct graduate medical education (GME), IPPS indirect medical education (IME), psychiatric hospital IME programs last calendar year information available. (See 42 CFR 403.902) purposes Open Payments, “teaching hospitals” hospitals received payment Medicare direct graduate medical education (GME), inpatient prospective payment system (IPPS) indirect medical education (IME), psychiatric hospital IME programs last calendar year information available.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"third-parties","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Third Parties","title":"CMS Open Payments API","text":"Third parties individuals entities, whether operate United States.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"transfers-of-value","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Transfers of Value","title":"CMS Open Payments API","text":"Payments transfers value anything value given applicable manufacturer applicable GPO covered recipient physician owner/investor fall within one excluded categories rule. (See 42 CFR 403.902)","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/cms-open-payments.html","id":"related-links","dir":"Articles","previous_headings":"Open Payments Glossary","what":"Related Links","title":"CMS Open Payments API","text":"Natures Payment Law Policy Audits Penalties Reporting Entities Open Payments: General Resources","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/geocoding.html","id":"providers-current-practice-address","dir":"Articles","previous_headings":"","what":"Provider’s Current Practice Address","title":"Healthcare Providers: Why Geocode?","text":"","code":"address <- nppes_npi(npi = 1760485387) |>    dplyr::select(street, city, state, zipcode) |>   dplyr::filter(dplyr::row_number() %in% 1) |>    dplyr::mutate(street = stringr::str_remove_all(street, \"\\\\.\"),                 street = stringr::str_replace(street, \"CTY\", \"COUNTY\")) |>    tidyr::unite(\"addr\", street:zipcode, sep = \", \", remove = TRUE) |>    tidygeocoder::geocode(addr,                          method = \"osm\",                          lat = latitude,                          long = longitude,                          full_results = TRUE)  address |>    dplyr::select(addr, latitude, longitude, display_name, type) |>    dplyr::glimpse() leaflet::leaflet() |>    leaflet::addTiles() |>    leaflet::addMarkers(lng = address$longitude,                        lat = address$latitude,                        popup = address$display_name)"},{"path":"https://andrewallenbruce.github.io/provider/articles/geocoding.html","id":"organizational-provider-locations","dir":"Articles","previous_headings":"","what":"Organizational Provider Locations","title":"Healthcare Providers: Why Geocode?","text":"","code":"orgs <- nppes_npi(last_name = \"Smith\", purpose_name = \"AO\", city = \"Atlanta\")  orgs_add <- orgs |>    dplyr::filter(purpose %in% c(\"PRACTICE\", \"LOCATION\")) |>    dplyr::select(street, city, state, zipcode) |>    dplyr::mutate(zipcode = campfin::normal_zip(zipcode)) |>    tidyr::unite(\"addr\", street:zipcode, sep = \", \", remove = TRUE) |>    tidygeocoder::geocode(addr,                          method = \"osm\",                          lat = latitude,                          long = longitude,                          full_results = TRUE) org <- orgs_add |>    dplyr::filter(!is.na(latitude))  orgs_add |>    dplyr::filter(is.na(latitude)) leaflet::leaflet() |>    leaflet::addTiles() |>    leaflet::addMarkers(lng = org$longitude,                        lat = org$latitude,                        popup = org$display_name)"},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-chron-cond.html","id":"medicare-multiple-chronic-conditions-api","dir":"Articles","previous_headings":"","what":"Medicare Multiple Chronic Conditions API","title":"Medicare Chronic Conditions APIs","text":"Multiple Chronic Conditions dataset provides information number chronic conditions among Original Medicare beneficiaries. dataset contains prevalence, use spending organized geography count chronic conditions set select 21 chronic conditions. count conditions grouped four categories (0-1, 2-3, 4-5 6 ).","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-chron-cond.html","id":"examples","dir":"Articles","previous_headings":"Medicare Multiple Chronic Conditions API","what":"Examples","title":"Medicare Chronic Conditions APIs","text":"","code":"# Multiple Chronic Conditions cc_multiple(year = 2018,              level = \"National\",              age_group = \"All\",              demographic = \"All\") #> # A tibble: 4 × 13 #>    year level    sublevel fips  age_group demographic subdemo mcc     prevalence #>   <int> <chr>    <chr>    <chr> <chr>     <chr>       <chr>   <ord>        <dbl> #> 1  2018 National National NA    All       All         All     [0,1]        0.311 #> 2  2018 National National NA    All       All         All     [2,3]        0.291 #> 3  2018 National National NA    All       All         All     [4,5]        0.221 #> 4  2018 National National NA    All       All         All     [6, In…      0.177 #> # ℹ 4 more variables: tot_std_pymt_percap <dbl>, tot_pymt_percap <dbl>, #> #   hosp_readmsn_rate <dbl>, er_visits_per_1k <dbl>  cc_multiple(year = 2018,              level = \"State\",              sublevel = \"Alabama\",              age_group = \"All\",              demographic = \"All\") #> # A tibble: 4 × 13 #>    year level sublevel fips  age_group demographic subdemo mcc      prevalence #>   <int> <chr> <chr>    <chr> <chr>     <chr>       <chr>   <ord>         <dbl> #> 1  2018 State Alabama  01    All       All         All     [0,1]         0.258 #> 2  2018 State Alabama  01    All       All         All     [2,3]         0.285 #> 3  2018 State Alabama  01    All       All         All     [4,5]         0.250 #> 4  2018 State Alabama  01    All       All         All     [6, Inf)      0.207 #> # ℹ 4 more variables: tot_std_pymt_percap <dbl>, tot_pymt_percap <dbl>, #> #   hosp_readmsn_rate <dbl>, er_visits_per_1k <dbl>  cc_multiple(year = 2018,              level = \"County\",              sublevel = \"Alabama : Autauga\",              fips = \"01001\",              age_group = \"All\",              demographic = \"All\") #> # A tibble: 4 × 13 #>    year level  sublevel     fips  age_group demographic subdemo mcc   prevalence #>   <int> <chr>  <chr>        <chr> <chr>     <chr>       <chr>   <ord>      <dbl> #> 1  2018 County Alabama : A… 01001 All       All         All     [0,1]      0.266 #> 2  2018 County Alabama : A… 01001 All       All         All     [2,3]      0.281 #> 3  2018 County Alabama : A… 01001 All       All         All     [4,5]      0.248 #> 4  2018 County Alabama : A… 01001 All       All         All     [6, …      0.205 #> # ℹ 4 more variables: tot_std_pymt_percap <dbl>, tot_pymt_percap <dbl>, #> #   hosp_readmsn_rate <dbl>, er_visits_per_1k <dbl>"},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-chron-cond.html","id":"medicare-specific-chronic-conditions-api","dir":"Articles","previous_headings":"","what":"Medicare Specific Chronic Conditions API","title":"Medicare Chronic Conditions APIs","text":"Select Chronic Conditions dataset provides information 21 selected chronic conditions among Original Medicare beneficiaries. dataset contains prevalence, use spending organized geography distinct chronic conditions listed . Alcohol Abuse Drug Abuse / Substance Abuse Alzheimer’s Disease Related Dementia Arthritis (Osteoarthritis Rheumatoid) Asthma Atrial Fibrillation Autism Spectrum Disorders Cancer (Breast, Colorectal, Lung, Prostate) Chronic Kidney Disease Chronic Obstructive Pulmonary Disease Depression Diabetes Drug Abuse / Substance Abuse Heart Failure Hepatitis (Chronic Viral B & C) HIV/AIDS Hyperlipidemia (High cholesterol) Hypertension (High blood pressure) Ischemic Heart Disease Osteoporosis Schizophrenia Psychotic Disorders Stroke","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-chron-cond.html","id":"examples-1","dir":"Articles","previous_headings":"Medicare Specific Chronic Conditions API","what":"Examples","title":"Medicare Chronic Conditions APIs","text":"","code":"# Specific Chronic Conditions cc_specific(year = 2018,              level = \"State\",              sublevel = \"California\",              demographic = \"All\") #> # A tibble: 63 × 13 #>     year level sublevel fips  age_group demographic subdemo condition prevalence #>    <int> <chr> <chr>    <chr> <chr>     <chr>       <chr>   <chr>          <dbl> #>  1  2018 State Califor… 06    All       All         All     Alcohol …     0.0215 #>  2  2018 State Califor… 06    All       All         All     Alzheime…     0.105  #>  3  2018 State Califor… 06    All       All         All     Arthritis     0.312  #>  4  2018 State Califor… 06    All       All         All     Asthma        0.053  #>  5  2018 State Califor… 06    All       All         All     Atrial F…     0.0749 #>  6  2018 State Califor… 06    All       All         All     Autism S…     0.0022 #>  7  2018 State Califor… 06    All       All         All     COPD          0.0952 #>  8  2018 State Califor… 06    All       All         All     Cancer        0.0784 #>  9  2018 State Califor… 06    All       All         All     Chronic …     0.243  #> 10  2018 State Califor… 06    All       All         All     Depressi…     0.162  #> # ℹ 53 more rows #> # ℹ 4 more variables: tot_std_pymt_percap <dbl>, tot_pymt_percap <dbl>, #> #   hosp_readmsn_rate <dbl>, er_visits_per_1k <dbl>  cc_specific(year = 2011,              level = \"County\",              fips = \"01001\") #> # A tibble: 63 × 13 #>     year level sublevel fips  age_group demographic subdemo condition prevalence #>    <int> <chr> <chr>    <chr> <chr>     <chr>       <chr>   <chr>          <dbl> #>  1  2011 Coun… Alabama… 01001 All       All         All     Alcohol …     0.0116 #>  2  2011 Coun… Alabama… 01001 All       All         All     Alzheime…     0.100  #>  3  2011 Coun… Alabama… 01001 All       All         All     Arthritis     0.274  #>  4  2011 Coun… Alabama… 01001 All       All         All     Asthma        0.037  #>  5  2011 Coun… Alabama… 01001 All       All         All     Atrial F…     0.0748 #>  6  2011 Coun… Alabama… 01001 All       All         All     Autism S…    NA      #>  7  2011 Coun… Alabama… 01001 All       All         All     COPD          0.122  #>  8  2011 Coun… Alabama… 01001 All       All         All     Cancer        0.0792 #>  9  2011 Coun… Alabama… 01001 All       All         All     Chronic …     0.137  #> 10  2011 Coun… Alabama… 01001 All       All         All     Depressi…     0.134  #> # ℹ 53 more rows #> # ℹ 4 more variables: tot_std_pymt_percap <dbl>, tot_pymt_percap <dbl>, #> #   hosp_readmsn_rate <dbl>, er_visits_per_1k <dbl>"},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-chron-cond.html","id":"data-dictionary","dir":"Articles","previous_headings":"Medicare Specific Chronic Conditions API","what":"Data Dictionary","title":"Medicare Chronic Conditions APIs","text":"level sublevel fips age_group demographic subdemo mcc condition prevalence tot_std_pymt_percap1 tot_pymt_percap1 hosp_readmn_rate1 er_vs_per_1k1","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-chron-cond.html","id":"related-links","dir":"Articles","previous_headings":"Medicare Specific Chronic Conditions API","what":"Related Links","title":"Medicare Chronic Conditions APIs","text":"Medicare Multiple Chronic Conditions API Medicare Specific Chronic Conditions API","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-revalidation.html","id":"medicare-revalidation-due-date-list-api","dir":"Articles","previous_headings":"","what":"Medicare Revalidation Due Date List API","title":"Medicare Revalidation APIs","text":"Medicare Providers must validate enrollment record every three five years. CMS sets every Provider’s Revalidation due date end month posts upcoming six seven months due dates online. due date ‘TBD’ means CMS set due date yet. lists refreshed every two months two months’ worth due dates appended list.  Revalidation Due Date List dataset contains revalidation due dates Medicare providers due revalidate following six months. provider’s due date fall within ensuing six months, due date marked ‘TBD’. addition dataset also includes subfiles reassignment information given provider well due date listings clinics group practices providers. dataset based information gathered Provider Enrollment, Chain Ownership System (PECOS).  Medicare Revalidation Due Date API Medicare Revalidation Due Date - Data Dictionary","code":"revalidation_date(enroll_id = \"I20031110000070\",                    npi = 1184699621) #> # A tibble: 1 × 13 #>   npi        enroll_id       first_name last_name organization_name enroll_state #>   <chr>      <chr>           <chr>      <chr>     <chr>             <chr>        #> 1 1184699621 I20031110000070 Eric       Byrd      NA                NC           #> # ℹ 7 more variables: enroll_type <chr>, enroll_desc <chr>, #> #   enroll_specialty <chr>, revalidation_due_date <date>, #> #   adjusted_due_date <date>, group_reassignments <chr>, ind_associations <int> revalidation_date(first_name = \"Eric\",                    last_name = \"Byrd\") #> # A tibble: 2 × 13 #>   npi        enroll_id       first_name last_name organization_name enroll_state #>   <chr>      <chr>           <chr>      <chr>     <chr>             <chr>        #> 1 1184699621 I20031110000070 Eric       Byrd      NA                NC           #> 2 1598792285 I20090128000461 Eric       Byrd      NA                SC           #> # ℹ 7 more variables: enroll_type <chr>, enroll_desc <chr>, #> #   enroll_specialty <chr>, revalidation_due_date <date>, #> #   adjusted_due_date <date>, group_reassignments <chr>, ind_associations <int> revalidation_date(state = \"FL\",                    type_code = \"3\",                    specialty = \"General Practice\") #> # A tibble: 1,560 × 13 #>    npi        enroll_id      first_name last_name organization_name enroll_state #>    <chr>      <chr>          <chr>      <chr>     <chr>             <chr>        #>  1 1184693400 I200311040005… John       Abt       NA                FL           #>  2 1356436786 I200311050000… Humberto   Fernande… NA                FL           #>  3 1467499285 I200311050005… Jorge      Santander NA                FL           #>  4 1104875178 I200311110006… Marianela  De La Po… NA                FL           #>  5 1437205796 I200312040005… Mohammad   Sheikh    NA                FL           #>  6 1417063454 I200312090007… Richard    Rizzo     NA                FL           #>  7 1689646440 I200312110003… Rene       Casanova  NA                FL           #>  8 1265580146 I200312110010… Maria      Monteale… NA                FL           #>  9 1619943990 I200312150002… Ricardo    Dominguez NA                FL           #> 10 1033218821 I200312150003… Arles      Perdomo   NA                FL           #> # ℹ 1,550 more rows #> # ℹ 7 more variables: enroll_type <chr>, enroll_desc <chr>, #> #   enroll_specialty <chr>, revalidation_due_date <date>, #> #   adjusted_due_date <date>, group_reassignments <chr>, ind_associations <chr>"},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-revalidation.html","id":"data-dictionary","dir":"Articles","previous_headings":"Medicare Revalidation Due Date List API","what":"Data Dictionary","title":"Medicare Revalidation APIs","text":"enrollment_id national_provider_identifier first_name last_name organization_name enrollment_state_code enrollment_type provider_type_text enrollment_specialty revalidation_due_date adjusted_due_date individual_total_reassign_to receiving_benefits_reassignment","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-revalidation.html","id":"medicare-revalidation-clinic-group-practice-reassignment-api","dir":"Articles","previous_headings":"","what":"Medicare Revalidation Clinic Group Practice Reassignment API","title":"Medicare Revalidation APIs","text":"","code":"revalidation_group(ind_enroll_id = \"I20200929003184\",                    ind_npi = 1962026229,                    ind_first = \"Rashadda\",                    ind_last = \"Wong\",                    ind_state = \"CT\",                    ind_specialty = \"Physician Assistant\") #> Error in revalidation_group(ind_enroll_id = \"I20200929003184\", ind_npi = 1962026229, : unused arguments (ind_enroll_id = \"I20200929003184\", ind_npi = 1962026229, ind_first = \"Rashadda\", ind_last = \"Wong\", ind_state = \"CT\", ind_specialty = \"Physician Assistant\") revalidation_group(group_pac_id = 9436483807,                    group_enroll_id = \"O20190619002165\",                    group_bus_name = \"1st Call Urgent Care\",                    group_state = \"FL\",                    record_type = \"Reassignment\") #> Error in revalidation_group(group_pac_id = 9436483807, group_enroll_id = \"O20190619002165\", : unused arguments (group_pac_id = 9436483807, group_enroll_id = \"O20190619002165\", group_bus_name = \"1st Call Urgent Care\", group_state = \"FL\")"},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-revalidation.html","id":"data-dictionary-1","dir":"Articles","previous_headings":"Medicare Revalidation Clinic Group Practice Reassignment API","what":"Data Dictionary","title":"Medicare Revalidation APIs","text":"group_pac_id group_enrollment_id group_legal_business_name group_state_code group_due_date group_reassignments_and_physician_assistants record_type individual_enrollment_id individual_npi individual_first_name individual_last_name individual_state_code individual_specialty_description individual_due_date individual_total_employer_associations","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-revalidation.html","id":"medicare-revalidation-reassignment-list-api","dir":"Articles","previous_headings":"","what":"Medicare Revalidation Reassignment List API","title":"Medicare Revalidation APIs","text":"Reassignments Providers due Revalidation.  Revalidation Reassignment List dataset provides information reassignments providers due revalidation. Section 6401 () Affordable Care Act established requirement enrolled providers/suppliers revalidate Medicare enrollment information new enrollment screening criteria. CMS completed initial round revalidations resuming regular revalidation cycles accordance 42 CFR §424.515. effort streamline revalidation process reduce provider/supplier burden, CMS implemented several revalidation processing improvements one established due dates Providers must revalidate. Medicare Providers must validate enrollment record every three five years. CMS sets every Provider’s Revalidation due date end month posts upcoming six seven months due dates online. due date ‘TBD’ means CMS set due date yet.","code":"revalidation_reassign(ind_enroll_id = \"I20200929003184\",                     ind_npi = 1962026229,                     ind_first = \"Rashadda\",                     ind_last = \"Wong\",                     ind_state = \"CT\",                     ind_specialty = \"Physician Assistant\") #> Error in revalidation_reassign(ind_enroll_id = \"I20200929003184\", ind_npi = 1962026229, : unused arguments (ind_enroll_id = \"I20200929003184\", ind_npi = 1962026229, ind_first = \"Rashadda\", ind_last = \"Wong\", ind_state = \"CT\", ind_specialty = \"Physician Assistant\")"},{"path":"https://andrewallenbruce.github.io/provider/articles/mcr-revalidation.html","id":"related-links","dir":"Articles","previous_headings":"","what":"Related Links","title":"Medicare Revalidation APIs","text":"Medicare Revalidation Reassignment List API","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"NPPES NPI Registry","text":"","code":"nppes_npi(npi = 1114499340) #> # A tibble: 3 × 24 #>   npi        entype     enumeration_date last_updated certification_date status #>   <chr>      <chr>      <date>           <date>       <date>             <chr>  #> 1 1114499340 Individual 2018-12-28       2020-06-15   2020-06-15         A      #> 2 1114499340 Individual 2018-12-28       2020-06-15   2020-06-15         A      #> 3 1114499340 Individual 2018-12-28       2020-06-15   2020-06-15         A      #> # ℹ 18 more variables: first_name <chr>, last_name <chr>, credential <chr>, #> #   gender <chr>, sole_proprietor <lgl>, purpose <chr>, street <chr>, #> #   city <chr>, state <chr>, zipcode <chr>, country <chr>, phone_number <chr>, #> #   tx_code <chr>, tx_desc <chr>, tx_group <chr>, tx_state <chr>, #> #   tx_license <chr>, tx_primary <lgl> nppes_npi(npi = 1528060837) #> # A tibble: 16 × 28 #>    npi        entype enumeration_date last_updated status first_name middle_name #>    <chr>      <chr>  <date>           <date>       <chr>  <chr>      <chr>       #>  1 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #>  2 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #>  3 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #>  4 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #>  5 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #>  6 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #>  7 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #>  8 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #>  9 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #> 10 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #> 11 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #> 12 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #> 13 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #> 14 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #> 15 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #> 16 1528060837 Indiv… 2005-06-01       2007-07-09   A      JOHN       B           #> # ℹ 21 more variables: last_name <chr>, credential <chr>, gender <chr>, #> #   sole_proprietor <lgl>, purpose <chr>, street <chr>, city <chr>, #> #   state <chr>, zipcode <chr>, country <chr>, phone_number <chr>, #> #   fax_number <chr>, tx_code <chr>, tx_desc <chr>, tx_group <chr>, #> #   tx_state <chr>, tx_license <chr>, tx_primary <lgl>, id_issuer <chr>, #> #   id_identifier <chr>, id_state <chr>"},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"enumeration-type","dir":"Articles","previous_headings":"NPI Notes","what":"Enumeration Type","title":"NPPES NPI Registry","text":"Two categories health care providers exist NPI enumeration purposes: Entity Type 1 (Individual) Entity Type 2 (Organizational).","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"npi-1-individual","dir":"Articles","previous_headings":"NPI Notes > Enumeration Type","what":"NPI-1: Individual","title":"NPPES NPI Registry","text":"Individual health care providers (including sole proprietors) may get NPI Entity Type 1. sole proprietor, must apply NPI using SSN, Employer Identification Number (EIN) even EIN. sole proprietor, may get one NPI, just like individual. following factors affect whether sole proprietor Entity Type 1: Number different office locations Whether employees Whether IRS issued EIN. incorporated individual single health care provider forms conducts business corporation. sole proprietor incorporated individual sole proprietor didn’t form corporation. ’re sole/solo practitioner, doesn’t necessarily mean ’re sole proprietor, vice versa. ’re individual health care provider ’s incorporated, may need get NPI (Entity Type 1) NPI corporation LLC (Entity Type 2).","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"npi-2-organizational","dir":"Articles","previous_headings":"NPI Notes > Enumeration Type","what":"NPI-2: Organizational","title":"NPPES NPI Registry","text":"Organizational health care providers group health care providers eligible NPIs Entity Type 2. Organization health care providers may single employee thousands employees. example incorporated individual organization’s employee. organization health care providers made parts work somewhat independently parent organization. parts may offer different types health care offer health care separate physical locations. parts physical locations aren’t legal entities part organization health care provider (legal entity). NPI Final Rule refers parts locations subparts. organization health care provider can get subparts NPIs. subpart conducts HIPAA standard transactions (separately parent), must get NPI. Subpart determination makes sure entities within covered organization uniquely identified HIPAA standard transactions conduct Medicare covered entities. example, hospital offers acute care, laboratory, pharmacy, rehabilitation services. subparts may need NPI sends standard transactions one health plans. Subpart delegation doesn’t affect Entity Type 1 health care providers. individuals, health care providers can’t choose subparts subparts.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"authorized-official","dir":"Articles","previous_headings":"NPI Notes > Enumeration Type","what":"Authorized Official","title":"NPPES NPI Registry","text":"appointed official (e.g., chief executive officer, chief financial officer, general partner, chairman board, direct owner) organization granted legal authority enroll Medicare program, make changes updates organization’s status Medicare program, commit organization fully abide statutes, regulations, program instructions Medicare program. See 42 CFR 424.502 additional information.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/nppes-npi-registry.html","id":"related-links","dir":"Articles","previous_headings":"NPI Notes","what":"Related Links","title":"NPPES NPI Registry","text":"NPPES NPI Registry API Documentation NPPES NPI Registry API Demo","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/articles/physician-by-geography.html","id":"search-examples","dir":"Articles","previous_headings":"Physician & Other Practitioners: by Geography and Service","what":"Search Examples","title":"Physician by Geography","text":"","code":"physician_by_geography(hcpcs_code = \"0002A\", year = 2020) #> # A tibble: 9 × 16 #>    year level    sublevel   fips  hcpcs_code hcpcs_desc hcpcs_drug place_of_srvc #>   <int> <chr>    <chr>      <chr> <chr>      <chr>      <lgl>      <chr>         #> 1  2020 National National   NA    0002A      Adm sarsc… FALSE      O             #> 2  2020 State    California 06    0002A      Adm sarsc… FALSE      O             #> 3  2020 State    Florida    12    0002A      Adm sarsc… FALSE      O             #> 4  2020 State    Illinois   17    0002A      Adm sarsc… FALSE      O             #> 5  2020 State    Maine      23    0002A      Adm sarsc… FALSE      O             #> 6  2020 State    Maryland   24    0002A      Adm sarsc… FALSE      O             #> 7  2020 State    Massachus… 25    0002A      Adm sarsc… FALSE      O             #> 8  2020 State    New Jersey 34    0002A      Adm sarsc… FALSE      O             #> 9  2020 State    Pennsylva… 42    0002A      Adm sarsc… FALSE      O             #> # ℹ 8 more variables: tot_provs <int>, tot_benes <int>, tot_srvcs <int>, #> #   tot_day <int>, avg_charges <dbl>, avg_allowed <dbl>, avg_payment <dbl>, #> #   avg_std_pymt <dbl>"},{"path":"https://andrewallenbruce.github.io/provider/articles/physician-by-geography.html","id":"data-dictionary","dir":"Articles","previous_headings":"Physician & Other Practitioners: by Geography and Service","what":"Data Dictionary","title":"Physician by Geography","text":"level fips sublevel hcpcs_cd hcpcs_desc hcpcs_drug place_of_srvc tot_provs tot_srvcs tot_benes tot_day avg_charge avg_allowed avg_payment avg_std_pymt","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/physician-by-provider.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Physician by Provider","text":"","code":"physician_by_provider(year = 2021,                        entype = \"I\",                        city = \"Hershey\",                        state = \"PA\",                        fips = 42,                        ruca = 1,                        gender = \"F\",                        credential = \"MD\",                        specialty = \"Anesthesiology\") #> # A tibble: 17 × 28 #>     year npi      first_name middle_name last_name credential gender entity_type #>    <int> <chr>    <chr>      <chr>       <chr>     <chr>      <chr>  <chr>       #>  1  2021 1023245… Melissa    L           Coleman   MD         F      Individual  #>  2  2021 1063463… Padmani    NA          Dhar      MD         F      Individual  #>  3  2021 1124006… To-Nhu     NA          Vu        MD         F      Individual  #>  4  2021 1215934… Cathy      D           Paige     MD         F      Individual  #>  5  2021 1306264… Eileen     M           Micaroni  MD         F      Individual  #>  6  2021 1447312… Anita      NA          Malhotra  MD         F      Individual  #>  7  2021 1548210… Sonia      J           Vaida     MD         F      Individual  #>  8  2021 1558389… Priti      G           Dalal     MD         F      Individual  #>  9  2021 1609035… Zoulfira   NA          Nisnevit… MD         F      Individual  #> 10  2021 1750331… Niraja     NA          Rajan     MD         F      Individual  #> 11  2021 1801003… Sharon     NA          Lee       MD         F      Individual  #> 12  2021 1801846… Jansie     NA          Prozesky  MD         F      Individual  #> 13  2021 1851437… Kelly      S           Gidusko   MD         F      Individual  #> 14  2021 1871706… Rochelle   NA          Sims      MD         F      Individual  #> 15  2021 1891745… Elizabeth  H           Sinz      MD         F      Individual  #> 16  2021 1922241… Kristin    B           Brennan   MD         F      Individual  #> 17  2021 1962829… Sadie      E           Smith     MD         F      Individual  #> # ℹ 20 more variables: street <chr>, city <chr>, state <chr>, fips <chr>, #> #   zipcode <chr>, ruca <chr>, country <chr>, specialty <chr>, par <lgl>, #> #   tot_hcpcs <int>, tot_benes <int>, tot_srvcs <int>, tot_charges <dbl>, #> #   tot_allowed <dbl>, tot_payment <dbl>, tot_std_pymt <dbl>, medical <list>, #> #   drug <list>, demographics <list>, conditions <list>"},{"path":"https://andrewallenbruce.github.io/provider/articles/physician-by-provider.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"Physician by Provider","text":"npi last_name first_name middle_name credential gender entype street city state fips zipcode ruca ruca_desc country specialty par tot_hcpcs tot_benes tot_srvcs tot_charges tot_allowed tot_payment tot_std_pymt drug_hcpcs drug_benes drug_srvcs drug_charges drug_allowed drug_payment drug_std_pymt med_hcpcs med_benes med_srvcs med_charges med_allowed med_payment med_std_pymt bene_avg_age bene_age_lt65 bene_age_65_74 bene_age_75_84 bene_age_gt84 bene_female bene_male bene_race_wht bene_race_blk bene_race_api bene_race_hsp bene_race_nat bene_race_oth bene_dual bene_ndual bene_cc_af bene_cc_alz bene_cc_asth bene_cc_canc bene_cc_chf bene_cc_ckd bene_cc_copd bene_cc_dep bene_cc_diab bene_cc_hplp bene_cc_hpten bene_cc_ihd bene_cc_opo bene_cc_raoa bene_cc_sz bene_cc_strk bene_risk_avg","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/physician-by-service.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Physician by Service","text":"","code":"physician_by_service(npi = 1003000126, year = 2020) #> # A tibble: 9 × 28 #>    year npi        entype     first_name middle_name last_name credential gender #>   <int> <chr>      <chr>      <chr>      <chr>       <chr>     <chr>      <chr>  #> 1  2020 1003000126 Individual Ardalan    NA          Enkeshafi MD         M      #> 2  2020 1003000126 Individual Ardalan    NA          Enkeshafi MD         M      #> 3  2020 1003000126 Individual Ardalan    NA          Enkeshafi MD         M      #> 4  2020 1003000126 Individual Ardalan    NA          Enkeshafi MD         M      #> 5  2020 1003000126 Individual Ardalan    NA          Enkeshafi MD         M      #> 6  2020 1003000126 Individual Ardalan    NA          Enkeshafi MD         M      #> 7  2020 1003000126 Individual Ardalan    NA          Enkeshafi MD         M      #> 8  2020 1003000126 Individual Ardalan    NA          Enkeshafi MD         M      #> 9  2020 1003000126 Individual Ardalan    NA          Enkeshafi MD         M      #> # ℹ 20 more variables: specialty <chr>, street <chr>, city <chr>, state <chr>, #> #   fips <chr>, zipcode <chr>, ruca <chr>, country <chr>, par <lgl>, #> #   hcpcs_code <chr>, hcpcs_desc <chr>, hcpcs_drug <chr>, place_of_srvc <chr>, #> #   tot_benes <int>, tot_srvcs <int>, tot_day <int>, avg_charges <dbl>, #> #   avg_allowed <dbl>, avg_payment <dbl>, avg_std_pymt <dbl>"},{"path":"https://andrewallenbruce.github.io/provider/articles/physician-by-service.html","id":"data-dictionary","dir":"Articles","previous_headings":"","what":"Data Dictionary","title":"Physician by Service","text":"npi last_name first_name middle_name credential gender entype street rndrng_prvdr_st2 city state fips zipcode ruca rndrng_prvdr_ruca_desc country specialty par hcpcs_cd hcpcs_desc hcpcs_drug place_of_srvc tot_benes tot_srvcs tot_day avg_charges avg_allowed avg_payment avg_std_pymt","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/provider.html","id":"tidy-output","dir":"Articles","previous_headings":"","what":"Tidy Output","title":"Overview of Provider","text":"tidy data, every column variable, every row observation, every cell single value. Many outputs APIs violate form Storing column headers values, variable names Storing multiple variables one column remedy , post-processing done output returned. function tidy argument set TRUE default:  Setting FALSE return un-processed output:  tidy transformations applied output function include: Favoring long format wide. descriptive, thematic variable names involving prefixes standardized vocabulary across outputs Various quality--life data transformations (e.g., using snake_case variable names, replacing empty character cells NA; converting years, dates, booleans respective data types) Nesting large groups related columns lists, initially emphasize important output. However, event prefer transformations, simply turn tidy = FALSE.","code":"order_refer(npi = 1043477615) order_refer(npi = 1043477615, tidy = FALSE)"},{"path":"https://andrewallenbruce.github.io/provider/articles/provider.html","id":"exported-functions","dir":"Articles","previous_headings":"","what":"Exported Functions","title":"Overview of Provider","text":"API Search functions can grouped according type data return provider: administrative, statistical, auxiliary.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/provider.html","id":"administrative","dir":"Articles","previous_headings":"Exported Functions","what":"Administrative","title":"Overview of Provider","text":"nppes(): Registry healthcare providers. providers(): Providers actively enrolled Medicare. opt_out(): Providers currently opted Medicare. revalidation(): Link Type-1 Type-2 providers. clinicians(): Provider school, graduation year, linking. affiliations(): Linking providers Facilities. hospitals(): Facilities linked providers.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/provider.html","id":"statistical","dir":"Articles","previous_headings":"Exported Functions","what":"Statistical","title":"Overview of Provider","text":"following return provider-specific stats: by_physician(): Yearly high-level utilization data. by_service(): Yearly detailed utilization data. qpp_performance(): Yearly QPP/MIPS performance data. qpp_eligibility(): Yearly QPP/MIPS eligibility data. open_payments(): Yearly Open Payments reporting data. following return yearly stats useful comparison data returned physician_by_service(): by_geography() beneficiaries() conditions() cc_multiple() cc_specific()","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/provider.html","id":"auxiliary","dir":"Articles","previous_headings":"Exported Functions","what":"Auxiliary","title":"Overview of Provider","text":"order_refer(): provider eligible order refer? endpoints_missing(): provider missing Endpoints NPPES NPI Registry? pending(): provider’s Medicare application processed? taxonomy(): provider’s specialty eligible enroll Medicare? qpp_stats(): Yearly QPP/MIPS performance data.","code":""},{"path":"https://andrewallenbruce.github.io/provider/articles/provider.html","id":"helper-functions","dir":"Articles","previous_headings":"","what":"Helper Functions","title":"Overview of Provider","text":"Several functions required year argument. years available query APIs might change time, accompanying helper function retrieve years available, form <function_name>_years(). instance, quality_payment()’s : can also used pipeline, searching available years:","code":"quality_payment_years() #> [1] 2017 2018 2019 2020 2021 quality_payment_years() |>    map(\\(x) quality_payment(year = x, npi = 1043477615)) |>    list_rbind() |>    select(year:final_score)"},{"path":"https://andrewallenbruce.github.io/provider/articles/provider.html","id":"validation-checks","dir":"Articles","previous_headings":"","what":"Validation Checks","title":"Overview of Provider","text":"Several validation checks implemented, including checks NPIs, PAC IDs, Enrollment IDs: National Provider Identifier: National Provider Identifier (NPI) unique 10-digit identification number issued health care providers United States Centers Medicare Medicaid Services (CMS) National Plan Provider Enumeration System (NPPES). individual HIPAA–covered healthcare providers organizations must obtain NPI. assigned, provider’s NPI permanent remains provider regardless job location changes.  Provider Associate-level Control ID: Provider associate-level control ID (PAC ID) 10-digit unique numeric identifier assigned individual organization PECOS. PAC ID links entity-level information (e.g., tax identification numbers organizational names) may associated multiple enrollment IDs individual organization enrolled multiple times different circumstances.  Medicare Enrollment ID: Enrollment ID 15-digit unique alphanumeric identifier assigned new provider enrollment application. enrollment-level information (e.g., enrollment type, enrollment state, provider specialty reassignment benefits) linked Enrollment ID.  Numeric Parameters Leading Zeros R drop leading zeros numeric vector. parameters may contain leading zeros, make sure ’re input character vector. :","code":"# Must be 10 characters long open_payments(npi = 12345691234) #> Error in `open_payments()`: #> ! An NPI must be 10 digits long. #> ✖ 12345691234 contains 11 digits.  # Must be numeric nppes_npi(npi = \"O12345678912\") #> Error in `nppes_npi()`: #> ! An NPI must be numeric. #> ✖ \"O12345678912\" contains non-numeric characters.  # Must pass Luhn check pending_applications(npi = 001234569123) #> Error in `pending_applications()`: #> ! An NPI must pass Luhn algorithm. #> ✖ 1234569123 fails Luhn check. # Must be 10 characters long affiliations(pac_id = 0123456789) #> Error in `affiliations()`: #> ! A PAC ID must be 10 digits long. #> ✖ 123456789 contains 9 digits.  # Must be numeric hospitals(pac_id_org = \"O12345678912\") #> Error in `hospitals()`: #> ! A PAC ID must be numeric. #> ✖ \"O12345678912\" contains non-numeric characters. # Must be a character vector clinicians(enroll_id = 0123456789123456) #> Error in `clinicians()`: #> ! An Enrollment ID must be a character vector. #> ✖ 123456789123456 is a <numeric> vector.  # Must be 15 characters long revalidation_date(enroll_id = \"I123456789123456\") #> Error in `revalidation_date()`: #> ! An Enrollment ID must be 15 characters long. #> ✖ \"I123456789123456\" contains 16 characters.  # Must begin with a capital I (Individual) or O (Organization/Group) providers(enroll_id = \"012345678912345\") #> Error in `providers()`: #> ! An Enrollment ID must begin with a capital `I` or `O`. #> ✖ \"012345678912345\" begins with \"0\".  # Some functions' parameters differentiate between an Organizational and Individual ID hospitals(enroll_id_org = \"I20180115000174\") #> Error in `hospitals()`: #> ! An organizational/group Enrollment ID must begin with a capital `O`. #> ✖ \"I20180115000174\" begins with \"I\". 0001 #> [1] 1  \"0001\" #> [1] \"0001\""},{"path":"https://andrewallenbruce.github.io/provider/articles/quality-payment.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Quality Payment Program","text":"","code":"quality_payment(year = 2018, npi = 1578508776) #> # A tibble: 1 × 20 #>    year npi   practice_state practice_size clinician_specialty years_in_medicare #>   <int> <chr> <chr>                  <int> <chr>                           <int> #> 1  2018 1578… GA                       166 Internal Medicine                  13 #> # ℹ 14 more variables: participation_type <chr>, beneficiaries <int>, #> #   services <int>, allowed_charges <dbl>, final_score <chr>, #> #   payment_adjustment <dbl>, quality_score <chr>, pi_score <chr>, #> #   ia_score <chr>, cost_score <chr>, complex_patient_bonus <dbl>, #> #   quality_improvement_bonus <dbl>, special_statuses <list>, measures <list> quality_eligibility(year = 2018, npi = 1578508776, tidy = FALSE) #> # A tibble: 1 × 26 #>    year first_name middle_name last_name   npi        national_provider_identi…¹ #>   <dbl> <chr>      <chr>       <chr>       <chr>                           <int> #> 1  2018 SASIKALA   \"\"          PONNAMBALAM 1578508776                          1 #> # ℹ abbreviated name: ¹​national_provider_identifier_type #> # ℹ 20 more variables: first_approved_date <chr>, years_in_medicare <int>, #> #   pecos_enrollment_date <int>, newly_enrolled <lgl>, #> #   specialty_specialty_description <chr>, specialty_type_description <chr>, #> #   specialty_category_reference <chr>, is_maqi <lgl>, prvdr_org_name <chr>, #> #   hospital_vbp_name <lgl>, is_facility_based <lgl>, address_line_one <chr>, #> #   address_line_two <lgl>, city <chr>, state <chr>, zip <chr>, apms <list>, … quality_stats(year = 2018) #> # A tibble: 4 × 4 #>    year type       stat                     value #>   <int> <chr>      <chr>                    <dbl> #> 1  2018 Individual HCC Risk Score Average   2.50  #> 2  2018 Individual Dual Eligibility Average 0.507 #> 3  2018 Group      HCC Risk Score Average   2.53  #> 4  2018 Group      Dual Eligibility Average 0.500"},{"path":"https://andrewallenbruce.github.io/provider/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew Bruce. Author, maintainer, copyright holder.","code":""},{"path":"https://andrewallenbruce.github.io/provider/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bruce (2023). provider: Access Public Healthcare Provider Data. https://andrewallenbruce.github.io/provider/, https://github.com/andrewallenbruce/provider.","code":"@Manual{,   title = {provider: Access Public Healthcare Provider Data},   author = {Andrew Bruce},   year = {2023},   note = {https://andrewallenbruce.github.io/provider/, https://github.com/andrewallenbruce/provider}, }"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"provider-","dir":"","previous_headings":"","what":"Access Public Healthcare Provider Data","title":"Access Public Healthcare Provider Data","text":"Providing easy access healthcare provider data publicly available APIs & sources.","code":""},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access Public Healthcare Provider Data","text":"can install provider GitHub :","code":"# install.packages(\"pak\") pak::pak(\"andrewallenbruce/provider\")"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"motivation","dir":"","previous_headings":"","what":"Motivation","title":"Access Public Healthcare Provider Data","text":"overarching goal provider make experience accessing publicly-available Provider data easier consistent across variety sources. aims accomplish following general goals, possible: Structuring output tidy framework much reasonably possible, option turn setting tidy = FALSE. Harmonization variable names, express purpose making easier understand (make connections ) API’s output. also allow removal duplicate information across API output, desired. Validation checks inputs, reasonable (e.g, identifiers NPI, PAC ID, Medicare Enrollment ID, CCN, Taxonomy codes). simply good practice, also prevent unnecessary querying APIs. Well-written documentation, containing many examples necessary. API’s output can difficult understand, even someone expertise R, healthcare, .","code":""},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"exported-functions","dir":"","previous_headings":"","what":"Exported Functions","title":"Access Public Healthcare Provider Data","text":"API Search functions can grouped according type data return provider: administrative, statistical, auxiliary.","code":""},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"administrative","dir":"","previous_headings":"Exported Functions","what":"Administrative","title":"Access Public Healthcare Provider Data","text":"nppes(): Registry healthcare providers. providers(): Providers actively enrolled Medicare. opt_out(): Providers currently opted Medicare. revalidation_*(): Link Type-1 Type-2 providers. clinicians(): Provider school, graduation year, linking. affiliations(): Linking providers Facilities. hospitals(): Facilities linked providers.","code":""},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"statistical","dir":"","previous_headings":"Exported Functions","what":"Statistical","title":"Access Public Healthcare Provider Data","text":"following return provider-specific stats: by_provider(): Yearly high-level utilization data. by_service(): Yearly detailed utilization data. quality_payment(): Yearly QPP/MIPS performance data. quality_eligibility(): Yearly QPP/MIPS eligibility data. open_payments(): Yearly Open Payments reporting data. following return yearly stats useful comparison data returned by_service(): geography() beneficiary() chronic_multiple() chronic_specific()","code":""},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"auxiliary","dir":"","previous_headings":"Exported Functions","what":"Auxiliary","title":"Access Public Healthcare Provider Data","text":"order_refer(): provider eligible order refer? missing_endpoints(): provider missing Endpoints NPPES NPI Registry? pending_applications(): provider’s Medicare application processed? taxonomy_crosswalk(): provider’s specialty eligible enroll Medicare?","code":""},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Access Public Healthcare Provider Data","text":"","code":"library(provider)"},{"path":"https://andrewallenbruce.github.io/provider/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Access Public Healthcare Provider Data","text":"Please note provider project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/affiliations.html","id":null,"dir":"Reference","previous_headings":"","what":"Provider Facility Affiliations — affiliations","title":"Provider Facility Affiliations — affiliations","text":"affiliations() allows access information concerning providers' facility affiliations","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/affiliations.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Provider Facility Affiliations — affiliations","text":"Physician Facility Affiliations Certification Number (CCN) State Codes Update Frequency: Monthly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/affiliations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provider Facility Affiliations — affiliations","text":"","code":"affiliations(   npi = NULL,   pac_id = NULL,   first_name = NULL,   middle_name = NULL,   last_name = NULL,   facility_type = NULL,   facility_ccn = NULL,   parent_ccn = NULL,   offset = 0L,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/affiliations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provider Facility Affiliations — affiliations","text":"npi Unique clinician ID assigned NPPES pac_id Unique individual clinician ID assigned PECOS first_name Individual clinician first name middle_name Individual clinician middle name last_name Individual clinician last name facility_type Facilities can fall following type categories: - Hospital - Long-term Care Hospital (LTCH) - Nursing Home - Inpatient Rehabilitation Facility (IRF) - Home Health Agency (HHA) - Skilled Nursing Facility (SNF) - Hospice - Dialysis Facility facility_ccn alphanumeric; Medicare CCN (CMS Certification Number) facility type unit within hospital individual clinician provides service. CCN replaced terms Medicare Provider Number, Medicare Identification Number OSCAR Number used verify Medicare/Medicaid certification survey certification, assessment-related activities communications. parent_ccn numeric; CCN primary hospital individual clinician provides service, clinician provide services unit within hospital. offset offset; API pagination tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/affiliations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provider Facility Affiliations — affiliations","text":"tibble containing search results.","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/affiliations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provider Facility Affiliations — affiliations","text":"","code":"if (FALSE) { # interactive() affiliations(facility_ccn = \"060004\") affiliations(parent_ccn = 670055) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"Current information number Medicare beneficiaries hospital/medical coverage prescription drug coverage, available several geographical areas.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"","code":"beneficiary_enrollment(   year = NULL,   period = NULL,   level = NULL,   state = NULL,   state_name = NULL,   county = NULL,   fips = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"year Calendar year Medicare enrollment; current options 2017 - 2022 period Time frame Medicare enrollment; options Year, Month month within 12-month time span month data set's version name (listed ) level Geographic level data; options National, State, County state Two-letter state abbreviation beneficiary residence state_name Full state name beneficiary residence county County beneficiary residence fips FIPS code beneficiary residence tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"Medicare Monthly Enrollment data provides current monthly information number Medicare beneficiaries hospital/medical coverage prescription drug coverage, available several geographic areas including national, state/territory, county. hospital/medical coverage data can broken health care delivery (Original Medicare versus Medicare Advantage Health Plans) prescription drug coverage data can examined enrolled stand-alone Prescription Drug Plans enrolled Medicare Advantage Prescription Drug plans. dataset includes enrollee counts rolling 12 month basis also provides information yearly trends. dataset based information gathered CMS administrative enrollment data beneficiaries enrolled Medicare program available CMS Chronic Conditions Data Warehouse.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"Medicare Monthly Enrollment","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"Update Frequency: Monthly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/beneficiary_enrollment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Monthly Enrollment API — beneficiary_enrollment","text":"","code":"if (FALSE) { # interactive() beneficiary_enrollment(year = NULL,                        period = \"Year\",                        level = \"County\",                        state = \"AL\",                        county = \"Autauga\")  beneficiary_enrollment(year = 2021, level = \"County\", fips = \"01001\")  beneficiary_enrollment(year = 2022,                        period = \"July\",                        level = \"State\",                        state_name = \"Georgia\")  beneficiary_enrollment(level = \"State\", fips = \"10\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"Information prevalence, use spending count select chronic conditions among Original Medicare (fee--service) beneficiaries.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"","code":"cc_multiple(   year,   level = NULL,   sublevel = NULL,   fips = NULL,   age_group = NULL,   demographic = NULL,   subdemo = NULL,   tidy = TRUE )"},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"in-addition-to-the-searchable-columns-","dir":"Reference","previous_headings":"","what":"In addition to the searchable columns:","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"mcc classify MCC Medicare beneficiary, 21 chronic conditions counted grouped four categories (0-1, 2-3, 4-5 6 ). prevalence Prevalence estimates calculated taking beneficiaries within MCC category divided total number beneficiaries fee--service population, expressed percentage. tot_std_pymt_percap Medicare standardized spending includes total Medicare payments covered services Parts B presented per beneficiary (.e. per capita). Standardized payments presented allow comparisons across geographic areas health care use among beneficiaries. tot_pymt_percap Medicare spending includes total Medicare payments covered services Parts B presented per beneficiary (.e. per capita). hosp_readmsn_rate Hospital readmissions expressed percentage admissions. 30-day readmission defined admission acute care hospital cause within 30 days discharge acute care hospital. Except patient died stay, inpatient stay classified index admission, readmission, . er_visits_per_1k Emergency department visits presented number visits per 1,000 beneficiaries. ED visits include visits beneficiary released outpatient setting beneficiary admitted inpatient setting.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"year integer, YYYY, calendar year Medicare enrollment. Run helper function provider:::cc_multiple_years() return vector currently available years. level Geographic level data; options National, State, County sublevel state /county Medicare beneficiary resides. values include 50 United States, District Columbia, Puerto Rico U.S. Virgin Islands. Data aggregated National level identified \"National'. fips FIPS state /county code Medicare beneficiary resides. column blank data aggregated National level Puerto Rico Virgin Islands. age_group Identifies age level population data aggregated. value indicates data row represents Fee--Service Medicare Beneficiaries. value <65 65+ indicates data aggregated age Medicare Beneficiaries end calendar year. demographic Identifies demographic level population data aggregated. value indicates data row represents Fee--Service Medicare beneficiaries. value Sex indicates data aggregated Medicare beneficiary's sex. value Race indicates data aggregated Medicare beneficiary's race. value Dual Status indicates data aggregated Medicare beneficiary's dual eligibility status. subdemo Sex, beneficiary’s sex classified Male Female identified using information CMS enrollment database. Race, race/ethnicity classifications : Non-Hispanic White, Black African American, Asian/Pacific Islander, Hispanic, American Indian/Alaska Native. Dual Status, beneficiaries can classified 'Medicare Medicaid' 'Medicare '. Beneficiaries enrolled Medicare Medicaid known “dual eligibles.” Medicare beneficiaries classified dual eligibles month given calendar year receiving full partial Medicaid benefits. tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"Multiple Chronic Conditions dataset provides information number chronic conditions among Original Medicare beneficiaries. dataset contains prevalence, use spending organized geography count chronic conditions set select 21 chronic conditions. count conditions grouped four categories (0-1, 2-3, 4-5 6 ).","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"Medicare Multiple Chronic Conditions","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"Update Frequency: Annually","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_multiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Multiple Chronic Conditions API — cc_multiple","text":"","code":"if (FALSE) { cc_multiple(year = 2018, level  = \"State\", sublevel = \"California\") cc_multiple(year = 2007, level = \"National\", demographic = \"Race\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Specific Chronic Conditions API — cc_specific","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"Information prevalence, use spending count select chronic conditions among Original Medicare (fee--service) beneficiaries.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"","code":"cc_specific(   year,   level = NULL,   sublevel = NULL,   fips = NULL,   age_group = NULL,   demographic = NULL,   subdemo = NULL,   condition = NULL,   tidy = TRUE )"},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"in-addition-to-the-searchable-columns-","dir":"Reference","previous_headings":"","what":"In addition to the searchable columns:","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"prevalence Prevalence estimates calculated taking beneficiaries within MCC category divided total number beneficiaries fee--service population, expressed percentage. tot_std_pymt_percap Medicare standardized spending includes total Medicare payments covered services Parts B presented per beneficiary (.e. per capita). Standardized payments presented allow comparisons across geographic areas health care use among beneficiaries. tot_pymt_percap Medicare spending includes total Medicare payments covered services Parts B presented per beneficiary (.e. per capita). hosp_readmsn_rate Hospital readmissions expressed percentage admissions. 30-day readmission defined admission acute care hospital cause within 30 days discharge acute care hospital. Except patient died stay, inpatient stay classified index admission, readmission, . er_visits_per_1k Emergency department visits presented number visits per 1,000 beneficiaries. ED visits include visits beneficiary released outpatient setting beneficiary admitted inpatient setting.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"year integer, YYYY, calendar year Medicare enrollment. Run helper function provider:::cc_specific_years() return vector currently available years. level Geographic level data; options National, State, County sublevel state /county Medicare beneficiary resides. values include 50 United States, District Columbia, Puerto Rico U.S. Virgin Islands. Data aggregated National level identified \"National'. fips FIPS state /county code Medicare beneficiary resides. column blank data aggregated National level Puerto Rico Virgin Islands. age_group Identifies age level population data aggregated. value indicates data row represents Fee--Service Medicare Beneficiaries. value <65 65+ indicates data aggregated age Medicare Beneficiaries end calendar year. demographic Identifies demographic level population data aggregated. value indicates data row represents Fee--Service Medicare beneficiaries. value Sex indicates data aggregated Medicare beneficiary's sex. value Race indicates data aggregated Medicare beneficiary's race. value Dual Status indicates data aggregated Medicare beneficiary's dual eligibility status. subdemo Sex, beneficiary’s sex classified Male Female identified using information CMS enrollment database. Race, race/ethnicity classifications : Non-Hispanic White, Black African American, Asian/Pacific Islander, Hispanic, American Indian/Alaska Native. Dual Status, beneficiaries can classified 'Medicare Medicaid' 'Medicare '. Beneficiaries enrolled Medicare Medicaid known “dual eligibles.” Medicare beneficiaries classified dual eligibles month given calendar year receiving full partial Medicaid benefits. condition Identifies chronic condition prevalence utilization compiled. 21 chronic conditions identified using Medicare administrative claims. Medicare beneficiary considered chronic condition CMS administrative data claim indicating beneficiary received service treatment specific condition. Beneficiaries may one chronic conditions listed. tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"Select Chronic Conditions dataset provides information 21 selected chronic conditions among Original Medicare beneficiaries. dataset contains prevalence, use spending organized geography distinct chronic conditions listed . Alcohol Abuse Drug Abuse/ Substance Abuse Alzheimer’s Disease Related Dementia Arthritis (Osteoarthritis Rheumatoid) Asthma Atrial Fibrillation Autism Spectrum Disorders Cancer (Breast, Colorectal, Lung, Prostate) Chronic Kidney Disease Chronic Obstructive Pulmonary Disease Depression Diabetes Drug Abuse/ Substance Abuse Heart Failure Hepatitis (Chronic Viral B & C) HIV/AIDS Hyperlipidemia (High cholesterol) Hypertension (High blood pressure) Ischemic Heart Disease Osteoporosis Schizophrenia Psychotic Disorders Stroke","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"Medicare Specific Chronic Conditions","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"Update Frequency: Annually","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/cc_specific.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Specific Chronic Conditions API — cc_specific","text":"","code":"if (FALSE) { cc_specific(year = 2018, level = \"State\", sublevel = \"CA\") cc_specific(year = 2007, level  = \"National\", demographic = \"Race\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/clinicians.html","id":null,"dir":"Reference","previous_headings":"","what":"Doctors and Clinicians National Downloadable File — clinicians","title":"Doctors and Clinicians National Downloadable File — clinicians","text":"clinicians() . Doctors Clinicians national downloadable file organized line unique clinician/enrollment record/group/address level. Clinicians multiple Medicare enrollment records /single enrollments linking multiple practice locations listed multiple lines.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/clinicians.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Doctors and Clinicians National Downloadable File — clinicians","text":"National Downloadable File Provider Data Catalog (PDC) Data Dictionary Update Frequency: Monthly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/clinicians.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Doctors and Clinicians National Downloadable File — clinicians","text":"","code":"clinicians(   npi = NULL,   pac_id = NULL,   enroll_id = NULL,   first_name = NULL,   middle_name = NULL,   last_name = NULL,   gender = NULL,   school = NULL,   grad_year = NULL,   specialty = NULL,   city = NULL,   state = NULL,   zip = NULL,   offset = 0L,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/clinicians.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Doctors and Clinicians National Downloadable File — clinicians","text":"npi Unique clinician ID assigned NPPES pac_id Unique individual clinician ID assigned PECOS enroll_id Unique ID clinician enrollment source data observation first_name Individual clinician first name middle_name Individual clinician middle name last_name Individual clinician last name gender Individual clinician gender school Individual clinician’s medical school grad_year Individual clinician’s medical school graduation year specialty Primary medical specialty reported individual clinician selected enrollment city Group individual's city state Group individual's state zip Group individual's ZIP code offset offset; API pagination tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/clinicians.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Doctors and Clinicians National Downloadable File — clinicians","text":"tibble containing search results.","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/clinicians.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Doctors and Clinicians National Downloadable File — clinicians","text":"","code":"if (FALSE) { # interactive() clinicians(enroll_id = \"I20081002000549\") clinicians(school = \"NEW YORK UNIVERSITY SCHOOL OF MEDICINE\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/hospitals.html","id":null,"dir":"Reference","previous_headings":"","what":"Hospitals Enrolled in Medicare — hospitals","title":"Hospitals Enrolled in Medicare — hospitals","text":"hospitals() allows search information hospitals currently enrolled Medicare. Data returned includes hospital's sub-group types, legal business name, -business-name, organization type address.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/hospitals.html","id":"links-","dir":"Reference","previous_headings":"","what":"Links:","title":"Hospitals Enrolled in Medicare — hospitals","text":"Hospital Enrollments Update Frequency: Monthly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/hospitals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hospitals Enrolled in Medicare — hospitals","text":"","code":"hospitals(   npi = NULL,   facility_ccn = NULL,   enroll_id_org = NULL,   enroll_state = NULL,   specialty_code = NULL,   pac_id_org = NULL,   organization_name = NULL,   doing_business_as = NULL,   city = NULL,   state = NULL,   zip = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/hospitals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hospitals Enrolled in Medicare — hospitals","text":"npi Hospital’s National Provider Identifier facility_ccn Hospital’s CMS Certification Number (CCN) enroll_id_org Hospital’s enrollment ID enroll_state Hospital’s enrollment state specialty_code Enrollment specialty type code pac_id_org Hospital’s PAC ID organization_name Hospital’s legal business name doing_business_as Hospital’s -business-name city City hospital’s practice location address state State hospital’s practice location address zip Zip code hospital’s practice location address tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/hospitals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hospitals Enrolled in Medicare — hospitals","text":"tibble containing search results.","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/hospitals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hospitals Enrolled in Medicare — hospitals","text":"","code":"hospitals(pac_id_org = 6103733050) #> # A tibble: 2 × 22 #>   npi        organization_name   doing_business_as pac_id_org enroll_id_org   #>   <chr>      <chr>               <chr>             <chr>      <chr>           #> 1 1164481529 ST CHARLES HOSPITAL NA                6103733050 O20020904000011 #> 2 1225097652 ST CHARLES HOSPITAL NA                6103733050 O20090408000323 #> # ℹ 17 more variables: facility_ccn <chr>, specialty_code <chr>, #> #   specialty <chr>, enroll_state <chr>, incorporation_date <date>, #> #   incorporation_state <chr>, organization_structure <chr>, org_other <chr>, #> #   address <chr>, city <chr>, state <chr>, zip <int>, location_type <chr>, #> #   location_other <chr>, multiple_npis <lgl>, proprietary_nonprofit <lgl>, #> #   subgroups <list>"},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":null,"dir":"Reference","previous_headings":"","what":"Providers with Missing Endpoints in NPPES — missing_information","title":"Providers with Missing Endpoints in NPPES — missing_information","text":"missing_information() allows search providers missing digital contact information NPPES.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"missing-information-nppes-endpoints","dir":"Reference","previous_headings":"","what":"Missing Information = NPPES Endpoints","title":"Providers with Missing Endpoints in NPPES — missing_information","text":"Digital contact information, also known endpoints, provides secure way health care entities send authenticated, encrypted health information trusted recipients internet. Health care organizations seeking engage electronic health information exchange need accurate information electronic addresses (e.g., Direct address, FHIR server URL, query endpoint, digital contact information) potential exchange partners facilitate information exchange.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Providers with Missing Endpoints in NPPES — missing_information","text":"","code":"missing_information(npi = NULL, name = NULL, tidy = TRUE)"},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Providers with Missing Endpoints in NPPES — missing_information","text":"npi provider’s National Provider Identifier name Provider's full name, form \"last, first\" tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Providers with Missing Endpoints in NPPES — missing_information","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Providers with Missing Endpoints in NPPES — missing_information","text":"CMS Public Reporting Missing Digital Contact Information API Endpoints Information Methodology & Policy","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"update-frequency","dir":"Reference","previous_headings":"","what":"Update Frequency","title":"Providers with Missing Endpoints in NPPES — missing_information","text":"Quarterly","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/missing_information.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Providers with Missing Endpoints in NPPES — missing_information","text":"","code":"# A provider that appears in the search results of the Missing Information # API has no Endpoints entered into the NPPES NPI Registry and vice versa.  ## Appears missing_information(name = \"Clouse, John\") #> # A tibble: 1 × 3 #>   npi        last_name first_name #>   <chr>      <chr>     <chr>      #> 1 1144224569 Clouse    John        ## No Endpoints in NPPES nppes_npi(npi = 1144224569,           tidy = FALSE) |>           dplyr::select(endpoints) #> # A tibble: 1 × 1 #>   endpoints #>   <lgl>     #> 1 NA         ## Does Not Appear missing_information(npi = 1003000423) #> ✖ No results for npi: 1003000423  ## Has Endpoints in NPPES nppes_npi(npi = 1003000423, tidy = FALSE) |> dplyr::select(endpoints) |> tidyr::unnest(cols = c(endpoints)) |> janitor::clean_names() |> dplyr::select(dplyr::contains(\"endpoint\")) #> # A tibble: 1 × 4 #>   endpoint_type endpoint_type_description endpoint          endpoint_description #>   <chr>         <chr>                     <chr>             <chr>                #> 1 DIRECT        Direct Messaging Address  Jennifer.velotta… eclinicaldirectplus"},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the NPPES National Provider Identifier Registry API — nppes_npi","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"nppes_npi() allows search NPPES NPI Registry's public API many parameters defined API's documentation.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"","code":"nppes_npi(   npi = NULL,   entype = NULL,   first_name = NULL,   last_name = NULL,   org_name = NULL,   purpose_name = NULL,   taxonomy_desc = NULL,   city = NULL,   state = NULL,   zipcode = NULL,   country = NULL,   limit = 1200,   skip = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"npi 10-digit National Provider Identifier (NPI). entype Choices either Individual provider (NPI-1 Type 1) O Organizational provider (NPI-2 Type 2.). specified, Type 1 Type 2 NPIs returned. Entype criteria entered. first_name Individual provider's (NPI-1) first name. Trailing wildcard entries permitted requiring least two characters entered (e.g. jo* ). last_name Individual provider's (NPI-1) last name. Trailing wildcard entries permitted requiring least two characters entered (e.g. jo* ). org_name Healthcare organization's name (NPI-2). Trailing wildcard entries permitted requiring least two characters entered. types Organization Names (LBN, DBA, Former LBN, Name) associated NPI examined matching contents, therefore, results might contain organization name different one entered Organization Name criterion. purpose_name Refers whether name information entered pertains Authorized Official's name Provider's name. specified, results search provider's first last name. AO search Authorized Official names. PROVIDER search Provider name. Valid values : AO Provider. taxonomy_desc Search providers taxonomy entering taxonomy description. city City associated provider's address. search Military Address, enter either APO FPO. state State abbreviation associated provider's address. field used, least one field, besides entype country, must populated. Valid values state abbreviations: State Abbreviations. zipcode Postal Code associated provider's address identified Address Purpose. enter 5 digit postal code, match appropriate 9 digit (zip+4) codes data. Trailing wildcard entries permitted requiring least two characters entered (e.g., 21*). country Country abbreviation associated provider's address. field can used input criterion, long value selected US (United States). Valid values country abbreviations: Country Abbreviations. limit Maximum number results return; default 1200. skip Number results skip searching previous number; set limit. tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"NPPES NPI Registry Public Search free directory active National Provider Identifier (NPI) records. Healthcare providers acquire unique 10-digit NPIs identify standard way throughout industry. CMS supplies NPI, publish parts NPI record public relevance, including provider’s name, taxonomy practice address. enables search providers NPPES (National Plan Provider Enumeration System.) information produced NPI Registry provided accordance NPPES Data Dissemination Notice. charge use NPI Registry.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"NPPES NPI Registry API Documentation NPPES NPI Registry API Demo","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"Update Frequency: Weekly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nppes_npi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the NPPES National Provider Identifier Registry API — nppes_npi","text":"","code":"if (FALSE) { # interactive() nppes_full(npi = 1528060837) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/nucc_taxonomy_230.html","id":null,"dir":"Reference","previous_headings":"","what":"Health Care Provider Taxonomy code set — nucc_taxonomy_230","title":"Health Care Provider Taxonomy code set — nucc_taxonomy_230","text":"Health Care Provider Taxonomy code set collection unique alphanumeric codes, ten characters length. code set structured three distinct \"Levels\":","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nucc_taxonomy_230.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Health Care Provider Taxonomy code set — nucc_taxonomy_230","text":"","code":"nucc_taxonomy_230"},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/nucc_taxonomy_230.html","id":"nucc-taxonomy-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"nucc_taxonomy_230 A data frame with 873 rows and 8 columns:","title":"Health Care Provider Taxonomy code set — nucc_taxonomy_230","text":"code Taxonomy Code grouping Level , Provider Grouping classification Level II, Classification specialization Level III, Area Specialization definition Definition Taxonomy notes Notes pertaining Taxonomy, e.g. sources, date modified, date implemented, etc. display_name consumer-friendly name taxonomy code; combination code name Level code nested. section Indicates whether Taxonomy Individual Non-Individual, .e., group taxonomy","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nucc_taxonomy_230.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Health Care Provider Taxonomy code set — nucc_taxonomy_230","text":"https://www.nucc.org/index.php/code-sets-mainmenu-41/provider-taxonomy-mainmenu-40/csv-mainmenu-57","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nucc_taxonomy_230.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Health Care Provider Taxonomy code set — nucc_taxonomy_230","text":"Level (Provider Grouping): major grouping service(s) occupation(s) health care providers. example: Allopathic & Osteopathic Physicians, Dental Providers, Hospitals, etc. Level II: (Classification): specific service occupation related Provider Grouping. example, Classification Allopathic & Osteopathic Physicians based upon General Specialty Certificates issued appropriate national boards. following boards however, general certificates appear Level III areas specialization strictly due display limitations code set Boards multiple general certificates: Medical Genetics, Preventive Medicine, Psychiatry & Neurology, Radiology, Surgery, Otolaryngology, Pathology. Level III: (Area Specialization): specialized area Classification provider chooses practice make services available. example, Area Specialization provider type Allopathic & Osteopathic Physicians based upon Subspecialty Certificates issued appropriate national boards. Health Care Provider Taxonomy code set Levels organized allow drilling provider's specific level specialization. ten digit codes provider category unique contain embedded logic. codes categories used exactly assigned Taxonomy list. time codes separated form new codes, parsed apart, edited one position within code.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nucc_taxonomy_230.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Health Care Provider Taxonomy code set — nucc_taxonomy_230","text":"\"230\" designation indicates version code set. NUCC updates set every six months. \"23\" indicates year \"0\" indicates first update year. taxonomy code display name consumer-friendly name code. display name combination code name Level code nested, precisely identifies code.  example, Addiction Medicine physician subspecialty Anesthesiology, Family Medicine, Internal Medicine, Preventive Medicine, Psychiatry & Neurology. Seeing “Addiction Medicine” identify specialty physician, display name “Addiction Medicine (Internal Medicine) Physician” clearly . another example, code “Radiology” confused several codes, “Radiology Chiropractor” specifies exact provider.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/nucc_taxonomy_230.html","id":"how-many-categories-are-there-","dir":"Reference","previous_headings":"","what":"How Many Categories are There?","title":"Health Care Provider Taxonomy code set — nucc_taxonomy_230","text":"Health Care Provider Taxonomy code set collection unique alphanumeric codes, ten characters length. Health Care Provider Taxonomy code set includes specialty categories individuals, Groups individuals, non-individuals. Individual Category includes: Allopathic & Osteopathic Physicians Behavioral Health Social Service Providers Chiropractic Providers Dental Providers Dietary Nutritional Service Providers Emergency Medical Service Providers Eye Vision Service Providers Nursing Service Providers Nursing Service Related Providers Service Providers Pharmacy Service Providers Physician Assistants Advanced Practice Nursing Providers Podiatric Medicine Surgery Service Providers Respiratory, Developmental, Rehabilitative Restorative Service Providers Speech, Language Hearing Service Providers Student, Health Care Technologists, Technicians, Technical Service Providers Group (Individuals) Category includes: Multi-Specialty Single Specialty Non-Individual Category includes: Agencies Ambulatory Health Care Facilities Hospital Units Hospitals Laboratories Managed Care Organizations Nursing Custodial Care Facilities Service Providers Residential Treatment Facilities Respite Care Facilities Suppliers Transportation Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/open_payments.html","id":null,"dir":"Reference","previous_headings":"","what":"Search CMS' Open Payments Program API — open_payments","title":"Search CMS' Open Payments Program API — open_payments","text":"open_payments() allows search CMS' Open Payments Program API.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/open_payments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search CMS' Open Payments Program API — open_payments","text":"","code":"open_payments(   year,   npi = NULL,   profile_id = NULL,   covered_type = NULL,   first_name = NULL,   last_name = NULL,   city = NULL,   state = NULL,   zipcode = NULL,   teaching_hospital = NULL,   payer_name = NULL,   payer_id = NULL,   payment_form = NULL,   payment_nature = NULL,   offset = 0,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/open_payments.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search CMS' Open Payments Program API — open_payments","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/open_payments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search CMS' Open Payments Program API — open_payments","text":"year Program reporting year. Run helper function provider:::open_payments_years() return vector currently available years. npi Covered recipient's National Provider Identifier (NPI). profile_id Covered recipient's  unique Open Payments ID covered_type Type covered recipient, e.g., Covered Recipient Physician Covered Recipient Non-Physician Practitioner Covered Recipient Teaching Hospital first_name Covered recipient's first name last_name Covered recipient's last name city City state State, abbreviation zipcode Zip code teaching_hospital Name teaching hospital, e.g. Vanderbilt University Medical Center payer_name Paying entity's name. Examples: Pharmacosmos Therapeutics Inc. Getinge USA Sales, LLC Agiliti Health, Inc. OrthoScan, Inc. payer_id Paying entity's unique Open Payments ID payment_form Form payment, examples: Stock option Cash cash equivalent -kind items services payment_nature Nature payment transfer value, examples: Royalty License Charitable Contribution Current prospective ownership investment interest Food Beverage offset offset; API pagination tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/open_payments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search CMS' Open Payments Program API — open_payments","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/open_payments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search CMS' Open Payments Program API — open_payments","text":"Open Payments program national disclosure program promotes transparent accountable health care system. Open Payments houses publicly accessible database payments reporting entities, including drug medical device companies, make covered recipients like physicians. Please note CMS comment relationships may beneficial potential conflicts interest. CMS publishes data attested reporting entities. data open individual interpretation. Open Payments national transparency program collects publishes information financial relationships drug medical device companies (referred \"reporting entities\") certain health care providers (referred \"covered recipients\"). relationships may involve payments providers things including limited research, meals, travel, gifts speaking fees. purpose program provide public transparent health care system. information available Open Payments database open personal interpretation questions data means, patients advocates speak directly health care provider better understanding.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/open_payments.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search CMS' Open Payments Program API — open_payments","text":"Open Payments Program? OpenPaymentsData.cms.gov 2021 General Payment Data 2020 General Payment Data 2019 General Payment Data 2018 General Payment Data 2017 General Payment Data 2016 General Payment Data 2015 General Payment Data","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/open_payments.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search CMS' Open Payments Program API — open_payments","text":"Update Frequency: Yearly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/open_payments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search CMS' Open Payments Program API — open_payments","text":"","code":"if (FALSE) { # interactive() open_payments(npi = 1043218118, year = 2021) open_payments(payment_nature = \"Royalty or License\") open_payments(payment_form = \"Stock option\") open_payments(payer_name = \"Adaptive Biotechnologies Corporation\") open_payments(teaching_hospital = \"Nyu Langone Hospitals\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":null,"dir":"Reference","previous_headings":"","what":"Providers That Have Opted Out of Medicare — opt_out","title":"Providers That Have Opted Out of Medicare — opt_out","text":"opt_out() allows search information providers decided participate Medicare.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"opting-out","dir":"Reference","previous_headings":"","what":"Opting Out","title":"Providers That Have Opted Out of Medicare — opt_out","text":"Providers wish enroll Medicare program may “opt-” Medicare. means neither physician, beneficiary submits bill Medicare services rendered. Instead, beneficiary pays physician --pocket neither party reimbursed Medicare. private contract signed physician beneficiary states neither one can receive payment Medicare services performed. opt , provider must: eligible specialty type Submit opt-affidavit Medicare Enter private contract Medicare patients, reflecting agreement pay --pocket services, one submit bill Medicare reimbursement Contact Medicare Administrative Contractor (MAC) instruction information included opt-affidavit private contract","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"opt-out-periods","dir":"Reference","previous_headings":"","what":"Opt-Out Periods","title":"Providers That Have Opted Out of Medicare — opt_out","text":"Opt-periods last two years terminated early unless provider opting first time terminates opt-later 90 days opt-period's effective date. Opt-statuses effective two years automatically renew every two years. Providers want extend opt-status end opt-period may cancel notifying Medicare contractors affidavit filed least 30 days prior start next opt-period. provider retires, surrenders license, longer wants participate Medicare program, must officially withdraw within 90 days. DMEPOS suppliers must withdraw within 30 days. Providers may opt-intend Medicare Advantage (Part C) provider furnish services covered traditional Medicare fee--service (Part B).","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Providers That Have Opted Out of Medicare — opt_out","text":"","code":"opt_out(   npi = NULL,   first_name = NULL,   last_name = NULL,   specialty = NULL,   address = NULL,   city = NULL,   state = NULL,   zip = NULL,   order_refer = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Providers That Have Opted Out of Medicare — opt_out","text":"npi 10-digit National Provider Identifier first_name Provider's first name last_name Provider's last name specialty Provider's specialty address Provider's address city Provider's city state Provider's state abbreviation zip Provider's zip code order_refer boolean indicating whether provider eligible order refer tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Providers That Have Opted Out of Medicare — opt_out","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Providers That Have Opted Out of Medicare — opt_out","text":"Medicare Opt Affidavits API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"update-frequency","dir":"Reference","previous_headings":"","what":"Update Frequency","title":"Providers That Have Opted Out of Medicare — opt_out","text":"Monthly","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/opt_out.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Providers That Have Opted Out of Medicare — opt_out","text":"","code":"opt_out(last_name = \"Smith\",         first_name = \"James\",         specialty = \"Nurse Practitioner\",         order_refer = TRUE) #> # A tibble: 1 × 12 #>   npi        first_name last_name specialty    optout_start_date optout_end_date #>   <chr>      <chr>      <chr>     <chr>        <date>            <date>          #> 1 1043522824 James      Smith     Nurse Pract… 2019-07-01        2025-07-01      #> # ℹ 6 more variables: last_updated <date>, order_refer <lgl>, address <chr>, #> #   city <chr>, state <chr>, zip <chr>  # For providers that have opted out, but are eligible to order and refer, # use `order_refer()` to look up their specific eligibility statuses opt_out(last_name = \"Smith\",         first_name = \"James\",         specialty = \"Nurse Practitioner\",         order_refer = TRUE) |>         dplyr::pull(npi) |>         purrr::map(\\(x) order_refer(npi = x)) |>         purrr::list_rbind() #> # A tibble: 4 × 5 #>   npi        first_name last_name service                         eligible #>   <chr>      <chr>      <chr>     <chr>                           <lgl>    #> 1 1043522824 JAMES      SMITH     Medicare Part B                 TRUE     #> 2 1043522824 JAMES      SMITH     Home Health Agency (HHA)        TRUE     #> 3 1043522824 JAMES      SMITH     Durable Medical Equipment (DME) TRUE     #> 4 1043522824 JAMES      SMITH     Power Mobility Device (PMD)     TRUE"},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordering and Referring Eligibility for Medicare — order_refer","title":"Ordering and Referring Eligibility for Medicare — order_refer","text":"order_refer() allows search physicians non-physician practitioners type/specialty legally eligible order refer Part B (clinical laboratory imaging), DME Part HHA claims Medicare program.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"ordering-and-referring-or-certifying-providers","dir":"Reference","previous_headings":"","what":"Ordering and Referring (or Certifying) Providers","title":"Ordering and Referring Eligibility for Medicare — order_refer","text":"Ordering providers can order non-physician services patients. Referring providers can request items services Medicare may reimburse behalf Medicare beneficiaries. qualify ordering referring/certifying provider, provider must: individual NPI enrolled Medicare either approved opt-status eligible specialty type Providers currently enrolled Medicare Part B can order refer. provider want bill Medicare services can still order refer opting Medicare enrolling solely order refer. Medicare coverage apply ordering referring: Durable Medical Equipment, Prosthetics, Orthotics, Supplies (DMEPOS) Clinical Laboratory Services Imaging Services Home Health Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordering and Referring Eligibility for Medicare — order_refer","text":"","code":"order_refer(   npi = NULL,   first_name = NULL,   last_name = NULL,   partb = NULL,   dme = NULL,   hha = NULL,   pmd = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordering and Referring Eligibility for Medicare — order_refer","text":"npi 10-digit National Provider Identifier first_name Provider's first name last_name Provider's last name partb boolean; eligibility order & refer Medicare Part B dme boolean; eligibility order Durable Medical Equipment hha boolean; eligibility refer Home Health Agency pmd boolean; eligibility order Power Mobility Devices tidy boolean; Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordering and Referring Eligibility for Medicare — order_refer","text":"tibble object containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Ordering and Referring Eligibility for Medicare — order_refer","text":"Medicare Order Referring API CMS.gov: Ordering & Certifying Order Referring Methodology","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"update-frequency","dir":"Reference","previous_headings":"","what":"Update Frequency","title":"Ordering and Referring Eligibility for Medicare — order_refer","text":"Twice Weekly","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/order_refer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ordering and Referring Eligibility for Medicare — order_refer","text":"","code":"if (FALSE) { # interactive() # Search by NPI order_refer(npi = 1003026055)  # Search by name and/or filter for certain privileges order_refer(last_name = \"Smith\", partb = FALSE, hha = TRUE) }"},{"path":"https://andrewallenbruce.github.io/provider/reference/pending_applications.html","id":null,"dir":"Reference","previous_headings":"","what":"Providers with Pending Medicare Enrollment Applications — pending_applications","title":"Providers with Pending Medicare Enrollment Applications — pending_applications","text":"pending_applications() list enrollment applications pending CMS contractor review physicians & non-physicians.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/pending_applications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Providers with Pending Medicare Enrollment Applications — pending_applications","text":"","code":"pending_applications(   type,   npi = NULL,   last_name = NULL,   first_name = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/pending_applications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Providers with Pending Medicare Enrollment Applications — pending_applications","text":"type physician non-physician npi National Provider Identifier (NPI) number last_name Last name provider first_name First name provider tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/pending_applications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Providers with Pending Medicare Enrollment Applications — pending_applications","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/pending_applications.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Providers with Pending Medicare Enrollment Applications — pending_applications","text":"Medicare Pending Initial Logging Tracking Physicians API Medicare Pending Initial Logging Tracking Non-Physicians API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/pending_applications.html","id":"update-frequency","dir":"Reference","previous_headings":"","what":"Update Frequency","title":"Providers with Pending Medicare Enrollment Applications — pending_applications","text":"Weekly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/pending_applications.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Providers with Pending Medicare Enrollment Applications — pending_applications","text":"","code":"if (FALSE) { # interactive() pending_applications(last_name = \"Smith\", type = \"non-physician\") pending_applications(first_name = \"John\", type = \"physician\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-package.html","id":null,"dir":"Reference","previous_headings":"","what":"provider: Access Public Healthcare Provider Data — provider-package","title":"provider: Access Public Healthcare Provider Data — provider-package","text":"Provides various features facilitate easy access publicly available healthcare provider data. Includes functions tidy data accessed, whether reporting purposes updating internal records.","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"provider: Access Public Healthcare Provider Data — provider-package","text":"Maintainer: Andrew Bruce andrewbruce.himni@gmail.com [copyright holder]","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Information services procedures provided Original Medicare (fee--service) Part B (Medical Insurance) beneficiaries physicians healthcare professionals; aggregated geography service. physician_by_provider() allows access data services procedures performed; charges submitted payment received; beneficiary demographic health characteristics providers treating Original Medicare (fee--service) Part B beneficiaries, aggregated year. Information services procedures provided Original Medicare (fee--service) Part B (Medical Insurance) beneficiaries physicians healthcare professionals; aggregated provider service.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"","code":"physician_by_geography(   year,   level = NULL,   sublevel = NULL,   fips = NULL,   hcpcs_code = NULL,   hcpcs_desc = NULL,   hcpcs_drug = NULL,   place_of_srvc = NULL,   tidy = TRUE )  physician_by_provider(   year,   npi = NULL,   first_name = NULL,   last_name = NULL,   organization_name = NULL,   credential = NULL,   gender = NULL,   entype = NULL,   city = NULL,   state = NULL,   zipcode = NULL,   fips = NULL,   ruca = NULL,   country = NULL,   specialty = NULL,   par = NULL,   tidy = TRUE )  physician_by_service(   year,   npi = NULL,   last_name = NULL,   first_name = NULL,   credential = NULL,   gender = NULL,   entype = NULL,   city = NULL,   state = NULL,   zipcode = NULL,   fips = NULL,   ruca = NULL,   country = NULL,   specialty = NULL,   par = NULL,   hcpcs_code = NULL,   hcpcs_drug = NULL,   place_of_srvc = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Centers Medicare & Medicaid Services Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"year int (required); Year YYYY format. Run helper function provider:::physician_by_service_years() return vector years currently available. level Identifies level geography data row aggregated. value 'State' indicates data row aggregated single state identified Rendering Provider State column given HCPCS Code Level. value 'National' indicates data row aggregated across states given HCPCS Code Level. sublevel state name provider located, reported NPPES. values include 50 United States, District Columbia, U.S. territories, Armed Forces areas, Unknown Foreign Country. Data aggregated National level identified word 'National'. fips FIPS code rendering provider's state. hcpcs_code HCPCS code used identify specific medical service furnished provider. HCPCS codes include two levels. Level codes Current Procedural Terminology (CPT) codes maintained American Medical Association Level II codes created CMS identify products, supplies services covered CPT codes (ambulance services). hcpcs_desc Description HCPCS code specific medical service furnished provider. HCPCS descriptions associated CPT codes consumer friendly descriptions provided AMA. CPT Consumer Friendly Descriptors lay synonyms CPT descriptors intended help healthcare consumers medical professionals understand clinical procedures bills patient portals. CPT Consumer Friendly Descriptors used clinical coding documentation. descriptions CMS Level II descriptions provided long form. Due variable length restrictions, CMS Level II descriptions truncated 256 bytes. result, HCPCS description can associated one HCPCS code. hcpcs_drug Identifies whether HCPCS code specific service furnished provider HCPCS listed Medicare Part B Drug Average Sales Price (ASP) File. Please visit ASP drug pricing page additional information. place_of_srvc Identifies whether place service submitted claims facility (value F) non-facility (value O). Non-facility generally office setting; however entities included non-facility. tidy Tidy output; default TRUE. npi National Provider Identifier (NPI) rendering provider claim. provider NPI numeric identifier registered NPPES. first_name individual provider's (entity type code = ) first name. organization's (entity type code = O) blank. last_name Last name/Organization name provider. provider registered NPPES individual (entity type code = ), provider’s last name. provider registered organization (entity type code = O), organization name. organization_name Organization name. credential individual provider's (entity type code=’’) credentials. organization's blank. gender individual provider's gender. organization's blank. entype Type entity reported NPPES. entity code ‘’ identifies providers registered individuals entity type code ‘O’ identifies providers registered organizations. city city provider located, reported NPPES. state state provider located, reported NPPES. zipcode provider’s zip code, reported NPPES. ruca Rural-Urban Commuting Area Code (RUCA); Census tract-based classification scheme utilizes standard Bureau Census Urbanized Area Urban Cluster definitions combination work commuting information characterize nation's Census tracts regarding rural urban status relationships. Referring Provider ZIP code cross walked United States Department Agriculture (USDA) 2010 Rural-Urban Commuting Area Codes. country country provider located, reported NPPES. specialty Derived provider specialty code reported claim. providers reported one specialty code claims, specialty code associated largest number services. par Identifies whether provider participates Medicare /accepts assignment Medicare allowed amounts. value Y provider least one claim identifying provider participating Medicare accepting assignment Medicare allowed amounts within HCPCS code place service. non-participating provider may elect accept Medicare allowed amounts services accept Medicare allowed amounts services.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"tibble containing search results. tibble containing search results. tibble containing 29 columns: year year npi year entype Entity/Enumeration Type Provider first_name year middle_name year last_name year credential year gender year specialty year street provider’s street address city city provider located, reported NPPES. state State Abbreviation Provider fips State FIPS Code Provider zipcode Zip Code Provider ruca RUCA Code Provider country Country Code Provider par Medicare Participation Indicator hcpcs_cd HCPCS Code hcpcs_desc HCPCS Description hcpcs_drug HCPCS Drug Indicator pos Place Service tot_benes Number Medicare Beneficiaries tot_srvcs Number Services tot_day Number Distinct Medicare Beneficiary/Per Day Services avg_charge Average Submitted Charge Amount avg_allowed Average Medicare Allowed Amount avg_payment Average Medicare Payment Amount avg_std_pymt Average Medicare Standardized Payment Amount","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Geography Service dataset contains information utilization, payment (allowed amount Medicare payment), submitted charges organized HCPCS place service national table organized provider state, HCPCS place service state table. national state tables also include HCPCS drug indicator identify whether HCPCS product/service drug defined Medicare Part B Drug ASP list. Provider Service dataset provides information services procedures provided Medicare (fee--service) Part B beneficiaries physicians healthcare professionals. data based information gathered CMS administrative claims data Part B beneficiaries available CMS Chronic Conditions Data Warehouse. spending utilization data Physician Practitioners Provider Service Dataset aggregated following: NPI performing provider, Healthcare Common Procedure Coding System (HCPCS) code, place service (either facility non-facility). can multiple records given NPI based number distinct HCPCS codes billed services provided. Data aggregated based place service separate fee schedules apply depending whether place service submitted claim facility non-facility.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Medicare Physician & Practitioners: Geography Service API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Update Frequency: Annually Update Frequency: Annually","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":"links-1","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Medicare Physician & Practitioners: Provider API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":"update-frequency","dir":"Reference","previous_headings":"","what":"Update Frequency","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"*Annually","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"Medicare Physician & Practitioners: Provider Service API","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/provider-statistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Physician & Other Practitioners API\nby Geography and Service — physician_by_geography","text":"","code":"if (FALSE) { # interactive() physician_by_geography(hcpcs_code = \"0002A\", year = 2020) service <- purrr::map_dfr(as.character(2013:2020),            ~physician_by_service(npi = 1003000126, year = .x))  procedures <- service |>               dplyr::distinct(hcpcs_cd) |>               tibble::deframe()  arg_cross <- purrr::cross_df(list(              x = as.character(2013:2020),              y = procedures))  # National Level purrr::map2_dfr(arg_cross$x, arg_cross$y, ~physician_by_geography(geo_level = \"National\", year = .x, hcpcs_code = .y))  # State Level purrr::map2_dfr(arg_cross$x, arg_cross$y, ~physician_by_geography(geo_level = \"Georgia\", year = .x, hcpcs_code = .y)) } if (FALSE) { # interactive() physician_by_provider(year = 2020,                       npi = 1003000423)  # Use the years helper function to retrieve results for every year: physician_by_provider_years() |> map(\\(x) physician_by_provider(year = x, npi = 1043477615)) |> list_rbind() } if (FALSE) { # interactive() physician_by_service(npi = 1003000126) physician_by_service(year = 2019, last_name = \"Enkeshafi\") c(1003026055, 1316405939, 1720392988) |>   purrr::map(physician_by_service, year = 2020) |>   purrr::list_rbind() }"},{"path":"https://andrewallenbruce.github.io/provider/reference/providers.html","id":null,"dir":"Reference","previous_headings":"","what":"Provider Enrollment in Medicare — providers","title":"Provider Enrollment in Medicare — providers","text":"providers() allows access enrollment level data individual organizational providers actively approved bill Medicare.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/providers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provider Enrollment in Medicare — providers","text":"","code":"providers(   npi = NULL,   pac_id = NULL,   enroll_id = NULL,   specialty_code = NULL,   specialty = NULL,   state = NULL,   first_name = NULL,   middle_name = NULL,   last_name = NULL,   organization_name = NULL,   gender = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/providers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provider Enrollment in Medicare — providers","text":"npi 10-digit National Provider Identifier pac_id 10-digit Provider associate level variable. Links entity-level information may associated multiple enrollment IDs individual organization enrolled multiple times. enroll_id 15-digit Provider enrollment ID. Assigned new provider enrollment application. Links enrollment-level information (enrollment type, state, reassignment benefits). specialty_code Enrollment primary specialty type code. specialty Enrollment specialty type description. state Enrollment state abbreviation. Since Providers enroll state level, PAC ID can associated multiple enrollment IDs states. first_name Individual provider first name middle_name Individual provider middle name last_name Individual provider last name organization_name Organizational provider name gender Individual provider gender. Options : F: Female M: Male 9: Unknown (Organizational provider) tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/providers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provider Enrollment in Medicare — providers","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/providers.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Provider Enrollment in Medicare — providers","text":"Provider Enrollment API Provider Enrollment Data Dictionary","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/providers.html","id":"update-frequency","dir":"Reference","previous_headings":"","what":"Update Frequency","title":"Provider Enrollment in Medicare — providers","text":"Quarterly","code":""},{"path":[]},{"path":"https://andrewallenbruce.github.io/provider/reference/providers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provider Enrollment in Medicare — providers","text":"","code":"if (FALSE) { # interactive() providers(npi = 1417918293, specialty_code = \"14-41\") providers(pac_id = 2860305554, gender = \"9\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/quality_payment.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality Payment Program Experience — quality_payment","title":"Quality Payment Program Experience — quality_payment","text":"Information participation performance Merit-based Incentive Payment System (MIPS) Advanced Alternative Payment Models (APMs) tracks. Data pulled across CMS used create eligibility determination clinician. Using CMS knows clinician billing patterns enrollments, eligibility \"calculated\" multiple times performance year. Data pulled across CMS used create eligibility determination clinician. Using CMS knows clinician billing patterns enrollments, eligibility \"calculated\" multiple times performance year.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/quality_payment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality Payment Program Experience — quality_payment","text":"","code":"quality_payment(   year,   npi = NULL,   state = NULL,   specialty = NULL,   participation_type = NULL,   tidy = TRUE )  quality_eligibility(year, npi, tidy = TRUE)  quality_stats(year)"},{"path":"https://andrewallenbruce.github.io/provider/reference/quality_payment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality Payment Program Experience — quality_payment","text":"year QPP program year npi NPI assigned clinician enrolled Medicare. state State US territory code location TIN associated clinician. specialty specialty description identifier corresponding type service clinician submitted Medicare Part B claims TIN/NPI combination. participation_type Indicates level performance data collected, submitted reported final score attributed clinician. information drives data displayed remaining fields report. tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/quality_payment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality Payment Program Experience — quality_payment","text":"tibble containing search results. tibble containing search results. tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/quality_payment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quality Payment Program Experience — quality_payment","text":"Quality Payment Program (QPP) Experience dataset provides participation performance information Merit-based Incentive Payment System (MIPS) performance year. cover eligibility participation, performance categories, final score payment adjustments. dataset provides additional details TIN/NPI level published previous performance year. can sort data variables like clinician type, practice size, scores, payment adjustments. Quality Payment Program (QPP) Eligibility System pulls together data across Centers Medicare Medicaid Services (CMS) create eligibility determination every clinician system. Using CMS knows clinician billing patterns enrollments, eligibility \"calculated\" multiple times performance year. Information can obtained primarily Clinician type. can query Clinician type passing National Provider Identifier, NPI. number unique 10-digit identification number issued health care providers United States CMS. information contained endpoints includes basic enrollment information, associated organizations, information organizations, individual group special status information, future, available Alternative Payment Model (APM) affiliations.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/quality_payment.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Quality Payment Program Experience — quality_payment","text":"Quality Payment Program Experience QPP Eligibility API Documentation QPP Eligibility API Documentation","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/quality_payment.html","id":"update-frequency","dir":"Reference","previous_headings":"","what":"Update Frequency","title":"Quality Payment Program Experience — quality_payment","text":"Annually Annually Annually","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/quality_payment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quality Payment Program Experience — quality_payment","text":"","code":"if (FALSE) { # interactive() quality_payment(year = 2020, npi = 1144544834) } if (FALSE) { # interactive() quality_eligibility(year = 2020, npi = 1144544834) } quality_stats(year = 2020) #> # A tibble: 4 × 4 #>    year type       stat                     value #>   <int> <chr>      <chr>                    <dbl> #> 1  2020 Individual HCC Risk Score Average   2.50  #> 2  2020 Individual Dual Eligibility Average 0.507 #> 3  2020 Group      HCC Risk Score Average   2.53  #> 4  2020 Group      Dual Eligibility Average 0.501"},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Revalidation Due Date List API — revalidation_date","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"Information revalidation due dates Medicare providers. Medicare Providers must validate enrollment record every three five years. CMS sets every Provider’s Revalidation due date end month posts upcoming six seven months due dates online. due date ‘TBD’ means CMS set due date yet. lists refreshed every two months two months’ worth due dates appended list","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"","code":"revalidation_date(   npi = NULL,   enroll_id = NULL,   first_name = NULL,   last_name = NULL,   org_name = NULL,   state = NULL,   type_code = NULL,   prov_type = NULL,   specialty = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"npi National Provider Identifier (NPI) enroll_id Enrollment ID first_name First name individual provider last_name Last name individual provider org_name Legal business name organizational provider state Enrollment state type_code Provider enrollment type code (1 Part ; 2 DME; 3 Non-DME Part B) prov_type Provider type description specialty Enrollment specialty tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"Revalidation Due Date List dataset contains revalidation due dates Medicare providers due revalidate following six months. provider's due date fall within ensuing six months, due date marked 'TBD'. addition dataset also includes subfiles reassignment information given provider well due date listings clinics group practices providers.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"Medicare Revalidation Due Date API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"Update Frequency: Monthly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Revalidation Due Date List API — revalidation_date","text":"","code":"if (FALSE) { # interactive() revalidation_date(enroll_id = \"I20031110000070\",                   npi = 1184699621)  revalidation_date(first_name = \"Eric\",                   last_name = \"Byrd\")  revalidation_date(state = \"FL\",                   type_code = \"3\",                   specialty = \"General Practice\")  revalidation_date(enroll_id = \"O20110620000324\",                   org_name = \"Lee Memorial Health System\",                   state = \"FL\",                   prov_type = \"DME\",                   type_code = \"2\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"Information clinic group practice revalidation Medicare enrollment.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"","code":"revalidation_group(   npi = NULL,   enroll_id = NULL,   first_name = NULL,   last_name = NULL,   state = NULL,   specialty = NULL,   pac_id_group = NULL,   enroll_id_group = NULL,   business_name = NULL,   state_group = NULL,   record_type = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"npi NPI provider reassigning benefits employee enroll_id Enrollment ID provider reassigning benefits employee first_name First name provider reassigning benefits employee last_name Last name provider reassigning benefits employee state Enrollment state provider reassigning benefits employee specialty Enrollment specialty provider reassigning benefits employee pac_id_group PAC ID provider receiving reassignment employer. Providers enroll state level, one PAC ID may associated multiple Enrollment IDs. enroll_id_group Enrollment ID provider receiving reassignment employer business_name Legal business name provider receiving reassignment employer state_group Enrollment state provider receiving reassignment employer record_type Identifies whether record reassignment (Reassignment) employment (Physician Assistant) tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"Revalidation Clinic Group Practice Reassignment dataset provides information physician group practice reassign billing . also includes individual employer association counts revalidation dates individual physician well clinic group practice.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"Medicare Revalidation Clinic Group Practice Reassignment API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"Update Frequency: Monthly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Revalidation Clinic Group Practice Reassignment API — revalidation_group","text":"","code":"if (FALSE) { # interactive() revalidation_group(enroll_id = \"I20200929003184\",                    npi = 1962026229,                    first_name = \"Rashadda\",                    last_name = \"Wong\",                    state = \"CT\",                    specialty = \"Physician Assistant\")  revalidation_group(pac_id_group = 9436483807,                    enroll_id_group = \"O20190619002165\",                    business_name = \"1st Call Urgent Care\",                    state_group = \"FL\",                    record_type = \"Reassignment\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_reassign.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the Medicare Revalidation Reassignment List API — revalidation_reassign","title":"Search the Medicare Revalidation Reassignment List API — revalidation_reassign","text":"Reassignments Providers due Revalidation.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_reassign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the Medicare Revalidation Reassignment List API — revalidation_reassign","text":"","code":"revalidation_reassign(   npi = NULL,   enroll_id = NULL,   first_name = NULL,   last_name = NULL,   state = NULL,   specialty = NULL,   pac_id_group = NULL,   enroll_id_group = NULL,   business_name = NULL,   state_group = NULL,   record_type = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_reassign.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Search the Medicare Revalidation Reassignment List API — revalidation_reassign","text":"Centers Medicare & Medicaid Services","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_reassign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the Medicare Revalidation Reassignment List API — revalidation_reassign","text":"npi NPI provider reassigning benefits employee enroll_id Enrollment ID provider reassigning benefits employee first_name First name provider reassigning benefits employee last_name Last name provider reassigning benefits employee state Enrollment state provider reassigning benefits employee specialty Enrollment specialty provider reassigning benefits employee pac_id_group PAC ID provider receiving reassignment employer. Providers enroll state level, one PAC ID may associated multiple Enrollment IDs. enroll_id_group Enrollment ID provider receiving reassignment employer business_name Legal business name provider receiving reassignment employer state_group Enrollment state provider receiving reassignment employer record_type Identifies whether record reassignment (Reassignment) employment (Physician Assistant) tidy Tidy output; default TRUE.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_reassign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the Medicare Revalidation Reassignment List API — revalidation_reassign","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_reassign.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search the Medicare Revalidation Reassignment List API — revalidation_reassign","text":"Revalidation Reassignment List dataset provides information reassignments providers due revalidation.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_reassign.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Search the Medicare Revalidation Reassignment List API — revalidation_reassign","text":"Medicare Revalidation Reassignment List API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_reassign.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search the Medicare Revalidation Reassignment List API — revalidation_reassign","text":"Update Frequency: Monthly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/revalidation_reassign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the Medicare Revalidation Reassignment List API — revalidation_reassign","text":"","code":"if (FALSE) { # interactive() revalidation_reassign(enroll_id = \"I20200929003184\",                    npi = 1962026229,                    first_name = \"Rashadda\",                    last_name = \"Wong\",                    state = \"CT\",                    specialty = \"Physician Assistant\")  revalidation_reassign(pac_id_group = 9436483807,                    enroll_id_group = \"O20190619002165\",                    business_name = \"1st Call Urgent Care\",                    state_group = \"FL\",                    record_type = \"Reassignment\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomy to Medicare Specialty Crosswalk — taxonomy_crosswalk","title":"Taxonomy to Medicare Specialty Crosswalk — taxonomy_crosswalk","text":"taxonomy_crosswalk() allows search types providers suppliers eligible Medicare programs taxonomy code Medicare specialty type code.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"taxonomy-codes","dir":"Reference","previous_headings":"","what":"Taxonomy Codes","title":"Taxonomy to Medicare Specialty Crosswalk — taxonomy_crosswalk","text":"Healthcare Provider Taxonomy Code Set hierarchical HIPAA standard code set designed categorize type, classification, specialization health care providers. consists two sections: Individuals Groups Individuals Non-Individuals applying NPI, provider must report taxonomy closely describes type/classification/specialization. situations, provider may need report one taxonomy must indicate one primary. codes selected may categorizations used Medicare enrollment.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomy to Medicare Specialty Crosswalk — taxonomy_crosswalk","text":"","code":"taxonomy_crosswalk(   taxonomy_code = NULL,   taxonomy_description = NULL,   medicare_specialty_code = NULL,   medicare_specialty_type = NULL,   tidy = TRUE )"},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxonomy to Medicare Specialty Crosswalk — taxonomy_crosswalk","text":"taxonomy_code Taxonomy code taxonomy_description Taxonomy code description medicare_specialty_code Medicare specialty code medicare_specialty_type Medicare specialty code description tidy Tidy output; default TRUE","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taxonomy to Medicare Specialty Crosswalk — taxonomy_crosswalk","text":"tibble containing search results.","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Taxonomy to Medicare Specialty Crosswalk — taxonomy_crosswalk","text":"Provider Supplier Taxonomy Crosswalk Taxonomy Crosswalk Methodology Find Taxonomy Code","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"update-frequency","dir":"Reference","previous_headings":"","what":"Update Frequency","title":"Taxonomy to Medicare Specialty Crosswalk — taxonomy_crosswalk","text":"Weekly","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/taxonomy_crosswalk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxonomy to Medicare Specialty Crosswalk — taxonomy_crosswalk","text":"","code":"if (FALSE) { # interactive() taxonomy_crosswalk(medicare_specialty_code = \"B4[14]\") taxonomy_crosswalk(medicare_specialty_type = \"Rehabilitation Agency\") taxonomy_crosswalk(taxonomy_code = \"2086S0102X\") }"},{"path":"https://andrewallenbruce.github.io/provider/reference/years.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the current years available for the Multiple Chronic Conditions API — cc_multiple_years","title":"Check the current years available for the Multiple Chronic Conditions API — cc_multiple_years","text":"Check current years available Multiple Chronic Conditions API Check current years available Specific Chronic Conditions API Check current years available Open Payments API Check current years available Physician & Practitioners Geography Service API Check current years available Physician & Practitioners Provider API Check current years available Physician & Practitioners Provider Service API Check current years available Quality Payments API","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the current years available for the Multiple Chronic Conditions API — cc_multiple_years","text":"","code":"cc_multiple_years()  cc_specific_years()  open_payments_years()  physician_by_geography_years()  physician_by_provider_years()  physician_by_service_years()  quality_payment_years()"},{"path":"https://andrewallenbruce.github.io/provider/reference/years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the current years available for the Multiple Chronic Conditions API — cc_multiple_years","text":"integer vector years available integer vector years available integer vector years available integer vector years available integer vector years available integer vector years available integer vector years available","code":""},{"path":"https://andrewallenbruce.github.io/provider/reference/years.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the current years available for the Multiple Chronic Conditions API — cc_multiple_years","text":"","code":"cc_multiple_years() #>  [1] 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 cc_specific_years() #>  [1] 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 open_payments_years() #> [1] 2016 2017 2018 2019 2020 2021 2022 physician_by_geography_years() #> [1] 2013 2014 2015 2016 2017 2018 2019 2020 2021 physician_by_provider_years() #> [1] 2013 2014 2015 2016 2017 2018 2019 2020 2021 physician_by_service_years() #> [1] 2013 2014 2015 2016 2017 2018 2019 2020 2021 quality_payment_years() #> [1] 2017 2018 2019 2020 2021"},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009012-2023-03-23","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9012 (2023-03-23)","title":"provider 0.0.0.9012 (2023-03-23)","text":"previous version.","code":""},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009011-2023-02-27","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9011 (2023-02-27)","title":"provider 0.0.0.9011 (2023-02-27)","text":"nppes_npi_new implementation","code":""},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009010-2023-02-08","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9010 (2023-02-08)","title":"provider 0.0.0.9010 (2023-02-08)","text":"added hospital_enrollment() function","code":""},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009009-2023-02-08","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9009 (2023-02-08)","title":"provider 0.0.0.9009 (2023-02-08)","text":"implemented cms_update_ids() applicable functions","code":""},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009008-2023-02-07","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9008 (2023-02-07)","title":"provider 0.0.0.9008 (2023-02-07)","text":"added addl_phone_numbers() function added nucc_taxonomy_230 dataset added examples new functions","code":""},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009007-2023-02-04","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9007 (2023-02-04)","title":"provider 0.0.0.9007 (2023-02-04)","text":"doctors_and_clinicians() function facility_affiliations() function","code":""},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009006-2023-02-03","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9006 (2023-02-03)","title":"provider 0.0.0.9006 (2023-02-03)","text":"pending_applications() function","code":""},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009005-2023-01-22","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9005 (2023-01-22)","title":"provider 0.0.0.9005 (2023-01-22)","text":"nesting larger outputs","code":""},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009004-2023-01-21","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9004 (2023-01-21)","title":"provider 0.0.0.9004 (2023-01-21)","text":"initial implementation distribution id update functions open_payments() vignette","code":""},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009003-2023-01-16","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9003 (2023-01-16)","title":"provider 0.0.0.9003 (2023-01-16)","text":"open_payments() function added","code":""},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009002-2023-01-05","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9002 (2023-01-05)","title":"provider 0.0.0.9002 (2023-01-05)","text":"previous version.","code":""},{"path":"https://andrewallenbruce.github.io/provider/news/index.html","id":"provider-0009001-2022-08-31","dir":"Changelog","previous_headings":"","what":"provider 0.0.0.9001 (2022-08-31)","title":"provider 0.0.0.9001 (2022-08-31)","text":"Updated README.","code":""}]
